{"version":3,"file":"static/js/4170.96d21a78.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/debounce-ea0579b2.js","../node_modules/@dytesdk/ui-kit/dist/esm/dyte-virtualized-participant-list.entry.js"],"sourcesContent":["import { i as isObjectLike, b as baseGetTag, a as isObject, r as root } from './isObjectLike-773b9473.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nconst now$1 = now;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now$1();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now$1());\n  }\n\n  function debounced() {\n    var time = now$1(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport { debounce as d };\n","import { r as registerInstance, h, a as getElement } from './index-08f4416b.js';\nimport { d as debounce } from './debounce-ea0579b2.js';\nimport './isObjectLike-773b9473.js';\n\nconst dyteVirtualizedParticipantListCss = \":host{height:100%;width:100%}\";\nconst DyteVirtualizedParticipantListStyle0 = dyteVirtualizedParticipantListCss;\n\nconst DyteVirtualizedParticipantList = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Items to be virtualized */\n        this.items = [];\n        /** Height of each item in pixels (assumed fixed) */\n        this.itemHeight = 55; // Mutable so we can update it\n        /** Buffer items to render before and after the visible area */\n        this.bufferedItemsCount = 5;\n        /** Element to render if list is empty */\n        this.emptyListElement = null;\n        this.visibleStart = 0; // Start of visible items\n        this.visibleEnd = 0; // End of visible items\n        this.containerHeight = 0; // Height of the container\n        this.lastScrollTop = 0; // To track and restore scrollTop\n        this.recalculatePositioning = () => {\n            // Measure container height and update visible items\n            this.updateContainerHeight();\n            // Check for the first item height\n            requestAnimationFrame(() => {\n                this.updateItemHeight();\n            });\n        };\n        this.updateContainerHeight = () => {\n            if (!this.el.querySelector('.virtual-list-container').clientHeight) {\n                return;\n            }\n            // Check for the first item height\n            requestAnimationFrame(() => {\n                this.updateItemHeight();\n            });\n            this.containerHeight = this.el.querySelector('.virtual-list-container').clientHeight;\n            this.updateVisibleRange();\n        };\n        this.onScroll = debounce(() => {\n            const scrollTop = this.el.querySelector('.virtual-list-container').scrollTop;\n            if (scrollTop > this.lastScrollTop && this.visibleEnd === this.items.length) {\n                return;\n            }\n            // Track scrollTop for resetting after re-render\n            this.lastScrollTop = scrollTop;\n            this.updateVisibleRange();\n        });\n    }\n    itemsChanged() {\n        this.recalculatePositioning();\n    }\n    componentDidLoad() {\n        this.recalculatePositioning();\n        // Set up the scroll event listener\n        this.el.querySelector('.virtual-list-container').addEventListener('scroll', this.onScroll);\n        window.addEventListener('resize', this.recalculatePositioning);\n    }\n    componentDidUpdate() {\n        // Update item height if it changes\n        this.updateItemHeight();\n    }\n    disconnectedCallback() {\n        // Remove event listeners to prevent memory leaks\n        this.el.querySelector('.virtual-list-container').removeEventListener('scroll', this.onScroll);\n        window.removeEventListener('resize', this.recalculatePositioning);\n    }\n    updateVisibleRange() {\n        // Get the current scroll position\n        const scrollTop = this.el.querySelector('.virtual-list-container').scrollTop;\n        // Calculate the start and end of visible items based on scroll position and item height\n        const startIndex = Math.floor(scrollTop / this.itemHeight);\n        // Calculate the number of fully visible items and include an extra one if there's a partially visible one\n        const visibleCount = Math.ceil(this.containerHeight / this.itemHeight);\n        // The end index should include the buffer and partially visible item\n        const endIndex = Math.min(this.items.length, startIndex + visibleCount + this.bufferedItemsCount);\n        // Update the visible range in the component's state\n        this.visibleStart = startIndex;\n        this.visibleEnd = endIndex;\n        // Reset the scroll position to ensure smooth rendering\n        this.el.querySelector('.virtual-list-container').scrollTop = this.lastScrollTop;\n    }\n    updateItemHeight() {\n        // Get the first rendered item\n        const firstRenderedItem = this.el.querySelector('.virtual-list-item');\n        if (firstRenderedItem) {\n            // Temporarily remove the height style to let the browser compute natural height\n            const originalHeight = firstRenderedItem.style.height;\n            firstRenderedItem.style.height = 'auto'; // Let it take natural height\n            // Measure the natural height\n            const naturalHeight = firstRenderedItem.getBoundingClientRect().height;\n            // Reapply the original height (if needed)\n            if (originalHeight) {\n                firstRenderedItem.style.height = originalHeight;\n            }\n            // Check if the measured height differs from the current itemHeight\n            if (naturalHeight && Math.floor(naturalHeight) !== Math.floor(this.itemHeight)) {\n                this.itemHeight = naturalHeight;\n            }\n        }\n    }\n    renderItems() {\n        // Slice the items array to only render the visible and buffered items\n        const visibleItems = this.items.slice(this.visibleStart, this.visibleEnd);\n        // Render each visible item at the correct position using absolute positioning\n        return visibleItems.map((item, index) => {\n            const itemIndex = this.visibleStart + index;\n            return (h(\"div\", { class: \"virtual-list-item\", key: item.id, style: {\n                    position: 'absolute',\n                    top: `${itemIndex * this.itemHeight}px`,\n                    height: `${this.itemHeight}px`,\n                    width: '100%',\n                } }, this.renderItem(item, itemIndex)));\n        });\n    }\n    render() {\n        var _a;\n        const totalHeight = this.items.length * this.itemHeight; // Total height of the list\n        return (h(\"div\", { key: '1b37d3baa0af9ff413be304f5368849d20a47b23', class: \"virtual-list-container\", style: {\n                position: 'relative',\n                height: '100%',\n                overflowX: 'hidden',\n                overflowY: 'auto',\n            } }, h(\"div\", { key: '6bfd8b0993b3a78ea2317715e54c68cb4458ec5a', style: { height: `${totalHeight}px`, position: 'relative' } }, !((_a = this.items) === null || _a === void 0 ? void 0 : _a.length) ? this.emptyListElement : this.renderItems()), h(\"div\", { key: 'c6917ed47b4f3d579809f0b620f94aaf25779137', style: { height: `${this.itemHeight}px` } })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"items\": [\"itemsChanged\"]\n    }; }\n};\nDyteVirtualizedParticipantList.style = DyteVirtualizedParticipantListStyle0;\n\nexport { DyteVirtualizedParticipantList as dyte_virtualized_participant_list };\n"],"names":["symbolTag","reWhitespace","reTrimStart","baseTrim","string","slice","index","length","test","charAt","trimmedEndIndex","replace","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","value","isObjectLike","baseGetTag","isSymbol","isObject","other","valueOf","isBinary","now$1","root","Date","now","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","clearTimeout","cancel","flush","DyteVirtualizedParticipantList","constructor","hostRef","registerInstance","items","itemHeight","bufferedItemsCount","emptyListElement","visibleStart","visibleEnd","containerHeight","lastScrollTop","recalculatePositioning","updateContainerHeight","requestAnimationFrame","updateItemHeight","el","querySelector","clientHeight","updateVisibleRange","onScroll","scrollTop","itemsChanged","componentDidLoad","addEventListener","window","componentDidUpdate","disconnectedCallback","removeEventListener","startIndex","floor","visibleCount","ceil","endIndex","firstRenderedItem","originalHeight","style","height","naturalHeight","getBoundingClientRect","renderItems","map","item","itemIndex","h","class","key","id","position","top","concat","width","renderItem","render","_a","totalHeight","overflowX","overflowY","getElement","watchers"],"sourceRoot":""}