{"version":3,"file":"static/js/5548.00d09557.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/debounce-ea0579b2.js","../node_modules/@dytesdk/ui-kit/dist/esm/dyte-message-list-view.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-25aba8a9.js"],"sourcesContent":["import { i as isObjectLike, b as baseGetTag, a as isObject, r as root } from './isObjectLike-773b9473.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nconst now$1 = now;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now$1();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now$1());\n  }\n\n  function debounced() {\n    var time = now$1(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport { debounce as d };\n","import { r as registerInstance, w as writeTask, h } from './index-08f4416b.js';\nimport { a as defaultIconPack } from './ui-store-11740cb4.js';\nimport { S as SyncWithStore } from './index-25aba8a9.js';\nimport { d as debounce } from './debounce-ea0579b2.js';\nimport './isObjectLike-773b9473.js';\n\nconst dyteMessageListViewCss = \":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}.scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\\\.5, 6px);width:var(--dyte-space-1\\\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}.loading{cursor:wait}.content-wrapper{height:100%;overflow-y:auto;position:relative;contain:strict}.scroller{width:1px;opacity:0}.content{position:absolute;top:0;width:100%}.smallest-dom-element{width:100%;height:2px;background:red}.loader{margin-top:var(--dyte-space-2, 8px);margin-bottom:var(--dyte-space-2, 8px);display:flex;justify-content:center}\";\nconst DyteMessageListViewStyle0 = dyteMessageListViewCss;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst MAX_VISIBLE_ITEMS = 20;\nconst OVERSCAN_BUFFER = 5;\nconst DyteMessageListView = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Maximum visible messages */\n        this.visibleItemsCount = MAX_VISIBLE_ITEMS;\n        /** Estimated height of an item */\n        this.estimateItemSize = 100;\n        /** Icon pack */\n        this.iconPack = defaultIconPack;\n        this.isFetching = false;\n        this.autoScroll = true;\n        this.totalHeight = 0;\n        this.sizes = new Map();\n        this.lastScrollTop = 0;\n        this.scrollToBottomRetries = 0;\n        this.elementObserver = (() => {\n            let _ro = null;\n            const get = () => {\n                if (_ro) {\n                    return _ro;\n                }\n                else if (typeof ResizeObserver !== 'undefined') {\n                    return (_ro = new ResizeObserver((entries) => {\n                        entries.forEach((entry) => {\n                            this.measureElement(entry.target, entry);\n                        });\n                    }));\n                }\n                else {\n                    return null;\n                }\n            };\n            return {\n                disconnect: () => { var _a; return (_a = get()) === null || _a === void 0 ? void 0 : _a.disconnect(); },\n                observe: (target) => { var _a; return (_a = get()) === null || _a === void 0 ? void 0 : _a.observe(target, { box: 'border-box' }); },\n                unobserve: (target) => { var _a; return (_a = get()) === null || _a === void 0 ? void 0 : _a.unobserve(target); },\n            };\n        })();\n        this.measureElement = (node, entry) => {\n            if (!node)\n                return;\n            const id = node.dataset.id;\n            if (this.sizes.has(id)) {\n                this.elementObserver.unobserve(node);\n                return;\n            }\n            if (entry) {\n                const box = entry.borderBoxSize[0];\n                if (box && box.blockSize > 0) {\n                    this.saveItemSize(id, box.blockSize);\n                    this.elementObserver.unobserve(node);\n                    return;\n                }\n            }\n            const rect = node.getBoundingClientRect();\n            if (rect.height > 0)\n                this.saveItemSize(id, rect.height);\n        };\n        this.getVisibleItems = () => {\n            return this.messages.slice(this.range.start, this.range.end + 1);\n        };\n        this.updateVisibleItems = (start, end) => {\n            const total = this.messages.length;\n            let newStart = start;\n            let newEnd = end;\n            if (total <= this.visibleItemsCount) {\n                // render all\n                newStart = 0;\n                newEnd = total - 1;\n            }\n            else if (end - start < this.visibleItemsCount - 1) {\n                // if range is less then visible, adjust start based on end\n                newStart = this.range.end - this.visibleItemsCount + 1;\n            }\n            if (this.range.start !== newStart) {\n                this.range = { start: newStart, end: newEnd };\n                this.totalHeight = this.getRangeSize(0, total);\n            }\n        };\n        this.getEstimatedItemSize = () => {\n            return this.estimateItemSize;\n        };\n        this.getRangeSize = (start, end) => {\n            let total = 0;\n            let itemSize = 0;\n            for (let index = start; index < end; index++) {\n                itemSize = this.sizes.get(this.messages[index].id);\n                total = total + (!!itemSize ? itemSize : this.getEstimatedItemSize());\n            }\n            return total;\n        };\n        this.getScrollTop = () => {\n            return this.$listRef ? Math.ceil(this.$listRef.scrollTop) : 0;\n        };\n        this.getClientHeight = () => {\n            return this.$listRef ? Math.ceil(this.$listRef.clientHeight) : 0;\n        };\n        this.getScrollHeight = () => {\n            return this.$listRef ? Math.ceil(this.$listRef.scrollHeight) : 0;\n        };\n        this.getItemsScrolled = () => {\n            const offset = this.lastScrollTop;\n            if (offset <= 0) {\n                return 0;\n            }\n            let low = 0;\n            let middle = 0;\n            let middleOffset = 0;\n            let high = this.messages.length;\n            while (low <= high) {\n                middle = (low + high) >>> 1;\n                middleOffset = this.getRangeSize(0, middle);\n                if (middleOffset === offset) {\n                    return middle;\n                }\n                else if (middleOffset < offset) {\n                    low = middle + 1;\n                }\n                else if (middleOffset > offset) {\n                    high = middle - 1;\n                }\n            }\n            return low > 0 ? --low : 0;\n        };\n        this.getEndByStart = (start) => {\n            return Math.min(start + this.visibleItemsCount, this.messages.length - 1);\n        };\n        this.scrollToOffset = (offset) => {\n            if (this.$listRef) {\n                this.$listRef.scrollTop = offset;\n            }\n        };\n        this.scrollToIndex = (index) => {\n            if (index >= this.messages.length - 1) {\n                this.scrollToBottom();\n            }\n            else {\n                const offset = index < 1 ? 0 : this.getRangeSize(0, index);\n                this.scrollToOffset(offset);\n            }\n        };\n        this.scrollToBottom = () => {\n            if (!this.$listEndRef)\n                return;\n            writeTask(() => {\n                this.$listEndRef.scrollIntoView();\n                if (this.getScrollHeight() - (this.getScrollTop() + this.getClientHeight()) > 0 &&\n                    this.scrollToBottomRetries < 10) {\n                    setTimeout(() => {\n                        this.scrollToBottom();\n                    }, 1000 / 60);\n                }\n                else {\n                    this.scrollToBottomRetries = 0;\n                    this.autoScroll = true;\n                }\n            });\n        };\n        this.handleScroll = async () => {\n            if (this.isFetching)\n                return;\n            const scrollTop = this.getScrollTop();\n            const direction = scrollTop < this.lastScrollTop || scrollTop === 0 ? 'UP' : 'DOWN';\n            this.lastScrollTop = scrollTop;\n            if (this.loadMore && scrollTop === 0 && direction === 'UP' && this.isFetching === false) {\n                this.isFetching = true;\n                const newMessages = await this.loadMore(this.messages[0]);\n                if (newMessages && newMessages.length) {\n                    this.messages = [...newMessages, ...this.messages];\n                }\n                this.isFetching = false;\n            }\n            if (direction === 'UP') {\n                this.handleTop();\n            }\n            else if (direction === 'DOWN') {\n                this.handleBottom();\n            }\n        };\n        this.handleTop = () => {\n            const scrolledItems = this.getItemsScrolled();\n            if (scrolledItems <= this.range.end - OVERSCAN_BUFFER) {\n                this.autoScroll = false;\n            }\n            if (scrolledItems > this.range.start + OVERSCAN_BUFFER) {\n                return;\n            }\n            const newStart = Math.max(this.range.start - OVERSCAN_BUFFER, 0);\n            this.updateVisibleItems(newStart, this.getEndByStart(newStart));\n        };\n        this.handleBottom = () => {\n            const scrolledItems = this.getItemsScrolled();\n            if (scrolledItems < this.range.start + OVERSCAN_BUFFER) {\n                return;\n            }\n            const newStart = this.range.start + OVERSCAN_BUFFER;\n            const newEnd = this.getEndByStart(newStart);\n            if (newEnd === this.messages.length - 1) {\n                this.updateVisibleItems(newEnd - this.visibleItemsCount, newEnd);\n            }\n            else {\n                this.updateVisibleItems(newStart, newEnd);\n            }\n        };\n        this.updateTotalHeight = debounce(() => {\n            this.totalHeight = this.getRangeSize(0, this.messages.length);\n        }, 1000 / 30, { leading: true });\n        this.rendererInternal = (containerElement, message, index) => {\n            if (!containerElement)\n                return;\n            if (containerElement.dataset.id === message.id)\n                return;\n            const viewElement = this.renderer(message, index);\n            if (containerElement.hasChildNodes) {\n                containerElement.innerHTML = '';\n            }\n            this.elementObserver.observe(containerElement);\n            containerElement.dataset.id = message.id;\n            containerElement.appendChild(viewElement);\n        };\n    }\n    connectedCallback() {\n        const total = this.messages.length - 1;\n        this.range = { start: total - this.visibleItemsCount, end: total };\n        this.updateVisibleItems(this.range.start, this.range.end);\n        this.totalHeight = this.getRangeSize(0, total);\n    }\n    componentDidLoad() {\n        if (this.autoScroll) {\n            this.scrollToBottom();\n        }\n    }\n    messagesUpdated(newValue, previousValue) {\n        if (newValue.length > previousValue.length) {\n            const diff = newValue.length - previousValue.length;\n            this.updateVisibleItems(diff, this.getEndByStart(diff));\n            this.scrollToIndex(this.range.start);\n        }\n    }\n    saveItemSize(id, height) {\n        this.sizes.set(id, Math.round(height));\n        this.updateTotalHeight();\n    }\n    render() {\n        return (h(\"div\", { key: '02660589d69e1290972669e40d032341aef9265f', class: \"scrollbar content-wrapper\", ref: (el) => (this.$listRef = el), onScroll: this.handleScroll }, h(\"div\", { key: '7e0741ead290cf3050001dd3990a87fa41bd00db', class: \"scroller\" }, h(\"div\", { key: '18a4d58c6ff888d1e11757eb4f4dd94d7f36ad42', style: {\n                height: `${this.totalHeight}px`,\n            } }), h(\"div\", { key: '44db5507f72fdd916e27dd1100dd34997b2c9e18', class: \"smallest-dom-element\", id: \"list-end\", ref: (el) => (this.$listEndRef = el) })), h(\"div\", { key: '64cb94699d06d72bf1559fa0d2c7dfff517d3c36', class: \"content\", style: {\n                transform: `translateY(${this.getRangeSize(0, this.range.start)}px)`,\n            } }, this.isFetching && (h(\"div\", { key: 'f55148d694e0e323882d9e2521cd9b5ef6779d3a', class: \"loader\" }, h(\"dyte-spinner\", { key: '84978cbf9a49e1552bdf39a5969ccf7bb152c475', size: \"md\" }))), this.getVisibleItems().map((msg, index) => (h(\"div\", { key: msg.id, ref: (el) => this.rendererInternal(el, msg, index) }))))));\n    }\n    static get watchers() { return {\n        \"messages\": [\"messagesUpdated\"]\n    }; }\n};\n__decorate([\n    SyncWithStore()\n], DyteMessageListView.prototype, \"iconPack\", void 0);\nDyteMessageListView.style = DyteMessageListViewStyle0;\n\nexport { DyteMessageListView as dyte_message_list_view };\n","import { a as getElement } from './index-08f4416b.js';\nimport { o as appendElement, q as removeElement, u as uiStore } from './ui-store-11740cb4.js';\n\nfunction SyncWithStore() {\n    return function (proto, propName) {\n        const { connectedCallback, disconnectedCallback } = proto;\n        proto.connectedCallback = function () {\n            const host = getElement(this);\n            const value = host[propName];\n            if (!value) {\n                const storeValue = uiStore.state[propName];\n                host[propName] = storeValue;\n                appendElement(propName, host);\n            }\n            return connectedCallback === null || connectedCallback === void 0 ? void 0 : connectedCallback.call(this);\n        };\n        proto.disconnectedCallback = function () {\n            removeElement(propName, getElement(this));\n            return disconnectedCallback === null || disconnectedCallback === void 0 ? void 0 : disconnectedCallback.call(this);\n        };\n    };\n}\n\nexport { SyncWithStore as S };\n"],"names":["symbolTag","reWhitespace","reTrimStart","baseTrim","string","slice","index","length","test","charAt","trimmedEndIndex","replace","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","value","isObjectLike","baseGetTag","isSymbol","isObject","other","valueOf","isBinary","now$1","root","Date","now","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","clearTimeout","cancel","flush","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DyteMessageListView","constructor","hostRef","registerInstance","visibleItemsCount","estimateItemSize","iconPack","defaultIconPack","isFetching","autoScroll","totalHeight","sizes","Map","lastScrollTop","scrollToBottomRetries","elementObserver","_ro","get","ResizeObserver","entries","forEach","entry","measureElement","disconnect","_a","observe","box","unobserve","node","id","dataset","has","borderBoxSize","blockSize","saveItemSize","rect","getBoundingClientRect","height","getVisibleItems","messages","range","start","end","updateVisibleItems","total","newStart","newEnd","getRangeSize","getEstimatedItemSize","itemSize","getScrollTop","$listRef","ceil","scrollTop","getClientHeight","clientHeight","getScrollHeight","scrollHeight","getItemsScrolled","offset","low","middle","middleOffset","high","getEndByStart","scrollToOffset","scrollToIndex","scrollToBottom","$listEndRef","writeTask","scrollIntoView","handleScroll","async","direction","loadMore","newMessages","handleTop","handleBottom","scrolledItems","updateTotalHeight","rendererInternal","containerElement","message","viewElement","renderer","hasChildNodes","innerHTML","appendChild","connectedCallback","componentDidLoad","messagesUpdated","newValue","previousValue","diff","set","round","render","h","class","ref","el","onScroll","style","concat","transform","size","map","msg","watchers","SyncWithStore","prototype","proto","propName","disconnectedCallback","host","getElement","storeValue","uiStore","state","appendElement","call","removeElement"],"sourceRoot":""}