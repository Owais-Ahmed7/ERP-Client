{"version":3,"file":"static/js/2457.7281a1ec.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-chat-toggle.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-25aba8a9.js","../node_modules/@dytesdk/ui-kit/dist/esm/sidebar-4dbf070b.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-08f4416b.js';\nimport { a as defaultIconPack, c as useLanguage, j as usePaginatedChat } from './ui-store-11740cb4.js';\nimport { c as canViewChat } from './sidebar-4dbf070b.js';\nimport { S as SyncWithStore } from './index-25aba8a9.js';\n\nconst dyteChatToggleCss = \":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{position:relative;display:block}.unread-count{position:absolute;right:var(--dyte-space-3, 12px);box-sizing:border-box;padding:var(--dyte-space-0\\\\.5, 2px);-webkit-user-select:none;-moz-user-select:none;user-select:none;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));font-size:12px;color:rgb(var(--dyte-colors-text-on-brand-1000, var(--dyte-colors-text-1000, 255 255 255)));display:flex;height:var(--dyte-space-5, 20px);min-width:var(--dyte-space-5, 20px);align-items:center;justify-content:center;border-radius:9999px;z-index:1}.unread-count-dot{position:absolute;right:var(--dyte-space-3, 12px);z-index:10;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));border-radius:50%;display:flex;height:var(--dyte-space-4, 16px);width:var(--dyte-space-4, 16px);align-items:center;justify-content:center}:host([variant='horizontal']){display:flex;flex-direction:row-reverse;align-items:center}:host([variant='horizontal']) .unread-count{right:var(--dyte-space-4, 16px);top:auto}\";\nconst DyteChatToggleStyle0 = dyteChatToggleCss;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst DyteChatToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n        this.unreadMessageCount = 0;\n        /** Variant */\n        this.variant = 'button';\n        /** Icon pack */\n        this.iconPack = defaultIconPack;\n        /** Language */\n        this.t = useLanguage();\n        this.chatActive = false;\n        this.canViewChat = false;\n        /**\n         * Only used when paginated chat is enabled\n         */\n        this.hasNewMessages = false;\n        this.onChatUpdate = ({ action, message }) => {\n            var _a;\n            if (this.chatActive)\n                return;\n            if (action === 'add' && message.userId !== ((_a = this.meeting) === null || _a === void 0 ? void 0 : _a.self.userId)) {\n                this.hasNewMessages = true;\n                this.unreadMessageCount += 1;\n            }\n        };\n        this.toggleChat = () => {\n            const states = this.states;\n            this.chatActive = !((states === null || states === void 0 ? void 0 : states.activeSidebar) && (states === null || states === void 0 ? void 0 : states.sidebar) === 'chat');\n            if (this.chatActive) {\n                this.unreadMessageCount = 0;\n                this.hasNewMessages = false;\n            }\n            this.stateUpdate.emit({\n                activeSidebar: this.chatActive,\n                sidebar: this.chatActive ? 'chat' : undefined,\n                activeMoreMenu: false,\n                activeAI: false,\n            });\n        };\n        this.updateCanView = () => {\n            this.canViewChat = canViewChat(this.meeting);\n        };\n    }\n    connectedCallback() {\n        this.meetingChanged(this.meeting);\n        this.statesChanged(this.states);\n    }\n    disconnectedCallback() {\n        var _a, _b, _c, _d, _e, _f;\n        (_b = (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.chat) === null || _b === void 0 ? void 0 : _b.removeListener('chatUpdate', this.onChatUpdate);\n        (_d = (_c = this.meeting) === null || _c === void 0 ? void 0 : _c.stage) === null || _d === void 0 ? void 0 : _d.removeListener('stageStatusUpdate', this.updateCanView);\n        (_f = (_e = this.meeting) === null || _e === void 0 ? void 0 : _e.self) === null || _f === void 0 ? void 0 : _f.permissions.removeListener('chatUpdate', this.updateCanView);\n    }\n    meetingChanged(meeting) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (meeting == null)\n            return;\n        if (usePaginatedChat(meeting)) {\n            (_a = meeting.chat) === null || _a === void 0 ? void 0 : _a.getMessages(new Date().getTime(), 1, true).then((res) => {\n                var _a;\n                if ((_a = res === null || res === void 0 ? void 0 : res.messages) === null || _a === void 0 ? void 0 : _a.length)\n                    this.hasNewMessages = true;\n            });\n        }\n        const meetingStartedTimeMs = (_c = (_b = meeting.meta) === null || _b === void 0 ? void 0 : _b.meetingStartedTimestamp.getTime()) !== null && _c !== void 0 ? _c : 0;\n        const newMessages = (_d = meeting.chat) === null || _d === void 0 ? void 0 : _d.messages.filter((m) => m.timeMs > meetingStartedTimeMs);\n        this.unreadMessageCount = newMessages.length || 0;\n        (_e = meeting.chat) === null || _e === void 0 ? void 0 : _e.addListener('chatUpdate', this.onChatUpdate);\n        this.canViewChat = canViewChat(meeting);\n        (_f = meeting === null || meeting === void 0 ? void 0 : meeting.stage) === null || _f === void 0 ? void 0 : _f.on('stageStatusUpdate', this.updateCanView);\n        (_g = meeting === null || meeting === void 0 ? void 0 : meeting.self) === null || _g === void 0 ? void 0 : _g.permissions.on('chatUpdate', this.updateCanView);\n    }\n    statesChanged(states) {\n        if (states != null) {\n            this.chatActive = states.activeSidebar === true && states.sidebar === 'chat';\n        }\n    }\n    render() {\n        if (!this.canViewChat)\n            return;\n        return (h(Host, { title: this.t('chat') }, usePaginatedChat(this.meeting)\n            ? this.hasNewMessages && h(\"div\", { class: \"unread-count-dot\", part: \"unread-count-dot\" })\n            : this.unreadMessageCount !== 0 &&\n                !this.chatActive && (h(\"div\", { class: \"unread-count\", part: \"unread-count\" }, h(\"span\", null, this.unreadMessageCount <= 100 ? this.unreadMessageCount : '99+'))), h(\"dyte-controlbar-button\", { part: \"controlbar-button\", size: this.size, iconPack: this.iconPack, class: { active: this.chatActive }, onClick: this.toggleChat, icon: this.iconPack.chat, label: this.t('chat'), variant: this.variant })));\n    }\n    static get watchers() { return {\n        \"meeting\": [\"meetingChanged\"],\n        \"states\": [\"statesChanged\"]\n    }; }\n};\n__decorate([\n    SyncWithStore()\n], DyteChatToggle.prototype, \"meeting\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteChatToggle.prototype, \"states\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteChatToggle.prototype, \"size\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteChatToggle.prototype, \"iconPack\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteChatToggle.prototype, \"t\", void 0);\nDyteChatToggle.style = DyteChatToggleStyle0;\n\nexport { DyteChatToggle as dyte_chat_toggle };\n","import { a as getElement } from './index-08f4416b.js';\nimport { o as appendElement, q as removeElement, u as uiStore } from './ui-store-11740cb4.js';\n\nfunction SyncWithStore() {\n    return function (proto, propName) {\n        const { connectedCallback, disconnectedCallback } = proto;\n        proto.connectedCallback = function () {\n            const host = getElement(this);\n            const value = host[propName];\n            if (!value) {\n                const storeValue = uiStore.state[propName];\n                host[propName] = storeValue;\n                appendElement(propName, host);\n            }\n            return connectedCallback === null || connectedCallback === void 0 ? void 0 : connectedCallback.call(this);\n        };\n        proto.disconnectedCallback = function () {\n            removeElement(propName, getElement(this));\n            return disconnectedCallback === null || disconnectedCallback === void 0 ? void 0 : disconnectedCallback.call(this);\n        };\n    };\n}\n\nexport { SyncWithStore as S };\n","import { v as isLiveStreamViewer } from './ui-store-11740cb4.js';\n\nconst canViewChat = (meeting) => {\n    if (meeting && !meeting.chat)\n        return false;\n    const { chatPublic, chatPrivate } = meeting.self.permissions;\n    return (chatPublic.canSend ||\n        chatPublic.canReceive || // TODO(ravindra-dyte): add web-core equivalent of chatPublic.canReceive, remove type casting\n        chatPublic.text ||\n        chatPublic.files ||\n        chatPrivate.canSend ||\n        chatPrivate.canReceive ||\n        chatPrivate.files ||\n        chatPrivate.text);\n};\nconst canViewPolls = (meeting) => {\n    if (meeting && !meeting.polls)\n        return false;\n    const { polls } = meeting.self.permissions;\n    return polls.canCreate || polls.canView || polls.canVote;\n};\nconst canViewParticipants = (meeting) => {\n    var _a;\n    if (!((_a = meeting.self.permissions) === null || _a === void 0 ? void 0 : _a.showParticipantList)) {\n        return false;\n    }\n    if (meeting && !meeting.participants)\n        return false;\n    const config = meeting === null || meeting === void 0 ? void 0 : meeting.self.config;\n    if (config && !config.controlBar.elements.participants)\n        return false;\n    return true;\n};\nconst canViewPlugins = (meeting) => {\n    if (isLiveStreamViewer(meeting))\n        return false;\n    if (meeting && !meeting.plugins)\n        return false;\n    if (meeting.meta.viewType === 'LIVESTREAM')\n        return meeting.stage.status === 'ON_STAGE';\n    const { plugins } = meeting.self.permissions;\n    return plugins.canClose || plugins.canStart;\n};\n\nexport { canViewParticipants as a, canViewPlugins as b, canViewChat as c, canViewPolls as d };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DyteChatToggle","constructor","hostRef","registerInstance","this","stateUpdate","createEvent","unreadMessageCount","variant","iconPack","defaultIconPack","t","useLanguage","chatActive","canViewChat","hasNewMessages","onChatUpdate","_ref","action","message","_a","userId","meeting","self","toggleChat","states","activeSidebar","sidebar","emit","undefined","activeMoreMenu","activeAI","updateCanView","connectedCallback","meetingChanged","statesChanged","disconnectedCallback","_b","_c","_d","_e","_f","chat","removeListener","stage","permissions","_g","usePaginatedChat","getMessages","Date","getTime","then","res","messages","meetingStartedTimeMs","meta","meetingStartedTimestamp","newMessages","filter","m","timeMs","addListener","on","render","h","Host","title","class","part","size","active","onClick","icon","label","watchers","SyncWithStore","prototype","style","proto","propName","host","getElement","storeValue","uiStore","state","appendElement","call","removeElement","chatPublic","chatPrivate","canSend","canReceive","text","files","canViewPolls","polls","canCreate","canView","canVote","canViewParticipants","showParticipantList","participants","config","controlBar","elements","canViewPlugins","isLiveStreamViewer","plugins","viewType","status","canClose","canStart"],"sourceRoot":""}