{"version":3,"file":"static/js/8116.5df7926e.chunk.js","mappings":"+JAGA,SAASA,IACL,OAAO,SAAUC,EAAOC,GACpB,MAAM,kBAAEC,EAAiB,qBAAEC,GAAyBH,EACpDA,EAAME,kBAAoB,WACtB,MAAME,GAAOC,EAAAA,EAAAA,GAAWC,MAExB,IADcF,EAAKH,GACP,CACR,MAAMM,EAAaC,EAAAA,EAAQC,MAAMR,GACjCG,EAAKH,GAAYM,GACjBG,EAAAA,EAAAA,GAAcT,EAAUG,EAC5B,CACA,OAA6B,OAAtBF,QAAoD,IAAtBA,OAA+B,EAASA,EAAkBS,KAAKL,KACxG,EACAN,EAAMG,qBAAuB,WAEzB,OADAS,EAAAA,EAAAA,GAAcX,GAAUI,EAAAA,EAAAA,GAAWC,OACH,OAAzBH,QAA0D,IAAzBA,OAAkC,EAASA,EAAqBQ,KAAKL,KACjH,CACJ,CACJ,C,8GCbA,IAAIO,EAAoD,SAAUC,EAAYC,EAAQC,EAAKC,GACvF,IAA2HC,EAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,EACrH,GAAuB,kBAAZQ,SAAoD,oBAArBA,QAAQC,SAC9CJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,QAE9C,IAAK,IAAIU,EAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KACpCT,EAAIJ,EAAWa,MACfL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,GAC/E,OAAOH,EAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,CAChE,EACA,MAAMO,EAAuB,MACzBC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiB1B,KAAMyB,GACvBzB,KAAK2B,aAAcC,EAAAA,EAAAA,GAAY5B,KAAM,kBAAmB,GAExDA,KAAK6B,QAAU,SAEf7B,KAAK8B,SAAWC,EAAAA,EAEhB/B,KAAKgC,GAAIC,EAAAA,EAAAA,KACTjC,KAAKkC,kBAAmB,EACxBlC,KAAKmC,uBAAwB,EAC7BnC,KAAKoC,mBAAqB,KACtBpC,KAAKkC,kBAAmBG,EAAAA,EAAAA,MAE5BrC,KAAKsC,iBAAmB,KACpB,IAAIC,EAAoBvC,KAAKwC,eAAiBC,SAASC,cAAc,gBAChEH,IAEAvC,KAAKkC,mBAKNS,EAAAA,EAAAA,KACA3C,KAAKkC,kBAAmB,KALxBU,EAAAA,EAAAA,GAAkBL,GAClBvC,KAAKkC,kBAAmB,GAM5BlC,KAAK2B,YAAYkB,KAAK,CAAEC,gBAAgB,KAEhD,CACAlD,iBAAAA,GACII,KAAKmC,uBAAwBA,EAAAA,EAAAA,KAC7BnC,KAAKoC,qBACLW,OAAOC,iBAAiB,yBAA0BhD,KAAKoC,oBACvDW,OAAOC,iBAAiB,mBAAoBhD,KAAKoC,mBACrD,CACAvC,oBAAAA,GACIkD,OAAOE,oBAAoB,yBAA0BjD,KAAKoC,oBAC1DW,OAAOE,oBAAoB,mBAAoBjD,KAAKoC,mBACxD,CACAc,MAAAA,GACI,OAAKlD,KAAKmC,uBAGFgB,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAOrD,KAAKgC,EAAE,iBAAkBmB,EAAAA,EAAAA,GAAE,yBAA0B,CAAEG,KAAMtD,KAAKsD,KAAMxB,SAAU9B,KAAK8B,SAAUyB,QAASvD,KAAKsC,iBAAkBkB,KAAMxD,KAAKkC,iBAC3JlC,KAAK8B,SAAS2B,qBACdzD,KAAK8B,SAAS4B,qBAAsBC,MAAO3D,KAAKkC,iBAAmBlC,KAAKgC,EAAE,oBAAsBhC,KAAKgC,EAAE,eAAgBH,QAAS7B,KAAK6B,WAJpI,IAKf,GAEJtB,EAAW,EACPd,EAAAA,EAAAA,MACD8B,EAAqBqC,UAAW,cAAU,GAC7CrD,EAAW,EACPd,EAAAA,EAAAA,MACD8B,EAAqBqC,UAAW,YAAQ,GAC3CrD,EAAW,EACPd,EAAAA,EAAAA,MACD8B,EAAqBqC,UAAW,gBAAY,GAC/CrD,EAAW,EACPd,EAAAA,EAAAA,MACD8B,EAAqBqC,UAAW,SAAK,GACxCrC,EAAqBsC,MA1EW,+N,2DCLhC,MAAMjB,EAAqBkB,IACb,MAANA,IAEwB,MAAxBA,EAAGC,kBACHD,EAAGC,oBAE6B,MAA3BD,EAAGE,qBAERF,EAAGE,uBAEgC,MAA9BF,EAAGG,wBAERH,EAAGG,0BAE4B,MAA1BH,EAAGI,qBAERJ,EAAGI,wBAGLvB,EAAgBA,KACa,MAA3BF,SAAS0B,eACT1B,SAAS0B,iBAE0B,MAA9B1B,SAAS2B,kBAEd3B,SAAS2B,oBAE6B,MAAjC3B,SAAS4B,qBAEd5B,SAAS4B,uBAEyB,MAA7B5B,SAAS6B,kBAEd7B,SAAS6B,oBAGXjC,EAAsBA,IACa,MAA9BI,SAAS8B,mBAAwE,MAA3C9B,SAAS+B,+BAEpDrC,EAAwBA,IACF,qBAAbM,WACCA,SAASgC,mBACbhC,SAASiC,sBACTjC,SAASkC,yBACTlC,SAASmC,oB","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/index-25aba8a9.js","../node_modules/@dytesdk/ui-kit/dist/esm/dyte-fullscreen-toggle.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/full-screen-1f58c594.js"],"sourcesContent":["import { a as getElement } from './index-08f4416b.js';\nimport { o as appendElement, q as removeElement, u as uiStore } from './ui-store-11740cb4.js';\n\nfunction SyncWithStore() {\n    return function (proto, propName) {\n        const { connectedCallback, disconnectedCallback } = proto;\n        proto.connectedCallback = function () {\n            const host = getElement(this);\n            const value = host[propName];\n            if (!value) {\n                const storeValue = uiStore.state[propName];\n                host[propName] = storeValue;\n                appendElement(propName, host);\n            }\n            return connectedCallback === null || connectedCallback === void 0 ? void 0 : connectedCallback.call(this);\n        };\n        proto.disconnectedCallback = function () {\n            removeElement(propName, getElement(this));\n            return disconnectedCallback === null || disconnectedCallback === void 0 ? void 0 : disconnectedCallback.call(this);\n        };\n    };\n}\n\nexport { SyncWithStore as S };\n","import { r as registerInstance, c as createEvent, h, H as Host } from './index-08f4416b.js';\nimport { a as defaultIconPack, c as useLanguage } from './ui-store-11740cb4.js';\nimport { i as isFullScreenEnabled, r as requestFullScreen, e as exitFullSreen, a as isFullScreenSupported } from './full-screen-1f58c594.js';\nimport { S as SyncWithStore } from './index-25aba8a9.js';\n\nconst dyteFullscreenToggleCss = \":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:block}\";\nconst DyteFullscreenToggleStyle0 = dyteFullscreenToggleCss;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst DyteFullscreenToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n        /** Variant */\n        this.variant = 'button';\n        /** Icon pack */\n        this.iconPack = defaultIconPack;\n        /** Language */\n        this.t = useLanguage();\n        this.fullScreenActive = false;\n        this.isFullScreenSupported = true;\n        this.onFullScreenchange = () => {\n            this.fullScreenActive = isFullScreenEnabled();\n        };\n        this.toggleFullScreen = () => {\n            let fullScreenElement = this.targetElement || document.querySelector('dyte-meeting');\n            if (!fullScreenElement)\n                return;\n            if (!this.fullScreenActive) {\n                requestFullScreen(fullScreenElement);\n                this.fullScreenActive = true;\n            }\n            else {\n                exitFullSreen();\n                this.fullScreenActive = false;\n            }\n            this.stateUpdate.emit({ activeMoreMenu: false });\n        };\n    }\n    connectedCallback() {\n        this.isFullScreenSupported = isFullScreenSupported();\n        this.onFullScreenchange();\n        window.addEventListener('webkitfullscreenchange', this.onFullScreenchange);\n        window.addEventListener('fullscreenchange', this.onFullScreenchange);\n    }\n    disconnectedCallback() {\n        window.removeEventListener('webkitfullscreenchange', this.onFullScreenchange);\n        window.removeEventListener('fullscreenchange', this.onFullScreenchange);\n    }\n    render() {\n        if (!this.isFullScreenSupported) {\n            return null;\n        }\n        return (h(Host, { title: this.t('full_screen') }, h(\"dyte-controlbar-button\", { size: this.size, iconPack: this.iconPack, onClick: this.toggleFullScreen, icon: this.fullScreenActive\n                ? this.iconPack.full_screen_minimize\n                : this.iconPack.full_screen_maximize, label: this.fullScreenActive ? this.t('full_screen.exit') : this.t('full_screen'), variant: this.variant })));\n    }\n};\n__decorate([\n    SyncWithStore()\n], DyteFullscreenToggle.prototype, \"states\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteFullscreenToggle.prototype, \"size\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteFullscreenToggle.prototype, \"iconPack\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteFullscreenToggle.prototype, \"t\", void 0);\nDyteFullscreenToggle.style = DyteFullscreenToggleStyle0;\n\nexport { DyteFullscreenToggle as dyte_fullscreen_toggle };\n","const requestFullScreen = (el) => {\n    if (el == null)\n        return;\n    if (el.requestFullscreen != null) {\n        el.requestFullscreen();\n    }\n    else if (el.mozRequestFullScreen != null) {\n        /* Firefox */\n        el.mozRequestFullScreen();\n    }\n    else if (el.webkitRequestFullscreen != null) {\n        /* Chrome, Safari & Opera */\n        el.webkitRequestFullscreen();\n    }\n    else if (el.msRequestFullscreen != null) {\n        /* IE/Edge */\n        el.msRequestFullscreen();\n    }\n};\nconst exitFullSreen = () => {\n    if (document.exitFullscreen != null) {\n        document.exitFullscreen();\n    }\n    else if (document.mozExitFullScreen != null) {\n        /* Firefox */\n        document.mozExitFullScreen();\n    }\n    else if (document.webkitExitFullscreen != null) {\n        /* Chrome, Safari & Opera */\n        document.webkitExitFullscreen();\n    }\n    else if (document.msExitFullscreen != null) {\n        /* IE/Edge */\n        document.msExitFullscreen();\n    }\n};\nconst isFullScreenEnabled = () => {\n    return document.fullscreenElement != null || document.webkitCurrentFullScreenElement != null;\n};\nconst isFullScreenSupported = () => {\n    if (typeof document !== 'undefined') {\n        return (document.fullscreenEnabled ||\n            document.mozFullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.msFullscreenEnabled);\n    }\n    return false;\n};\n\nexport { isFullScreenSupported as a, exitFullSreen as e, isFullScreenEnabled as i, requestFullScreen as r };\n"],"names":["SyncWithStore","proto","propName","connectedCallback","disconnectedCallback","host","getElement","this","storeValue","uiStore","state","appendElement","call","removeElement","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DyteFullscreenToggle","constructor","hostRef","registerInstance","stateUpdate","createEvent","variant","iconPack","defaultIconPack","t","useLanguage","fullScreenActive","isFullScreenSupported","onFullScreenchange","isFullScreenEnabled","toggleFullScreen","fullScreenElement","targetElement","document","querySelector","exitFullSreen","requestFullScreen","emit","activeMoreMenu","window","addEventListener","removeEventListener","render","h","Host","title","size","onClick","icon","full_screen_minimize","full_screen_maximize","label","prototype","style","el","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozExitFullScreen","webkitExitFullscreen","msExitFullscreen","fullscreenElement","webkitCurrentFullScreenElement","fullscreenEnabled","mozFullscreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled"],"sourceRoot":""}