{"version":3,"file":"static/js/8575.6d558426.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/index-25aba8a9.js","../node_modules/@dytesdk/ui-kit/dist/esm/dyte-chat-selector-ui.entry.js"],"sourcesContent":["import { a as getElement } from './index-08f4416b.js';\nimport { o as appendElement, q as removeElement, u as uiStore } from './ui-store-11740cb4.js';\n\nfunction SyncWithStore() {\n    return function (proto, propName) {\n        const { connectedCallback, disconnectedCallback } = proto;\n        proto.connectedCallback = function () {\n            const host = getElement(this);\n            const value = host[propName];\n            if (!value) {\n                const storeValue = uiStore.state[propName];\n                host[propName] = storeValue;\n                appendElement(propName, host);\n            }\n            return connectedCallback === null || connectedCallback === void 0 ? void 0 : connectedCallback.call(this);\n        };\n        proto.disconnectedCallback = function () {\n            removeElement(propName, getElement(this));\n            return disconnectedCallback === null || disconnectedCallback === void 0 ? void 0 : disconnectedCallback.call(this);\n        };\n    };\n}\n\nexport { SyncWithStore as S };\n","import { r as registerInstance, c as createEvent, h, H as Host } from './index-08f4416b.js';\nimport { a as defaultIconPack, c as useLanguage } from './ui-store-11740cb4.js';\nimport { g as generateChatGroupKey } from './chat-d3096b6e.js';\nimport { S as SyncWithStore } from './index-25aba8a9.js';\n\nconst dyteChatSelectorUiCss = \":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}.scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\\\.5, 6px);width:var(--dyte-space-1\\\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}:host{display:flex;flex-direction:column}.chat-scope-selector{position:relative;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity));z-index:10}.chat-scope-selector button{width:100%;border-width:var(--dyte-border-width-none, 0);border-style:none;padding:var(--dyte-space-4, 16px);display:flex;align-items:center;justify-content:space-between;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255));font-size:14px;cursor:pointer;height:var(--dyte-space-12, 48px)}.chat-scope-selector button span{display:flex;align-items:center;justify-content:flex-start}.chat-scope-selector button dyte-icon{height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px)}.chat-scope-selector .search{position:sticky;box-sizing:border-box;display:flex;align-items:center;border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));margin-left:var(--dyte-space-3, 12px);margin-right:var(--dyte-space-3, 12px);margin-top:var(--dyte-space-3, 12px);margin-bottom:var(--dyte-space-0, 0px)}.chat-scope-selector .search dyte-icon{margin-left:var(--dyte-space-2, 8px);margin-right:var(--dyte-space-2, 8px);height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px);color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52))}.chat-scope-selector .search input{box-sizing:border-box;height:var(--dyte-space-9, 36px);width:100%;padding-right:var(--dyte-space-2, 8px);border-width:var(--dyte-border-width-none, 0);border-style:none;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255));outline:2px solid transparent;outline-offset:2px;border-radius:var(--dyte-border-radius-sm, 4px);font-size:14px}.chat-scope-selector .search input::-moz-placeholder{color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76))}.chat-scope-selector .search input::placeholder{color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76))}.chat-scope-selector .participants-container{position:absolute;width:100%;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));top:var(--dyte-space-12, 48px);animation:0.3s slide-down ease}@keyframes slide-down{from{transform:translateY(-50px)}to{transform:translateY(0%)}}.chat-scope-selector .scope-list{margin-top:var(--dyte-space-0, 0px);margin-bottom:var(--dyte-space-0, 0px);list-style-type:none;padding-left:var(--dyte-space-0, 0px);padding-right:var(--dyte-space-0, 0px);overflow:auto;max-height:375px}.chat-scope-selector .scope-list .scope{position:relative;display:flex;flex-direction:row;align-items:center;padding-left:var(--dyte-space-3, 12px);padding-right:var(--dyte-space-3, 12px);padding-top:var(--dyte-space-4, 16px);padding-bottom:var(--dyte-space-4, 16px)}.chat-scope-selector .scope-list .scope:hover{cursor:pointer;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity))}.chat-scope-selector .scope-list .scope-special{margin-top:var(--dyte-space-4, 16px);--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-text-opacity))}.chat-scope-selector .scope-list .everyone-icon>dyte-icon{height:var(--dyte-space-6, 24px);width:var(--dyte-space-6, 24px);color:rgb(var(--dyte-colors-text-on-brand-1000, var(--dyte-colors-text-1000, 255 255 255)))}.chat-scope-selector .scope-list .everyone-icon{display:flex;height:100%;width:100%;align-items:center;justify-content:center;margin-right:var(--dyte-space-2, 8px);height:var(--dyte-space-8, 32px);width:var(--dyte-space-8, 32px);border-radius:9999px;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));font-size:12px}.unread-count.selector{position:unset;margin-left:var(--dyte-space-2, 8px)}.unread-count{position:absolute;right:var(--dyte-space-3, 12px);box-sizing:border-box;padding:var(--dyte-space-0\\\\.5, 2px);-webkit-user-select:none;-moz-user-select:none;user-select:none;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));font-size:12px;color:rgb(var(--dyte-colors-text-on-brand-1000, var(--dyte-colors-text-1000, 255 255 255)));display:flex;height:var(--dyte-space-5, 20px);min-width:var(--dyte-space-5, 20px);align-items:center;justify-content:center;border-radius:9999px;z-index:1}dyte-avatar{height:var(--dyte-space-8, 32px);width:var(--dyte-space-8, 32px)}\";\nconst DyteChatSelectorUiStyle0 = dyteChatSelectorUiCss;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst DyteChatSelectorUi = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.groupChanged = createEvent(this, \"dyteChatGroupChanged\", 7);\n        /** Unread counts */\n        this.unreadCounts = {};\n        /** Participants */\n        this.groups = [];\n        /** Icon pack */\n        this.iconPack = defaultIconPack;\n        /** Language */\n        this.t = useLanguage();\n        this.showParticipantsPanel = false;\n        this.query = '';\n        this.onScopeClick = (scope) => {\n            this.showParticipantsPanel = false;\n            this.groupChanged.emit(scope);\n        };\n    }\n    toggleParticipants() {\n        this.showParticipantsPanel = !this.showParticipantsPanel;\n    }\n    getGroups() {\n        return this.groups.filter((participant) => participant.name.toLowerCase().includes(this.query.toLowerCase()));\n    }\n    getName() {\n        if (!this.selectedGroupId || this.selectedGroupId === 'everyone') {\n            return this.t('everyone');\n        }\n        const group = this.groups.find((g) => g.userId === this.selectedGroupId);\n        if (group) {\n            return group.name;\n        }\n        return this.t('everyone');\n    }\n    render() {\n        const unreadCountTotal = Object.keys(this.unreadCounts).reduce((total, key) => {\n            return total + this.unreadCounts[key];\n        }, 0);\n        return (h(Host, null, h(\"div\", { class: \"chat-scope-selector\" }, this.showParticipantsPanel && (h(\"div\", { class: \"participants-container\" }, h(\"div\", { class: \"search\", part: \"search\" }, h(\"dyte-icon\", { icon: this.iconPack.search, part: \"search-icon\" }), h(\"input\", { type: \"search\", autocomplete: \"off\", placeholder: this.t('search'), value: this.query, onInput: (e) => {\n                this.query = e.target.value;\n            }, part: \"search-input\" })), h(\"ul\", { class: \"scope-list scrollbar\" }, this.query === '' && (h(\"li\", { class: \"scope scope-special\", onClick: () => this.onScopeClick('everyone') }, h(\"div\", { class: \"everyone-icon\" }, h(\"dyte-icon\", { icon: this.iconPack.participants })), this.t('everyone'), this.unreadCounts['everyone'] > 0 && (h(\"div\", { class: \"unread-count\", part: \"unread-count\" }, h(\"span\", null, this.unreadCounts['everyone']))))), this.getGroups().map((group) => {\n            const count = this.unreadCounts[generateChatGroupKey([this.selfUserId, group.userId])];\n            return (h(\"li\", { class: \"scope\", onClick: () => this.onScopeClick(group), key: group.userId }, group.name, count > 0 && (h(\"div\", { class: \"unread-count\", part: \"unread-count\" }, h(\"span\", null, count)))));\n        })))), h(\"button\", { onClick: () => this.toggleParticipants() }, h(\"span\", null, `${this.t('to')} ${this.getName()}`, '  ', unreadCountTotal > 0 && (h(\"div\", { class: \"unread-count selector\" }, h(\"span\", null, unreadCountTotal)))), h(\"dyte-icon\", { icon: this.showParticipantsPanel ? this.iconPack.chevron_up : this.iconPack.chevron_down })))));\n    }\n};\n__decorate([\n    SyncWithStore()\n], DyteChatSelectorUi.prototype, \"iconPack\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteChatSelectorUi.prototype, \"t\", void 0);\nDyteChatSelectorUi.style = DyteChatSelectorUiStyle0;\n\nexport { DyteChatSelectorUi as dyte_chat_selector_ui };\n"],"names":["SyncWithStore","proto","propName","connectedCallback","disconnectedCallback","host","getElement","this","storeValue","uiStore","state","appendElement","call","removeElement","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DyteChatSelectorUi","constructor","hostRef","registerInstance","groupChanged","createEvent","unreadCounts","groups","iconPack","defaultIconPack","t","useLanguage","showParticipantsPanel","query","onScopeClick","scope","emit","toggleParticipants","getGroups","filter","participant","name","toLowerCase","includes","getName","selectedGroupId","group","find","g","userId","render","unreadCountTotal","keys","reduce","total","h","Host","class","part","icon","search","type","autocomplete","placeholder","value","onInput","e","onClick","participants","map","count","generateChatGroupKey","selfUserId","concat","chevron_up","chevron_down","prototype","style"],"sourceRoot":""}