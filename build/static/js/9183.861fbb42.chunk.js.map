{"version":3,"file":"static/js/9183.861fbb42.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/index-25aba8a9.js","../node_modules/@dytesdk/ui-kit/dist/esm/floating-ui.dom.esm-cf1488a2.js","../node_modules/@dytesdk/ui-kit/dist/esm/string-ed1380fb.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-e2bee3ae.js"],"sourcesContent":["import { a as getElement } from './index-08f4416b.js';\nimport { o as appendElement, q as removeElement, u as uiStore } from './ui-store-11740cb4.js';\n\nfunction SyncWithStore() {\n    return function (proto, propName) {\n        const { connectedCallback, disconnectedCallback } = proto;\n        proto.connectedCallback = function () {\n            const host = getElement(this);\n            const value = host[propName];\n            if (!value) {\n                const storeValue = uiStore.state[propName];\n                host[propName] = storeValue;\n                appendElement(propName, host);\n            }\n            return connectedCallback === null || connectedCallback === void 0 ? void 0 : connectedCallback.call(this);\n        };\n        proto.disconnectedCallback = function () {\n            removeElement(propName, getElement(this));\n            return disconnectedCallback === null || disconnectedCallback === void 0 ? void 0 : disconnectedCallback.call(this);\n        };\n    };\n}\n\nexport { SyncWithStore as S };\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition$1 = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset$1 = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nsize;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\ninline;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nlimitShift;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow as a, autoPlacement as b, computePosition as c, flip as f, hide as h, offset as o, shift as s };\n","/**\n * Shorten a string upto a maximum length of characters and add `...` as suffix if it exceeds the maximum length\n * @param str The The string you want to shorten\n * @param maxLength Maximum length of character\n * @returns Formatted shortedned string\n */\nconst shorten = (str, maxLength = 20) => {\n    if (str == null)\n        return '';\n    if (str.length > maxLength) {\n        return `${str.substring(0, maxLength)}...`;\n    }\n    return str;\n};\n/**\n * Checks if a given string consists of only emojis.\n *\n * However this classifies a string with numbers as emoji as well.\n * Which works in our favour for now in chat as it enlarges messages with just numbers.\n * @param str String on which to perform the check on\n * @returns A Boolean value which indicates if string consists of only emojis\n */\nconst hasOnlyEmojis = (str) => {\n    const num = /^\\d+$/;\n    const re = /^\\p{Emoji}+$/u;\n    return re.test(str) && !num.test(str);\n};\nconst sanitizeLink = (link) => {\n    // TODO: needs more work\n    if (link === null || link === void 0 ? void 0 : link.trim().toLowerCase().startsWith('javascript:')) {\n        return 'https://dyte.io';\n    }\n    return link;\n};\n/**\n * Formats a given name and returns **Participant** for unnamed participants.\n * @param name Name of participant\n * @returns Name to use in the UI\n */\nconst formatName = (name) => {\n    name = name === null || name === void 0 ? void 0 : name.trim();\n    if (name === '')\n        return 'Participant';\n    return name;\n};\nconst whiteSpace = new RegExp(/[^\\u00BF-\\u1FFF\\u2C00-\\uD7FF\\w\\s]/, 'g');\nconst space = new RegExp(/\\s+/);\nfunction getInitials(name, maxInitials = 2) {\n    // removes any character that is not a letter, number or whitespace\n    const cleanedName = name.replace(whiteSpace, '');\n    const words = cleanedName.trim().split(space).slice(0, maxInitials);\n    return words\n        .map((word) => word.charAt(0))\n        .join('')\n        .toUpperCase();\n}\n\nexport { sanitizeLink as a, formatName as f, getInitials as g, hasOnlyEmojis as h, shorten as s };\n","import { h, H as Host } from './index-08f4416b.js';\n\n/**\n * Computes selectors and returns them based on their priority.\n */\nconst computeSelectors = ({ element, size, states = {}, config = {}, }) => {\n    let selectors = [];\n    const data = config === null || config === void 0 ? void 0 : config.root[element];\n    const add = (selector) => {\n        selectors.push(selector);\n        if (typeof size === 'string') {\n            selectors.push(`${selector}.${size}`);\n        }\n    };\n    add(element);\n    if (typeof data === 'object' && !Array.isArray(data) && data !== null) {\n        // check if the data variable is an object, strictly and not an array or just null\n        const { state, states: elementStates } = data;\n        let selector = element;\n        let activeStates = [];\n        if (Array.isArray(elementStates)) {\n            activeStates = elementStates.filter((state) => states[state]);\n            activeStates.sort();\n            for (const state of activeStates) {\n                add(`${selector}.${state}`);\n            }\n            if (activeStates.length > 1) {\n                const booleanStateSelector = [selector, ...activeStates].join('.');\n                add(booleanStateSelector);\n            }\n        }\n        if (typeof state === 'string') {\n            // dyte-meeting[meeting=joined]\n            const keyValueSelector = `${element}[${state}=${states[state]}]`;\n            add(keyValueSelector);\n            for (const state of activeStates) {\n                add(`${keyValueSelector}.${state}`);\n            }\n            if (activeStates.length > 1) {\n                const withBooleanStateSelector = [keyValueSelector, ...activeStates].join('.');\n                add(withBooleanStateSelector);\n            }\n        }\n    }\n    return selectors;\n};\n/**\n * Returns the computed styles - styles obtained from combining styles from all computed selectors\n * on the basis of their priorities.\n */\nconst getComputedStyles = ({ selectors, styles }) => {\n    if (!Array.isArray(selectors) || styles == null)\n        return {};\n    const computedStyles = {};\n    for (const selector of selectors) {\n        const style = styles[selector];\n        if (style != null) {\n            Object.assign(computedStyles, style);\n        }\n    }\n    return computedStyles;\n};\n/**\n * Returns the computed children which are to be rendered inside an element\n */\nconst getComputedChildren = ({ selectors, root }) => {\n    if (!root || !Array.isArray(selectors))\n        return [];\n    let children = [];\n    for (const selector of selectors) {\n        const el = root[selector];\n        if (Array.isArray(el)) {\n            children = [...el];\n        }\n        else if (el) {\n            if (el.children) {\n                children = [...el.children];\n            }\n            if (Array.isArray(el.remove)) {\n                for (const toRemove of el.remove) {\n                    children = children.filter((child) => {\n                        if (typeof child === 'string') {\n                            return child !== toRemove;\n                        }\n                        else if (Array.isArray(child)) {\n                            return child[0] !== toRemove;\n                        }\n                        return true;\n                    });\n                }\n            }\n            if (el.addBefore) {\n                for (const [beforeEl, toAdd] of Object.entries(el.addBefore)) {\n                    const idx = children.findIndex((child) => {\n                        if (typeof child === 'string') {\n                            return child === beforeEl;\n                        }\n                        else if (Array.isArray(child)) {\n                            return child[0] === beforeEl;\n                        }\n                        return false;\n                    });\n                    if (idx >= 0) {\n                        children.splice(idx, 0, ...toAdd);\n                    }\n                }\n            }\n            if (Array.isArray(el.add)) {\n                children = children.concat(el.add);\n            }\n            if (Array.isArray(el.prepend)) {\n                children = el.prepend.concat(children);\n            }\n        }\n    }\n    return children;\n};\n\n/**\n * Renders the children of an element.\n */\nconst RenderChildren = ({ elements, defaults, props = {}, deepProps = false, elementProps = {}, }) => {\n    if (!Array.isArray(elements) || elements.length === 0)\n        return null;\n    return elements.map((element) => {\n        return (h(Render, { element: element, defaults: defaults, props: props, childProps: deepProps && props, elementProps: elementProps }));\n    });\n};\nconst lenChildren = ({ element, defaults, props = {}, elementProps = {} }) => {\n    var _a;\n    const { config, size, states } = defaults;\n    let Tag, configProps = {}, configChildren = [];\n    if (Array.isArray(element)) {\n        // get props if element is passed in array form:\n        // ['dyte-participant-tile', { variant: 'gradient' }]\n        [Tag, configProps, ...configChildren] = element;\n    }\n    else {\n        Tag = element;\n    }\n    const elemData = (_a = config === null || config === void 0 ? void 0 : config.root) === null || _a === void 0 ? void 0 : _a[Tag];\n    if (elemData != null && 'props' in elemData) {\n        props = Object.assign(Object.assign({}, elemData['props']), props);\n    }\n    props = Object.assign(Object.assign({}, props), configProps);\n    if (Tag in elementProps) {\n        props = Object.assign(Object.assign({}, props), elementProps[Tag]);\n    }\n    const selectors = computeSelectors({ element: Tag, size, states, config });\n    const computedChildren = getComputedChildren({ selectors, root: config.root });\n    return computedChildren.length;\n};\n/**\n * Renders an element from UI Config\n */\nconst Render = ({ element, defaults, childProps = {}, props = {}, onlyChildren = false, asHost = false, deepProps = false, elementProps = {}, }, children) => {\n    var _a;\n    const { config, size, states } = defaults;\n    let Tag, configProps = {}, configChildren = [];\n    if (Array.isArray(element)) {\n        // get props if element is passed in array form:\n        // ['dyte-participant-tile', { variant: 'gradient' }]\n        [Tag, configProps, ...configChildren] = element;\n    }\n    else {\n        Tag = element;\n    }\n    const elemData = (_a = config === null || config === void 0 ? void 0 : config.root) === null || _a === void 0 ? void 0 : _a[Tag];\n    if (elemData != null && 'props' in elemData) {\n        props = Object.assign(Object.assign({}, elemData['props']), props);\n    }\n    props = Object.assign(Object.assign({}, props), configProps);\n    if (Tag in elementProps) {\n        props = Object.assign(Object.assign({}, props), elementProps[Tag]);\n    }\n    const selectors = computeSelectors({ element: Tag, size, states, config });\n    const computedChildren = getComputedChildren({ selectors, root: config.root });\n    if (onlyChildren) {\n        return (h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }));\n    }\n    const styles = getComputedStyles({ selectors, styles: config.styles });\n    if (asHost) {\n        return (h(Host, Object.assign({}, defaults, { style: styles }, props),\n            h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }),\n            children,\n            configChildren.map((child) => {\n                if (Array.isArray(child)) {\n                    const [Tag, props] = child;\n                    return h(Tag, Object.assign({}, defaults, props));\n                }\n                return child;\n            })));\n    }\n    if (['dyte-header', 'dyte-controlbar'].includes(Tag)) {\n        props['disableRender'] = true;\n    }\n    if (Tag.startsWith('dyte-')) {\n        return (h(Tag, Object.assign({}, defaults, { style: styles }, props),\n            h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }),\n            children,\n            configChildren.map((child) => {\n                if (Array.isArray(child)) {\n                    const [Tag, props] = child;\n                    return h(Tag, Object.assign({}, defaults, props));\n                }\n                return child;\n            })));\n    }\n    else {\n        const [HTMLTag, id] = Tag.split('#');\n        return (h(HTMLTag, Object.assign({ id: id, style: styles }, props),\n            h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }),\n            children,\n            configChildren.map((child) => {\n                if (Array.isArray(child)) {\n                    const [Tag, props] = child;\n                    return h(Tag, Object.assign({}, defaults, props));\n                }\n                return child;\n            })));\n    }\n};\n\nexport { Render as R, lenChildren as l };\n"],"names":["SyncWithStore","proto","propName","connectedCallback","disconnectedCallback","host","getElement","this","storeValue","uiStore","state","appendElement","call","removeElement","sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","replace","getPaddingObject","padding","_objectSpread","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","options","_await$platform$isEle","platform","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","hasWindow","window","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","selector","matches","e","isContainingBlock","elementOrCss","webkit","isWebKit","css","containerType","backdropFilter","filter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","result","assignedSlot","parentNode","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","visualViewport","parent","Object","getPrototypeOf","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getHTMLOffset","scroll","ignoreScrollbarX","htmlRect","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","htmlOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","_evaluate","allowedPlacements","autoAlignment","detectOverflowOptions","_objectWithoutProperties","_excluded","placements$1","undefined","getPlacementList","currentIndex","index","currentPlacement","alignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","sort","a","b","resetPlacement","every","shift","_evaluate4","checkMainAxis","checkCrossAxis","limiter","_excluded4","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","enabled","flip","_middlewareData$flip","initialPlacement","_evaluate2","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","_excluded2","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","push","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$filter2","currentSideAxis","hide","_evaluate3","_excluded3","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition$1","shorten","str","maxLength","arguments","substring","hasOnlyEmojis","sanitizeLink","link","trim","startsWith","formatName","whiteSpace","RegExp","space","getInitials","maxInitials","word","charAt","join","toUpperCase","computeSelectors","size","states","selectors","root","add","isArray","elementStates","activeStates","keyValueSelector","getComputedChildren","_ref3","children","remove","toRemove","child","addBefore","beforeEl","toAdd","entries","idx","findIndex","splice","prepend","RenderChildren","_ref4","defaults","props","deepProps","elementProps","h","Render","childProps","lenChildren","_ref5","_a","Tag","configProps","configChildren","elemData","assign","_ref6","onlyChildren","asHost","computedChildren","styles","_ref2","computedStyles","style","getComputedStyles","Host","HTMLTag","id"],"sourceRoot":""}