{"version":3,"file":"static/js/9641.8ce49d6b.chunk.js","mappings":"igBASA,MAAMA,EAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KA6clD,GAAeC,EAAAA,EAAAA,IALUC,IAAK,CAC5BC,YAAaD,EAAME,KAAKD,YACxBE,QAASH,EAAMI,OAAOC,OAGxB,CA3cgBC,IAOT,IAADC,EAAAC,EAAA,IAPW,QACfC,EAAO,WACPC,EAAU,eACVC,EAAc,YACdV,EAAW,OACXW,EAAM,OACNC,GACDP,EACC,MAAMQ,GAAWC,EAAAA,EAAAA,MAqDXC,EAAqB,SACzBC,EACAC,EACAC,GAGI,IAFJC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACdG,EAAQH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAEX,QAAKJ,IACLA,EAAeQ,OAAOR,GAET,WAATE,EACY,OAAPV,QAAO,IAAPA,GAAe,QAARiB,EAAPjB,EAASkB,cAAM,IAAAD,OAAR,EAAPA,EAAiBE,KACtB,CAACC,EAAMC,IACLL,OAAOI,EAAKE,WAAad,GACzBa,IAAUZ,GACO,KAAjBW,EAAKE,SAES,YAATZ,IACK,OAAPV,QAAO,IAAPA,GAA6B,QAAtBuB,EAAPvB,EAASwB,QAAQb,UAAY,IAAAY,GAAU,QAAVE,EAA7BF,EAA+BG,gBAAQ,IAAAD,OAAhC,EAAPA,EAAyCN,KAC9C,CAACC,EAAMC,IACLL,OAAOI,EAAKE,WAAad,GACzBa,IAAUN,GACO,KAAjBK,EAAKE,WAZa,IAADL,EAOQM,EAAAE,CASjC,EAEME,EAAoBA,CAACC,EAAUnB,KAAkB,IAADoB,EACpD,QAAKD,IACS,OAAP5B,QAAO,IAAPA,GAAgB,QAAT6B,EAAP7B,EAASwB,eAAO,IAAAK,OAAT,EAAPA,EAAkBV,KACvB,CAACC,EAAMC,IACLD,EAAKU,SAAWF,GAAYP,IAAUZ,GAAgC,KAAhBW,EAAKU,UAI3DC,EAAe,SAACrB,EAAMW,EAAOW,EAAKC,GAA4B,IAArBlB,EAAQH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAExD,GAAY,UAARoB,EAEF,GAAc,KAAVC,EACFA,EAAQ,OACH,CACL,MAAMC,EA7FWD,KACrB,MAAME,EAAWnB,OAAOiB,GASxB,OAAIE,EAAW,GACbC,EAAAA,GAAMC,MAAM,8BACL,GAELF,EAAW,IAAM,IACnBC,EAAAA,GAAMC,MAAM,kCACL,IA6EWC,CAAcL,GAC9B,IAAKC,EAAS,OACdD,EAAQjB,OAAOiB,EACjB,CAEF,GAAY,YAARD,EAAmB,CACrB,MAAME,EA9EeD,KACvB,MAAME,EAAWnB,OAAOiB,GACxB,OAAKA,GAAmB,KAAVA,EAIVM,MAAMJ,IACRC,EAAAA,GAAMC,MAAM,6CACL,GAELF,EAAW,GACbC,EAAAA,GAAMC,MAAM,yCACL,GAELF,EAAW,IAAM,IACnBC,EAAAA,GAAMC,MAAM,6CACL,IAbPD,EAAAA,GAAMC,MAAM,kCACL,IA0ESG,CAAgBP,GAChC,IAAKC,EAAS,OACdD,EAAQjB,OAAOiB,EACjB,CAEA,GAAa,WAATvB,GAEF,GAAY,YAARsB,GACEzB,EAAmB0B,EAAOZ,EAAO,UAInC,YAHAe,EAAAA,GAAMC,MAAM,GAADI,OACNR,EAAK,4DAKT,GAAa,YAATvB,EAAoB,CAE7B,GAAY,WAARsB,EAAkB,CACpB,MA3EkBJ,EA2EEK,IA1EM,KAAbL,IACfQ,EAAAA,GAAMC,MAAM,2BACL,IAwEuB,OAC5B,GAAIV,EAAkBM,EAAOZ,GAE3B,YADAe,EAAAA,GAAMC,MAAM,8CAGhB,CAEA,GAAY,YAARL,GACEzB,EAAmB0B,EAAOZ,EAAO,UAAWA,EAAON,GAIrD,YAHAqB,EAAAA,GAAMC,MAAM,GAADI,OACNR,EAAK,oDAKhB,CA1FsBL,MA6FtB3B,EAAYyC,IACV,MAAMC,GAAcC,EAAAA,EAAAA,GAAA,GAAQF,GAsB5B,MApBa,WAAThC,EACFiC,EAAezB,OAASyB,EAAezB,OAAO2B,IAAI,CAACzB,EAAM0B,IACvDA,IAAMzB,GAAKuB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQxB,GAAI,IAAE,CAACY,GAAMC,IAAUb,GAE1B,YAATV,IACTiC,EAAenB,QAAUmB,EAAenB,QAAQqB,IAAI,CAACf,EAAQgB,KAC3D,GAAIA,IAAMzB,EAAO,CACf,GAAY,WAARW,EACF,OAAAY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYd,GAAM,IAAE,CAACE,GAAMC,IAG7B,MAAMc,EAAkBjB,EAAOJ,SAASmB,IAAI,CAAC7C,EAASgD,IACpDA,IAAMjC,GAAQ6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ5C,GAAO,IAAE,CAACgC,GAAMC,IAAUjC,GAElD,OAAA4C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYd,GAAM,IAAEJ,SAAUqB,GAChC,CACA,OAAOjB,KAIJa,GAEX,EA+CA,OACEM,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,UACbC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,SAAWC,IACTA,EAAEC,iBAjBNnD,EADEH,GAEAuD,EAAAA,EAAAA,KAAyB,CACvBC,OAAc,OAANvD,QAAM,IAANA,OAAM,EAANA,EAAQwD,IAChBzD,eAAgBF,KAKlB4D,EAAAA,EAAAA,KAAsB,CAAE1D,eAAgBF,EAAS0D,OAAc,OAANvD,QAAM,IAANA,OAAM,EAANA,EAAQwD,QAYjEE,UAAU,aAAYV,SAAA,EAEtBC,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAACD,UAAU,QAAOV,SAAA,EACpBC,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAU,iCAAgCV,SAAA,EAC5DC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,yDAAwDV,SAAA,EACrEF,EAAAA,EAAAA,KAAA,MAAIY,UAAU,aAAYV,SAAC,oBAC3BF,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLC,MAAM,UACNC,KAAK,KACLC,QAASA,KACP,MAAMC,GAAU1B,EAAAA,EAAAA,GAAA,GAAQ5C,GACxBsE,EAAWpD,OAAS,IACdoD,EAAWpD,QAAU,GACzB,CAAEI,QAAS,GAAIiD,MAAO,KAExBtE,EAAWqE,IACXnB,SACH,mBAKK,OAAPnD,QAAO,IAAPA,GAAe,QAARF,EAAPE,EAASkB,cAAM,IAAApB,OAAR,EAAPA,EAAiB+C,IAAI,CAAC2B,EAAKC,KAC1BrB,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAAWD,UAAU,OAAMV,SAAA,EAC7BF,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGJ,UAAU,yBAAwBV,UACnDC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,UAASV,SAAA,EACtBF,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACN,KAAK,KAAIjB,SAAC,aACjBC,EAAAA,EAAAA,MAACuB,EAAAA,EAAK,CACJC,OAAO,KACPlE,KAAK,SACLmE,UAAQ,EACR5C,MAAOuC,EAAIlD,QACXwD,SAAWvB,GACTxB,EAAa,SAAU0C,EAAK,UAAWlB,EAAEwB,OAAO9C,OACjDkB,SAAA,EAEDF,EAAAA,EAAAA,KAAA,UAAQhB,MAAM,GAAG+C,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAA/B,SAAC,gBAGzC9D,EAASwD,IAAKsC,IACb/B,EAAAA,EAAAA,MAAA,UAEEnB,MAAOkD,EACPF,SAAU1E,EAAmB4E,EAAQV,EAAK,UAAUtB,SAAA,CAEnDgC,EAAO,SAJHA,aAUflC,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAEd,UAChBC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,UAASV,SAAA,EACtBF,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACN,KAAK,KAAIjB,SAAC,mBACjBF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJC,OAAO,KACPlE,KAAK,OACLmE,UAAQ,EACR5C,MAAOuC,EAAID,MACXO,SAAWvB,GACTxB,EAAa,SAAU0C,EAAK,QAASlB,EAAEwB,OAAO9C,OAEhDmD,WAAa7B,IAEN,QAAQ8B,KAAK9B,EAAEvB,MAAkB,cAAVuB,EAAEvB,KAC5BuB,EAAEC,0BAMZP,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGJ,UAAU,yBAAwBV,UACnDF,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLE,KAAK,KACLC,QAASA,KAAMiB,OAvGJjE,EAuGwBoD,OAtGnDxE,EAAYyC,IAAWE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBF,GAAW,IACdxB,OAAQwB,EAAYxB,OAAOqE,OAAO,CAACC,EAAG1C,IAAMA,IAAMzB,MAHzBA,OAwGX8C,MAAM,SACNsB,SAAO,EACP/E,KAAK,SACLmD,UAAU,OAAMV,UAEhBF,EAAAA,EAAAA,KAAA,KAAGY,UAAU,4CAzDTY,QA+DdrB,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIJ,UAAU,sBAAqBV,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAIY,UAAU,aAAYV,SAAC,oBAEnB,OAAPnD,QAAO,IAAPA,GAAgB,QAATD,EAAPC,EAASwB,eAAO,IAAAzB,OAAT,EAAPA,EAAkB8C,IAAI,CAAC2B,EAAKC,KAC3BrB,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAEFD,UAAS,GAAApB,OACPgC,IAAQzE,EAAQwB,QAAQX,OAAS,EAC7B,iCACA,IACHsC,SAAA,EAEHF,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAEd,UAChBC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,GAAEV,SAAA,EACfF,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACN,KAAK,KAAIjB,SAAC,aACjBC,EAAAA,EAAAA,MAACuB,EAAAA,EAAK,CACJC,OAAO,KACPlE,KAAK,SACLmE,UAAQ,EACR5C,MAAOuC,EAAI1C,OACXgD,SAAWvB,GACTxB,EAAa,UAAW0C,EAAK,SAAUlB,EAAEwB,OAAO9C,OACjDkB,SAAA,EAEDF,EAAAA,EAAAA,KAAA,UAAQhB,MAAM,GAAG+C,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAA/B,SAAC,iBAGxC3D,GAAe,IAAIqD,IAAKsC,IACxBlC,EAAAA,EAAAA,KAAA,UAEEhB,MAAOkD,EAAOxB,IACdsB,SAAUtD,EAAkBwD,EAAOxB,IAAKc,GAAKtB,SAE5CgC,EAAOO,OAJHP,EAAOxB,eAWtBV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGJ,UAAU,GAAEV,WACxB,OAAHqB,QAAG,IAAHA,OAAG,EAAHA,EAAK9C,WAAY,IAAImB,IAAI,CAAC7C,EAAS8C,KACnCM,EAAAA,EAAAA,MAAA,OAAKS,UAAU,eAAcV,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,UAASV,SAAA,EACtBF,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACN,KAAK,KAAIjB,SAAC,aACjBC,EAAAA,EAAAA,MAACuB,EAAAA,EAAK,CACJC,OAAO,KACPlE,KAAK,SACLmE,UAAQ,EACR5C,MAAOjC,EAAQsB,QACfwD,SAAWvB,GACTxB,EACE,UACA0C,EACA,UACAlB,EAAEwB,OAAO9C,MACTa,GAEHK,SAAA,EAEDF,EAAAA,EAAAA,KAAA,UAAQhB,MAAM,GAAG+C,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAA/B,SAAC,gBAGzC9D,EAASwD,IAAKsC,IACb/B,EAAAA,EAAAA,MAAA,UAEEnB,MAAOkD,EACPF,SAAU1E,EACR4E,EACAV,EACA,UACAA,EACA3B,GACAK,SAAA,CAEDgC,EAAO,SAVHA,WAgBb/B,EAAAA,EAAAA,MAAA,OAAKS,UAAU,UAASV,SAAA,EACtBF,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACN,KAAK,KAAIjB,SAAC,mBACjBF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJC,OAAO,KACPlE,KAAK,OACLmE,UAAQ,EACR5C,MAAOjC,EAAQuE,MACfO,SAAWvB,GACTxB,EACE,UACA0C,EACA,QACAlB,EAAEwB,OAAO9C,MACTa,GAGJsC,WAAa7B,IAEN,QAAQ8B,KAAK9B,EAAEvB,MAAkB,cAAVuB,EAAEvB,KAC5BuB,EAAEC,yBA1DuBV,OAkEvCG,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAGH,UAAU,kBAAiBV,UACrCF,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLE,KAAK,KACLC,QAASA,KAAMsB,OAzOJtE,EAyOwBoD,OAxOnDxE,EAAYyC,IAAWE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBF,GAAW,IACdlB,QAASkB,EAAYlB,QAAQ+D,OAAO,CAACC,EAAG1C,IAAMA,IAAMzB,MAH3BA,OA0OX8C,MAAM,SACNsB,SAAO,EACP/E,KAAK,SACLmD,UAAU,UAASV,UAEnBF,EAAAA,EAAAA,KAAA,KAAGY,UAAU,oDAhHZY,KAsHTxB,EAAAA,EAAAA,KAAA,UACEoB,QAASA,KArQnBpE,EAAYyC,IAAWE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBF,GAAW,IACdlB,QAAS,IACJkB,EAAYlB,QACf,CACEM,OAAQ,GACRJ,SAAU,CACR,CAAEJ,QAAS,GAAIiD,MAAO,IACtB,CAAEjD,QAAS,GAAIiD,MAAO,WA8PpB7D,KAAK,SACLmD,UAAU,iCAAgCV,SAC3C,eAMLF,EAAAA,EAAAA,KAAA,OAAKY,UAAU,kCAAiCV,UAC9CF,EAAAA,EAAAA,KAAA,UAAQvC,KAAK,SAASmD,UAAU,2BAA0BV,SAAC,kB,yCClZxDyC,EAAgB/F,IAMtB,IANuB,KAC5BgG,EAAI,UACJC,EAAY,EAAC,aACbC,EAAe,EAAC,QAChBC,EAAU,EAAC,WACXC,EAAa,GACdpG,EACC,MAAMqG,EACJJ,EAAY,GACRK,EAAAA,EAAAA,IACEC,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,GAAW,IAAIC,KAAKT,GAAO,GAAIC,GACxCC,EAAe,IAAM,IAEvBQ,EAAAA,EAAAA,GAAW,IAAID,KAAKT,IAEpBW,EACJR,EAAU,GACNG,EAAAA,EAAAA,IACEC,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,GAAW,IAAIC,KAAKT,GAAO,GAAIG,GACxCC,EAAa,IAAM,IAErBQ,EAAAA,EAAAA,GAAS,IAAIH,KAAKT,IAElBa,EAAQ,GACd,IAAIC,EAAUT,EAEd,KAAOS,GAAWH,GAChBE,EAAME,KAAK,CACTC,OAAOC,EAAAA,EAAAA,GAAOH,EAAS,UACvB1E,MAAO0E,EAAQI,gBAEjBJ,GAAUK,EAAAA,EAAAA,GAAWL,EAAS,IAGhC,OAAOD,GAiBIO,GAAaC,EAAAA,EAAAA,MACxBC,IAAmE,IAAlE,MAAElF,EAAK,SAAE6C,EAAQ,QAAEsC,EAAO,MAAEP,EAAK,SAAEhC,EAAQ,cAAEe,GAAeuB,EAC3D,OACE/D,EAAAA,EAAAA,MAAA,OAAKS,UAAU,oBAAmBV,SAAA,EAChCC,EAAAA,EAAAA,MAACsB,EAAAA,EAAK,CAACb,UAAU,aAAYV,SAAA,CAC1B0D,EACAhC,IAAY5B,EAAAA,EAAAA,KAAA,QAAMY,UAAU,cAAaV,SAAC,UAE7CF,EAAAA,EAAAA,KAACoE,EAAAA,GAAM,CACLxC,SAAUA,EACVyC,WAAYA,EAAAA,EACZC,aAActF,EACduF,OAAQ,CACNC,WAAaC,IAAI9E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZ8E,GAAI,IACPC,OAAQ,QAGZC,0BAAwB,EACxBC,iBAAkBC,SAASC,KAC3BC,aAAa,QACblD,SAAUA,EACVsC,QAASA,SAQba,GAAcf,EAAAA,EAAAA,MAClBgB,IASO,IATN,IACCC,EAAG,IACH1D,EAAG,EACH3B,EAAC,KACD+C,EAAI,cACJD,EAAa,qBACbwC,EAAoB,eACpBC,EAAc,YACd7I,GACD0I,EACC,MAAMI,GAAmBC,EAAAA,EAAAA,SACvB,IACE3C,EAAc,CACZC,KAAMA,EAAKA,KACXG,QAASmC,EAAIK,QAAU,IAAIlC,KAAK6B,EAAIK,SAASC,WAAa,EAC1DxC,WAAYkC,EAAIK,QAAU,IAAIlC,KAAK6B,EAAIK,SAASE,aAAe,IAGnE,CAAC7C,EAAKA,KAAMsC,EAAIK,UAGZG,GAAiBJ,EAAAA,EAAAA,SACrB,IACE3C,EAAc,CACZC,KAAMA,EAAKA,KACXC,UAAWqC,EAAIS,UAAY,IAAItC,KAAK6B,EAAIS,WAAWH,WAAa,EAChE1C,aAAcoC,EAAIS,UACd,IAAItC,KAAK6B,EAAIS,WAAWF,aACxB,IAGR,CAAC7C,EAAKA,KAAMsC,EAAIS,YAGlB,OACExF,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAAAX,SAAA,EACFF,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAEb,UACTF,EAAAA,EAAAA,KAACgE,EAAU,CACThF,MAAO,CACL4E,MAAOsB,EAAIS,YAAa9B,EAAAA,EAAAA,GAAO,IAAIR,KAAK6B,EAAIS,WAAY,UACxD3G,MACEkG,EAAIS,YACJvC,EAAAA,EAAAA,IACEwC,EAAAA,EAAAA,GAAgB,IAAIvC,KAAK6B,EAAIS,WAAY,GACzC,GACA7B,eAENjC,SAAWvB,IACT,MAAMuF,EAAc,IAAIxC,KAAKT,EAAKA,MAC5BkD,EAAK,IAAIzC,KAAK/C,EAAEtB,OACtB6G,EAAY1C,SACV2C,EAAGN,WACHM,EAAGL,aACHK,EAAGC,aACH,GAEFZ,EAAqBtF,EAAG2B,EAAK,YAAaqE,IAE5C1B,QAASkB,EACTzB,MAAM,aACNhC,UAAQ,OAGZ5B,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAEb,UACTF,EAAAA,EAAAA,KAACgE,EAAU,CACThF,MAAO,CACL4E,MAAOsB,EAAIK,UAAW1B,EAAAA,EAAAA,GAAO,IAAIR,KAAK6B,EAAIK,SAAU,UACpDvG,MACEkG,EAAIK,UACJnC,EAAAA,EAAAA,IACEwC,EAAAA,EAAAA,GAAgB,IAAIvC,KAAK6B,EAAIK,SAAU,GACvC,GACAzB,eAENjC,SAAWvB,IACT,MAAMuF,EAAc,IAAIxC,KAAKT,EAAKA,MAC5BkD,EAAK,IAAIzC,KAAK/C,EAAEtB,OACtB6G,EAAY1C,SACV2C,EAAGN,WACHM,EAAGL,aACHK,EAAGC,aACH,GAEFZ,EAAqBtF,EAAG2B,EAAK,UAAWqE,IAE1C1B,QAASuB,EACT9B,MAAM,WACNhC,UAAQ,OAGZ5B,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAGH,UAAU,yBAAwBV,UAC5CC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,UAASV,SAAA,EACtBF,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACN,KAAK,KAAIjB,SAAC,UACjBC,EAAAA,EAAAA,MAACuB,EAAAA,EAAK,CACJC,OAAO,KACPlE,KAAK,SACLuB,MAAOkG,EAAIzH,KACXoE,SAAWvB,GACT6E,EAAqBtF,EAAG2B,EAAK,OAAQlB,EAAEwB,OAAO9C,OAC/CkB,SAAA,EAEDF,EAAAA,EAAAA,KAAA,UAAQhB,MAAM,GAAG+C,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAA/B,SAAC,iBAGxC,CAAC,SAAU,YAAc,GAAIN,IAAI,CAACsC,EAAQV,KAC1CxB,EAAAA,EAAAA,KAAA,UAAkBgG,GAAI9D,EAAQlD,MAAOkD,EAAOhC,SACzCgC,GADUV,YAQP,YAAb0D,EAAIzH,OACHuC,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAEb,UACTC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,GAAEV,SAAA,EACfF,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACN,KAAK,KAAIjB,SAAC,aACjBC,EAAAA,EAAAA,MAACuB,EAAAA,EAAK,CACJC,OAAO,KACPlE,KAAK,SACLuB,MAAOkG,EAAIrG,OACXgD,SAAWvB,IACT,MAAM0F,EACJ1F,EAAEwB,OAAOqC,QAAQ7D,EAAEwB,OAAOmE,eAAeC,aAAa,MACxDf,EAAqBtF,EAAG2B,EAAK,SAAUwE,IACvC9F,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQhB,MAAM,GAAG+C,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAA/B,SAAC,iBAGxC3D,GAAe,IAAIqD,IAAI,CAACsC,EAAQV,KAChCxB,EAAAA,EAAAA,KAAA,UAAkBgG,GAAI9D,EAAOxB,IAAK1B,MAAOkD,EAAOxB,IAAIR,SACjDgC,EAAOO,OADGjB,aASvBxB,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAGH,UAAU,kBAAiBV,UACrCF,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLE,KAAK,KACLC,QAASA,IAAMgE,EAAevF,EAAG2B,GACjCN,MAAM,SACNsB,SAAO,EACP/E,KAAK,SACLmD,UAAU,UAASV,UAEnBF,EAAAA,EAAAA,KAAA,KACEY,UAAS,GAAApB,OACC,IAARgC,EAAY,iBAAmB,uBAAsB,iCApHrD0D,EAAIc,MA+HdG,GAAUlC,EAAAA,EAAAA,MACdmC,IASO,IATN,KACCxD,EAAI,EACJ/C,EAAC,SACDwG,EAAQ,cACR1D,EAAa,qBACbwC,EAAoB,YACpBmB,EAAW,eACXlB,EAAc,YACd7I,GACD6J,EACC,OACEjG,EAAAA,EAAAA,MAAA,OAEES,UACEyF,EAASzI,OAAS,GAAKiC,IAAMwG,EAASzI,OAAS,EAAC,oJAIlD2I,MAAO,CAAEC,MAAO,SAAUtG,SAAA,EAE1BC,EAAAA,EAAAA,MAAA,QACES,UAAU,8DACV,aAAYgC,EAAKA,KAAK6D,eAAevG,SAAA,EAErCF,EAAAA,EAAAA,KAAA,QAAAE,UAAO2D,EAAAA,EAAAA,GAAOjB,EAAKA,KAAM,kBACzB5C,EAAAA,EAAAA,KAAA,QAAMY,UAAU,UAASV,UAAE2D,EAAAA,EAAAA,GAAOjB,EAAKA,KAAM,cAG/C5C,EAAAA,EAAAA,KAAA,OAAKY,UAAU,cAAaV,UACxB0C,EAAK8D,iBAAmB,IAAI9G,IAAI,CAACsF,EAAK1D,KACtCxB,EAAAA,EAAAA,KAACgF,EAAW,CAEVE,IAAKA,EACL1D,IAAKA,EACL3B,EAAGA,EACH+C,KAAMA,EACND,cAAeA,EACfwC,qBAAsBA,EACtBC,eAAgBA,EAChB7I,YAAaA,GARR2I,EAAIc,QAafhG,EAAAA,EAAAA,KAAA,UACEoB,QAASA,IAAMkF,EAAYzG,GAC3BpC,KAAK,SACLmD,UAAU,iCAAgCV,SAC3C,UApCI0C,EAAKoD,MAgdlB,GAAe3J,EAAAA,EAAAA,IAbUC,IAAK,CAC5BqK,aAAcrK,EAAMsK,QAAQjK,KAE5BkK,aAAcvK,EAAME,KAAKsK,oBACzBC,eAAgBzK,EAAME,KAAKuK,eAC3BxK,YAAaD,EAAME,KAAKD,YACxBU,eAAgBX,EAAME,KAAKS,eAC3BR,QAASH,EAAMI,OAAOC,KACtBqK,aAAc1K,EAAMsK,QAAQK,MAC5BC,SAAU5K,EAAM6K,QAAQC,YACxBC,aAAc/K,EAAME,KAAK6K,eAG3B,CApaiBC,IAQV,IARW,OAChBC,EAAM,OACNpK,EAAM,OACND,EAAM,YACNX,EAAW,eACXU,EAAc,aACd4J,EAAY,eACZE,GACDO,EACC,MAAMlK,GAAWC,EAAAA,EAAAA,OACVmK,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAEhCG,EAAKC,IAAUJ,EAAAA,EAAAA,UAAS,IACxBK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,IACxC3K,EAASC,IAAc0K,EAAAA,EAAAA,UAAS,CACrCzJ,OAAQ,CAAC,CAAEI,QAAS,GAAIiD,MAAO,KAC/B/C,QAAS,CACP,CACEM,OAAQ,GACRJ,SAAU,CACR,CAAEJ,QAAS,GAAIiD,MAAO,IACtB,CAAEjD,QAAS,GAAIiD,MAAO,UAOvB2G,EAAmBC,IAAwBR,EAAAA,EAAAA,UAAS,KACpDS,EAAeC,IAAoBV,EAAAA,EAAAA,UAAS,IACnDW,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,WAAU,KACJtL,GACFD,EAAWC,IAEZ,CAACA,IAEJ,MAAM2F,EAAO,IAAIS,KAEXmF,GAAkBlD,EAAAA,EAAAA,SACtB,KACEmD,EAAAA,EAAAA,GAAkB,CAChBxF,MAAOL,EACPW,KAAKmF,EAAAA,EAAAA,GAAQ9F,EAAM,MAClBhD,IAAKkG,IAAE,CACRE,IAAI2C,EAAAA,EAAAA,KACJ/F,KAAM,IAAIS,KAAKyC,EAAG3C,SAAS,GAAI,GAAI,GAAI,KACvCuD,gBAAiB,CACf,CAAEV,IAAI2C,EAAAA,EAAAA,KAAQlL,KAAM,GAAIkI,UAAW,GAAIJ,QAAS,GAAI1G,OAAQ,UAGlE,CAAC+D,KAGIyD,EAAUuC,IAAelB,EAAAA,EAAAA,UAASc,GAEnCrD,GAAuB0D,EAAAA,EAAAA,aAC3B,CAACC,EAAWC,EAAeC,EAAOhK,KAChC4J,EAAaK,GACXA,EAAarJ,IAAI,CAACsJ,EAAGrJ,IACfA,IAAMiJ,GACRnJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKuJ,GAAC,IACJxC,gBAAiBwC,EAAExC,gBAAgB9G,IAAI,CAACsF,EAAKnF,IAC3CA,IAAMgJ,GAAapJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEVuF,GACW,WAAVlG,GAAsB,CAAEH,OAAQ,OAAQ,CAAF,GAC1C,CAACmK,GAAQhK,IAEXkG,KAIHgE,KAIb,IAGI5C,GAAcuC,EAAAA,EAAAA,aAAaC,IAC/BF,EAAaO,GACXA,EAAUvJ,IAAI,CAACsJ,EAAGrJ,IAChBA,IAAMiJ,GAASnJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAENuJ,GAAC,IACJxC,gBAAiB,IACZwC,EAAExC,gBACL,CACEV,IAAI2C,EAAAA,EAAAA,KACJlL,KAAM,GACNkI,UAAW,GACXJ,QAAS,GACT1G,OAAQ,OAIdqK,KAGP,IAEG9D,IAAiByD,EAAAA,EAAAA,aAAY,CAACC,EAAWC,KAC7CH,EAAaO,GACXA,EAAUvJ,IAAI,CAACgD,EAAM/C,IACnBA,IAAMiJ,GAASnJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAENiD,GAAI,IACP8D,gBACoB,IAAlBqC,EACInG,EAAK8D,gBAAgB9G,IAAI,CAAC2C,EAAGf,IAC3BA,IAAQuH,EACJ,CACE/C,IAAI2C,EAAAA,EAAAA,KACJlL,KAAM,GACNkI,UAAW,GACXJ,QAAS,GACT1G,OAAQ,IAEV0D,GAENK,EAAK8D,gBAAgBpE,OACnB,CAACC,EAAGf,IAAQA,IAAQuH,KAG9BnG,KAGP,IAaGwG,KAXmBP,EAAAA,EAAAA,aAAaQ,IACpCT,EAAaK,GACXA,EAAarJ,IAAK0J,IAAC3J,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACd2J,GAAC,IACJ5C,gBAAiB4C,EAAE5C,gBAAgB9G,IAAK2J,IAAC5J,EAAAA,EAAAA,GAAA,GACnC4J,EAAE5D,UAAY4D,EAAIF,SAI3B,KAEkBR,EAAAA,EAAAA,aACnBW,UAeE,MAAMC,EAAU,CACdhJ,OAAQ4I,EAAOK,KACfC,sBAhBiBhN,EAgBe0M,EAAO3C,gBAfhC/J,EACJiD,IAAKzB,IAAI,CACRyE,KAAMzE,EAAKyE,KACX8D,gBAAiBvI,EAAKuI,gBACnBpE,OACE+D,GACwB,KAAvBA,EAASV,WAAyC,KAArBU,EAASd,SAEzC3F,IAAIgK,IAAA,IAAC,GAAE5D,GAAa4D,EAAF,OAAAC,EAAAA,EAAAA,GAAAD,EAAAE,QAEtBxH,OAAQnE,GAASA,EAAKuI,gBAAgB9I,OAAS,KAXpD,IAAmBjB,EAmBnBS,GAAS2M,EAAAA,EAAAA,KAA2BN,IACpCtM,KAEF,CAACC,EAAUD,KAGP6M,IAAaC,EAAAA,EAAAA,IAAU,CAE3BC,oBAAoB,EAEpBC,cAAe,CACbT,KAAY,OAANxM,QAAM,IAANA,OAAM,EAANA,EAAQwD,IACdgG,gBAAiBL,GAEnB+D,iBAAkBC,EAAAA,GAAW,CAC3BX,KAAMW,EAAAA,KAAazI,SAAS,yBAE9BvB,SAAU+I,KAGNkB,IAAoBzB,EAAAA,EAAAA,aAAY,KACpC,IAAgB,OAAZhC,QAAY,IAAZA,OAAY,EAAZA,EAAcjJ,QAAS,EAAG,CAC5B,IAAI2M,EAAelE,EACnBkE,EAAeA,EAAa3K,IAAKsF,IAG/B,MAAMsF,EAAkB3D,EAAa4D,KAClCC,GAEGA,EAAI9H,OACJiB,EAAAA,EAAAA,GAAO,IAAIR,KAAKqH,EAAI9H,MAAO,kBACzBiB,EAAAA,EAAAA,GAAO,IAAIR,KAAK6B,EAAItC,MAAO,gBAKnC,OAAI4H,GACF7K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK6K,GAAe,IAClBxE,IAAI2C,EAAAA,EAAAA,KACJ/F,KAAMsC,EAAItC,OAGPsC,IAGT0D,EAAY2B,EACd,MACE3B,GACEH,EAAAA,EAAAA,GAAkB,CAChBxF,MAAOL,EACPW,KAAKmF,EAAAA,EAAAA,GAAQ9F,EAAM,MAClBhD,IAAKkG,IAAE,CACRE,IAAI2C,EAAAA,EAAAA,KACJ/F,KAAM,IAAIS,KAAKyC,EAAG3C,SAAS,GAAI,GAAI,GAAI,KACvCuD,gBAAiB,CACf,CAAEV,IAAI2C,EAAAA,EAAAA,KAAQlL,KAAM,GAAIkI,UAAW,GAAIJ,QAAS,GAAI1G,OAAQ,YAMnE,CAACgI,KAEJ0B,EAAAA,EAAAA,WAAU,KACR+B,MAEC,CAAC/C,EAAQV,KAEZ0B,EAAAA,EAAAA,WAAU,KACRF,QAAQC,IAAIpL,EAAQ,sBACEsM,WACpB,GAAU,OAANtM,QAAM,IAANA,GAAAA,EAAQwD,IAAK,CAAC,IAADiK,EAAAC,EACf,MAAMC,QAAqBzN,GAAS0N,EAAAA,EAAAA,KAAkB5N,EAAOwD,MAC7D2H,QAAQC,IAAIuC,EAAc,2BAC1BpD,EAAuB,OAAZoD,QAAY,IAAZA,GAAqB,QAATF,EAAZE,EAAcpB,eAAO,IAAAkB,GAAM,QAANC,EAArBD,EAAuBjB,YAAI,IAAAkB,OAAf,EAAZA,EAA6BG,iBAC1C,GAGFC,IACC,CAAC5N,EAAgB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQwD,IAAKiH,KAM3BY,EAAAA,EAAAA,WAAU,KACJrL,GACFuK,EAAiB,OAANvK,QAAM,IAANA,OAAM,EAANA,EAAQ6N,mBAEpB,CAAC7N,IAEJ,MAmBM+N,IAA6B3F,EAAAA,EAAAA,SAAQ,KAEvCtF,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CACHC,SAAWC,IACTA,EAAEC,iBACFyJ,GAAWZ,gBACJ,GAETxI,UAAU,0BACVsK,OAAO,IAAGhL,UAEVC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKY,UAAU,sBAAqBV,SACjCmG,EAASzG,IAAI,CAACgD,EAAM/C,KACnBG,EAAAA,EAAAA,KAACmG,EAAO,CAENvD,KAAMA,EACN/C,EAAGA,EACHwG,SAAUA,EACV1D,cAAeA,EACfwC,qBAAsBA,EACtBmB,YAAaA,EACblB,eAAgBA,GAChB7I,YAAaA,GARRqG,EAAKoD,QAYhB7F,EAAAA,EAAAA,MAAA,OAAKS,UAAU,oDAAmDV,SAAA,EAChEC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,eAAcV,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,QACEY,UAAU,aACV2F,MAAO,CAAE4E,SAAU,OAAQC,WAAY,KAAMlL,SAC9C,sBAGDC,EAAAA,EAAAA,MAACkL,EAAAA,EAAS,CAACC,QAAM,EAAApL,SAAA,EACfF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJjE,KAAK,SACLuI,GAAG,eACHuF,SAAU/D,EACVjB,MAAO,CACLiF,UAAW,OACXhJ,QAAS,OACTiJ,OAAQ,OACRC,OAAQ,OACRlF,MAAO,QAET3E,SAAWvB,GAlEJkJ,WAErB,GADAnB,QAAQC,IAAIhI,EAAG,oBACVpD,EAAQ,OACb,MAAMyO,EAAYrL,EAAEwB,OAAOyJ,QAC3B9D,EAAWkE,GAEXtD,QAAQC,IAAIqD,EAAW,aACvB,UACQvO,GACJwO,EAAAA,EAAAA,IAA2B,CACzBnL,OAAQvD,EAAOwD,OAEjBmL,SACFjE,GAAYD,EACd,CAAE,MAAOmE,GACPzD,QAAQjJ,MAAM,iBAAkB0M,EAClC,GAkD+BC,CAAezL,MAElCN,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACuK,IAAI,eAAeC,OAAK,WAGnCjM,EAAAA,EAAAA,KAAA,UAAQvC,KAAK,SAASmD,UAAU,2BAA0BV,SAAC,iBAQlE,CACDmG,EACAlB,EACAmB,EACAlB,GACA7I,EACAyN,KAGF,OACE7J,EAAAA,EAAAA,MAACF,EAAAA,SAAc,CAAAC,SAAA,EASbC,EAAAA,EAAAA,MAAC+L,EAAAA,EAAG,CAACC,OAAK,EAACvL,UAAU,8BAA6BV,SAAA,EAChDF,EAAAA,EAAAA,KAACoM,EAAAA,EAAO,CAAChL,QAASA,IAAM0G,EAAO,GAAG5H,UAChCF,EAAAA,EAAAA,KAACqM,EAAAA,EAAO,CAACC,OAAgB,IAARzE,EAAW0E,KAAK,IAAGrM,SAAC,gBAIvCF,EAAAA,EAAAA,KAACoM,EAAAA,EAAO,CAAChL,QAASA,IAAM0G,EAAO,GAAG5H,UAChCF,EAAAA,EAAAA,KAACqM,EAAAA,EAAO,CAACC,OAAgB,IAARzE,EAAW0E,KAAK,IAAGrM,SAAC,iBAMhC,IAAR2H,GACC7H,EAAAA,EAAAA,KAACwM,EAAO,CACNzP,QAASA,EACTC,WAAYA,EACZC,eAAgBA,EAChBC,OAAQA,EACRC,OAAQA,KAGVgD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAC+L,EAAAA,EAAG,CAACC,OAAK,EAACvL,UAAU,8BAA6BV,SAAA,EAChDF,EAAAA,EAAAA,KAACoM,EAAAA,EAAO,CAAChL,QAASA,IAAM4G,EAAe,GAAG9H,UACxCF,EAAAA,EAAAA,KAACqM,EAAAA,EAAO,CAACC,OAAwB,IAAhBvE,EAAmBwE,KAAK,IAAGrM,SAAC,mBAI/CF,EAAAA,EAAAA,KAACoM,EAAAA,EAAO,CAAChL,QAASA,IAAM4G,EAAe,GAAG9H,UACxCF,EAAAA,EAAAA,KAACqM,EAAAA,EAAO,CAACC,OAAwB,IAAhBvE,EAAmBwE,KAAK,IAAGrM,SAAC,gBAKhC,IAAhB6H,GACC/H,EAAAA,EAAAA,KAAAyM,EAAAA,SAAA,CAAAvM,SAAG+K,MAEHjL,EAAAA,EAAAA,KAAC0M,EAAAA,EAAc,CACbxP,OAAQA,EACRX,YAAaA,EACbY,OAAQA,EACR4J,eAAgBA,W,wQCrtB9B,MAAM4F,EAAUC,IACd,MAAM,WAAEC,EAAU,SAAEC,EAAQ,WAAEC,EAAU,SAAE7M,GAAa0M,EACvD,OACE5M,EAAAA,EAAAA,KAAA,OAAAL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEqN,IAAKF,GACDC,GAAU,IACdnM,UAAS,OAAApB,OACPqN,EAAa,wBAA0B,kBACtC3M,SAEFA,MAMD8D,EAAapH,IAQZ,IARa,MAClBoC,EAAK,SACL6C,EAAQ,QACRsC,EAAO,MACPP,EAAK,SACLhC,EAAQ,SACRI,EAAQ,YACRiL,EAAc,eACfrQ,EACC,OACEuD,EAAAA,EAAAA,MAAA,OAAKS,UAAU,oBAAmBV,SAAA,EAChCC,EAAAA,EAAAA,MAACsB,EAAAA,EAAK,CAACb,UAAU,4BAA2BV,SAAA,CACzC0D,EACAhC,IAAY5B,EAAAA,EAAAA,KAAA,QAAMY,UAAU,mBAAkBV,SAAC,UAElDF,EAAAA,EAAAA,KAACoE,EAAAA,GAAM,CACLxC,SAAUA,EACVsL,WAAYlL,EACZqC,WAAY,CAAEsI,UACd3N,MAAOA,EACPuF,OAAQ,CACN4I,QAASA,CAAC1I,EAAMnI,KAAKqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB8E,GAAI,IACP2I,UAAW,OACX1B,OAAQ,OACRP,SAAU,WACVkC,YAAa/Q,EAAMgR,UAAY,UAAY,UAC3C9B,UAAWlP,EAAMgR,UACb,yCACA,OACJ,UAAW,CACTD,YAAa/Q,EAAMgR,UAAY,UAAY,WAE7CC,gBAAiBvL,EAAW,UAAY,QACxCwL,aAAc,aAEhBhJ,WAAaC,IAAI9E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZ8E,GAAI,IACPC,OAAQ,OAEVxC,OAAQA,CAACuC,EAAMnI,KAAKqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACf8E,GAAI,IACPgJ,QAAS,WACTF,gBAAiBjR,EAAMuQ,WACnB,UACAvQ,EAAMgR,UACN,UACA,QACJpM,MAAO5E,EAAMuQ,WAAa,QAAU,UACpCa,OAAQ,UACR,UAAW,CACTH,gBAAiBjR,EAAMuQ,WAAa,UAAY,aAGpDc,YAAclJ,IAAI9E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACb8E,GAAI,IACPvD,MAAO,YAET+L,YAAcxI,IAAI9E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACb8E,GAAI,IACPvD,MAAO,aAGXyD,0BAAwB,EACxBC,iBAAkBC,SAASC,KAC3BC,aAAa,QACblD,SAAUA,EACVsC,QAASA,EACT8I,YAAaA,EACbW,aAAa,EACbC,gBAAgB,oBAOlBC,EAAoB5J,IAQnB,IARoB,MACzBlF,EAAK,SACL6C,EAAQ,SACRzF,EAAQ,SACR4F,EAAQ,aACRxE,EAAY,iBACZuQ,EAAgB,uBAChBC,GACD9J,EACC,MAAMC,EAAU,CACd,CAAEnF,MAAO,UAAW4E,MAAO,WAC3B,CAAE5E,MAAO,SAAU4E,MAAO,WAsB5B,OACEzD,EAAAA,EAAAA,MAAA,OAAKS,UAAU,oBAAmBV,SAAA,EAChCC,EAAAA,EAAAA,MAACsB,EAAAA,EAAK,CAACb,UAAU,4BAA2BV,SAAA,CAAC,gBAE3CF,EAAAA,EAAAA,KAAA,QAAMY,UAAU,mBAAkBV,SAAC,UAErCF,EAAAA,EAAAA,KAACoE,EAAAA,GAAM,CACL8I,WAAYlL,EACZhD,MAAOmF,EAAQsG,KAAMvI,GAAWA,EAAOlD,QAAUA,GACjD6C,SAAWvB,GA5BS2N,KACxB,MAAMC,EAAiB9R,EAASoB,GAChC,GAAI0Q,EAAevI,WAAauI,EAAe3I,SAC1ByI,EACjB5R,EACAoB,EACA0Q,EAAevI,UACfuI,EAAe3I,QACf0I,GAIA,OAIJpM,EAASoM,IAYYE,CAAiB7N,EAAEtB,OACpCmF,QAASA,EACTI,OAAQ,CACN4I,QAASA,CAAC1I,EAAMnI,KAAKqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB8E,GAAI,IACP2I,UAAW,OACX1B,OAAQ,OACRP,SAAU,WACVkC,YAAa/Q,EAAMgR,UAAY,UAAY,UAC3C9B,UAAWlP,EAAMgR,UACb,yCACA,OACJ,UAAW,CACTD,YAAa/Q,EAAMgR,UAAY,UAAY,WAE7CC,gBAAiBvL,EAAW,UAAY,QACxCwL,aAAc,aAEhBhJ,WAAaC,IAAI9E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZ8E,GAAI,IACPC,OAAQ,OAEVxC,OAAQA,CAACuC,EAAMnI,KAAKqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACf8E,GAAI,IACPgJ,QAAS,WACTF,gBAAiBjR,EAAMuQ,WACnB,UACAvQ,EAAMgR,UACN,UACA,QACJpM,MAAO5E,EAAMuQ,WAAa,QAAU,UACpCa,OAAQ,UACR,UAAW,CACTH,gBAAiBjR,EAAMuQ,WAAa,UAAY,cAItDlI,0BAAwB,EACxBC,iBAAkBC,SAASC,KAC3BC,aAAa,QACbkI,YAAY,cACZW,aAAa,EACbC,gBAAgB,4BAsiBxB,EAhiBuB5I,IAAsD,IAArD,eAAE8B,EAAc,OAAE7J,EAAM,YAAEX,EAAW,OAAEY,GAAQ8H,EACrE,MAAM7H,GAAWC,EAAAA,EAAAA,OACVqJ,EAAiB0H,IAAsB1G,EAAAA,EAAAA,UAAS,KAAO,IAAD2G,EAC3D,OAAkB,OAAdtH,QAAc,IAAdA,GAA+B,QAAjBsH,EAAdtH,EAAgBL,uBAAe,IAAA2H,OAAjB,EAAdA,EAAiCzQ,QAAS,EACrC2E,IAAAA,UAAYwE,EAAeL,iBAE7B,MAEF4H,EAAeP,IAAoBrG,EAAAA,EAAAA,UAAS,CAAC,IAC7CtI,EAAOmP,IAAY7G,EAAAA,EAAAA,UAAS,IAE7B5I,EAAeA,CAACwB,EAAGkB,KACvB,IAAIgN,EAAO,IAAI9H,GACf,MAAM+H,EAAOnO,EAAEwB,OAAO4M,KAChB1P,EAAQ2P,SAASrO,EAAEwB,OAAO9C,OAEhC,GAAa,SAATyP,EAWF,GAVAD,EAAKI,QAAQ,CAACvI,EAAUwI,KAAc,IAADC,EAAAC,EAAAC,EACnC,GACEH,IAAarN,IACE,QAAfsN,EAAAzI,EAASxH,cAAM,IAAAiQ,OAAA,EAAfA,EAAiBpO,QAAiB,QAAdqO,EAAKP,EAAKhN,UAAI,IAAAuN,GAAQ,QAARC,EAATD,EAAWlQ,cAAM,IAAAmQ,OAAR,EAATA,EAAmBtO,MAC5C2F,EAAS4I,KAAKC,SAASlQ,GACvB,CACA,MAAMmQ,EAAe9I,EAAS4I,KAAK3M,OAAQ8M,GAAQA,IAAQpQ,GAC3DwP,EAAKK,GAAUI,KAAOE,CACxB,IAEEX,EAAKhN,GAAKiN,GAAMS,SAASlQ,GAAQ,CAEnC,MAAMqQ,EAAUb,EAAKhN,GAAKiN,GAAMS,SAASlQ,GACrCwP,EAAKhN,GAAKiN,GAAMnM,OAAQnE,GAASA,IAASa,GAC1C,IAAKwP,EAAKhN,GAAKiN,IAAS,GAAKzP,GACjCwP,EAAKhN,GAAKiN,GAAQY,CACpB,MAAYb,EAAKhN,GAAKiN,GAAMS,SAASlQ,KACnCwP,EAAKhN,GAAKiN,GAAQ,IAAKD,EAAKhN,GAAKiN,IAAS,GAAKzP,IAGnDoP,EAAmBI,KAGrBjG,EAAAA,EAAAA,WAAU,KAAO,IAAD+G,EACd,GAAU,OAANpS,QAAM,IAANA,GAAY,QAANoS,EAANpS,EAAQP,YAAI,IAAA2S,GAAZA,EAAc5I,gBAAiB,CACjC,MAAM6I,EAAwBhN,IAAAA,UAC5BrF,EAAOP,KAAK+J,gBAAgBA,iBAE9B0H,EAAmBmB,EACrB,GACC,CAACrS,IAGJ,MAAM8Q,EAAyBA,CAC7B5R,EACAoB,EACAgS,EACAC,EACAxB,KAEA,IAAK,IAAIpO,EAAI,EAAGA,EAAIzD,EAASwB,OAAQiC,IAAK,CACxC,GAAIA,IAAMrC,EAAc,SAExB,MAAMa,EAAUjC,EAASyD,GACzB,GAAKxB,EAAQsH,WAActH,EAAQkH,SAG/BlH,EAAQZ,OAASwQ,EAAS,CAC5B,MAAMyB,EAAgB,IAAIrM,KAAKhF,EAAQsH,WACjCgK,EAAc,IAAItM,KAAKhF,EAAQkH,SAC/BqK,EAAe,IAAIvM,KAAKmM,GACxBK,EAAa,IAAIxM,KAAKoM,GAE5B,GACGG,GAAgBF,GAAiBE,EAAeD,GAChDE,EAAaH,GAAiBG,GAAcF,GAC5CC,GAAgBF,GAAiBG,GAAcF,EAEhD,OAAO,CAEX,CACF,CACA,OAAO,GAIHG,EAAaA,CAACxP,EAAGkB,EAAK3B,KAC1B,IAAI2O,EAAO,IAAI9H,GACf,MAAM+H,EAAOnO,EAAEwB,OAAO4M,KAChB1P,EAAQsB,EAAEwB,OAAO9C,MAGvB,GAAa,cAATyP,GAAiC,YAATA,EAAoB,CAEnC,cAATA,GAA+BD,EAAKhN,GAAKpF,SAASyD,GAAG8F,UAC/B,YAAT8I,GAA6BD,EAAKhN,GAAKpF,SAASyD,GAAG0F,QAC9CiJ,EAAKhN,GAAKpF,SAASyD,GAAGpC,IAC5C,CAEA+Q,EAAKhN,GAAKpF,SAASyD,GAAG4O,GAAQzP,EAC9BoP,EAAmBI,KASPuB,EAAAA,EAAAA,GACZ,CACE9M,MAAO,IAAII,MAAK,IAAIA,MAAOF,SAAS,IAAID,WAAW,GACnDK,IAAK,IAAIF,MAAK,IAAIA,MAAOF,SAAS,KAAKD,WAAW,IAEpD,CAAE8M,KAAM,KAwBV,OACEhQ,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,UACbF,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CACHC,SAAWC,IACTA,EAAEC,iBAxBW6I,MACnB,MAAM6G,EAAYvJ,EAAgB+D,KAAMvF,IAAG,IAAAgL,EAAA,OAA2B,KAAnB,OAAHhL,QAAG,IAAHA,GAAS,QAANgL,EAAHhL,EAAK+J,YAAI,IAAAiB,OAAN,EAAHA,EAAWtS,UACrC8I,EAAgBxI,KAAMgH,GAC1CA,EAAI9I,SAAS8B,KACVG,IAAaA,EAAQZ,OAASY,EAAQsH,YAActH,EAAQkH,UAK/DgJ,EACE,+EAKC0B,GACH7S,GAAS+S,EAAAA,EAAAA,KAAsB,CAAEzJ,kBAAiBgD,KAAY,OAANxM,QAAM,IAANA,OAAM,EAANA,EAAQwD,QAS5D0I,IACO,GAETxI,UAAU,mBACVsK,OAAO,IAAGhL,UAEVC,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAAAX,SAAA,EACAwG,GAAmB,IAAI9G,IAAI,CAACzB,EAAMqD,KAAG,IAAA4O,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACrCxQ,EAAAA,EAAAA,MAACF,EAAAA,SAAc,CAAAC,SAAA,EACbF,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,GAAGb,UACVC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,OAAMV,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,yEAAwEV,SAAA,CACpF,KACDC,EAAAA,EAAAA,MAACsB,EAAAA,EAAK,CAACb,UAAU,aAAYV,SAAA,CAAC,SACvBF,EAAAA,EAAAA,KAAA,QAAMY,UAAU,cAAaV,SAAC,UAErCF,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLG,QAASA,IAzDLI,KACtB,MAAMgN,EAAO,IAAI9H,GACjB8H,EAAKoC,OAAOpP,EAAK,GACjB4M,EAAmBI,IAsDcpJ,CAAe5D,GAC9BN,MAAM,SACNC,KAAK,KAAIjB,UAETF,EAAAA,EAAAA,KAAA,KAAGY,UAAU,+CAGjBT,EAAAA,EAAAA,MAAA,OAAKS,UAAU,mBAAkBV,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,sCAAqCV,SAAA,EAClDF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJd,UAAU,YACVnD,KAAK,WACLiR,KAAK,OACL1P,MAAO,EACP6C,SAAWvB,GAAMxB,EAAawB,EAAGkB,GACjC+J,QAAkB,QAAX6E,EAAEjS,EAAK8Q,YAAI,IAAAmB,OAAA,EAATA,EAAWlB,SAAS,MAE/BlP,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACb,UAAU,kCAAiCV,SAAC,eAIrDC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,sCAAqCV,SAAA,EAClDF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJd,UAAU,YACVnD,KAAK,WACLiR,KAAK,OACL1P,MAAO,EACP6C,SAAWvB,GAAMxB,EAAawB,EAAGkB,GACjC+J,QAAkB,QAAX8E,EAAElS,EAAK8Q,YAAI,IAAAoB,OAAA,EAATA,EAAWnB,SAAS,MAE/BlP,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACb,UAAU,kCAAiCV,SAAC,gBAIrDC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,sCAAqCV,SAAA,EAClDF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJd,UAAU,YACVnD,KAAK,WACLiR,KAAK,OACL1P,MAAO,EACP6C,SAAWvB,GAAMxB,EAAawB,EAAGkB,GACjC+J,QAAkB,QAAX+E,EAAEnS,EAAK8Q,YAAI,IAAAqB,OAAA,EAATA,EAAWpB,SAAS,MAE/BlP,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACb,UAAU,kCAAiCV,SAAC,kBAIrDC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,sCAAqCV,SAAA,EAClDF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJd,UAAU,YACVnD,KAAK,WACLiR,KAAK,OACL1P,MAAO,EACP6C,SAAWvB,GAAMxB,EAAawB,EAAGkB,GACjC+J,QAAkB,QAAXgF,EAAEpS,EAAK8Q,YAAI,IAAAsB,OAAA,EAATA,EAAWrB,SAAS,MAE/BlP,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACb,UAAU,kCAAiCV,SAAC,iBAIrDC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,sCAAqCV,SAAA,EAClDF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJd,UAAU,YACVnD,KAAK,WACLiR,KAAK,OACL1P,MAAO,EACP6C,SAAWvB,GAAMxB,EAAawB,EAAGkB,GACjC+J,QAAkB,QAAXiF,EAAErS,EAAK8Q,YAAI,IAAAuB,OAAA,EAATA,EAAWtB,SAAS,MAE/BlP,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACb,UAAU,kCAAiCV,SAAC,eAIrDC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,sCAAqCV,SAAA,EAClDF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJd,UAAU,YACVnD,KAAK,WACLiR,KAAK,OACL1P,MAAO,EACP6C,SAAWvB,GAAMxB,EAAawB,EAAGkB,GACjC+J,QAAkB,QAAXkF,EAAEtS,EAAK8Q,YAAI,IAAAwB,OAAA,EAATA,EAAWvB,SAAS,MAE/BlP,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACb,UAAU,kCAAiCV,SAAC,iBAIrDC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,sCAAqCV,SAAA,EAClDF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJd,UAAU,YACVnD,KAAK,WACLiR,KAAK,OACL1P,MAAO,EACP6C,SAAWvB,GAAMxB,EAAawB,EAAGkB,GACjC+J,QAAkB,QAAXmF,EAAEvS,EAAK8Q,YAAI,IAAAyB,OAAA,EAATA,EAAWxB,SAAS,MAE/BlP,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACb,UAAU,kCAAiCV,SAAC,eAKrDC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,eAAcV,SAAA,EAC3BF,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACN,KAAK,KAAIjB,SAAC,aACjBC,EAAAA,EAAAA,MAACuB,EAAAA,EAAK,CACJC,OAAO,KACPlE,KAAK,SACLmE,UAAQ,EACR5C,MAAOb,EAAKU,OACZgD,SAAWvB,IACT,MAAMuQ,EAAY,IAAInK,GACtBmK,EAAUrP,GAAa,OAAIlB,EAAEwB,OAAO9C,MACpCoP,EAAmByC,IACnB3Q,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQhB,MAAM,GAAG+C,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAA/B,SAAC,iBAGxC3D,GAAe,IAAIqD,IAAI,CAACsC,EAAQV,KAChCxB,EAAAA,EAAAA,KAAA,UAAkBhB,MAAOkD,EAAOxB,IAAIR,SACjCgC,EAAOO,OADGjB,mBASzBrB,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAU,CAACC,QAAY,OAAJ5S,QAAI,IAAJA,GAAU,QAANwS,EAAJxS,EAAM8Q,YAAI,IAAA0B,OAAN,EAAJA,EAAY/S,QAAS,EAAEsC,SAAA,EACzCF,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,GAAGb,UACVC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,yDAAwDV,SAAA,EACrEF,EAAAA,EAAAA,KAAA,MAAIY,UAAU,oBAAmBV,SAAC,cAClCC,EAAAA,EAAAA,MAACc,EAAAA,EAAM,CACLC,MAAM,QACNC,KAAK,KACLP,UAAU,4BACVQ,QAASA,KACP,MAAMoN,EAAO,IAAI9H,GACjB8H,EAAKhN,GAAKpF,SAASuH,KAAK,CACtBgC,UAAW,GACXJ,QAAS,GACT9H,KAAM,KAER2Q,EAAmBI,IACnBtO,SAAA,EAEFF,EAAAA,EAAAA,KAAA,KAAGY,UAAU,qBAAuB,wBAIxCzC,EAAK/B,UAAY,IAAIwD,IAAI,CAACoR,EAAMnR,KAChCG,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAASE,GAAI,EAAEd,UACjBF,EAAAA,EAAAA,KAAA,OAAKY,UAAU,sBAAqBV,UAClCC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,gBAAeV,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,yDAAwDV,SAAA,EACrEC,EAAAA,EAAAA,MAAA,OAAKS,UAAU,4BAA2BV,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OACEY,UAAU,6FACV2F,MAAO,CAAEC,MAAO,OAAQkF,OAAQ,QAASxL,SAExCL,EAAI,KAEPM,EAAAA,EAAAA,MAAA,MAAIS,UAAU,gCAA+BV,SAAA,CAAC,WACnCL,EAAI,SAGjBM,EAAAA,EAAAA,MAAA,OAAKS,UAAU,4BAA2BV,SAAA,EACxCF,EAAAA,EAAAA,KAAC8N,EAAiB,CAChB9O,MAAOgS,EAAKvT,KACZoE,SAAW7C,IACT,MAAMwP,EAAO,IAAI9H,GACjB8H,EAAKhN,GAAKpF,SAASyD,GAAGpC,KAAOuB,EAC7BoP,EAAmBI,IAErBpS,SAAU+B,EAAK/B,SACfoB,aAAcqC,EACdkO,iBAAkBA,EAClBC,uBAAwBA,IAEzBnO,EAAI,IACHG,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLC,MAAM,OACNN,UAAU,oDACVQ,QAASA,KACP,MAAM6P,EAAkB,IAAI9S,EAAK/B,UACjC6U,EAAgBL,OAAO/Q,EAAG,GAC1B,MAAMqR,EAAkB,IAAIxK,GAC5BwK,EAAgB1P,GAAKpF,SACnB6U,EACF7C,EAAmB8C,IAOnBhR,UAEFF,EAAAA,EAAAA,KAAA,KAAGY,UAAU,uCAKrBT,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAACD,UAAU,MAAKV,SAAA,EAClBF,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAEb,UACTF,EAAAA,EAAAA,KAACgE,EAAU,CACThF,MACEgS,EAAKrL,UACD,CACE/B,OAAOC,EAAAA,EAAAA,GACL,IAAIR,KAAK2N,EAAKrL,WACd,WAEF3G,OAAOoE,EAAAA,EAAAA,IACLwC,EAAAA,EAAAA,GACE,IAAIvC,KAAK2N,EAAKrL,WACd,GAEF,GACA7B,eAEJ,KAENjC,SAAWvB,IACT,GAAIA,EAAG,CACL,MAAMwF,EAAK,IAAIzC,KAAK/C,EAAEtB,OAChB2G,GAAY9B,EAAAA,EAAAA,GAAOiC,EAAI,SAE7B,GAAIkL,EAAKzL,QAAS,CAKhB,GAAII,IAJY9B,EAAAA,EAAAA,GACd,IAAIR,KAAK2N,EAAKzL,SACd,SAGA,MAEJ,CAEAuK,EACE,CACEhO,OAAQ,CACN4M,KAAM,YACN1P,MAAO8G,IAGXtE,EACA3B,EAEJ,GAEFsE,SAASxB,EAAAA,EAAAA,IAAc,CACrBC,KAAMoO,EAAKzL,SAAW,IAAIlC,KAC1BN,QAASiO,EAAKzL,QACV,IAAIlC,KAAK2N,EAAKzL,SAASC,WACvB,EACJxC,WAAYgO,EAAKzL,QACb,IAAIlC,KAAK2N,EAAKzL,SAASE,aACvB,IAEN7B,MAAM,aACNhC,UAAQ,EACRI,UAAWgP,EAAKvT,KAChBwP,YAAY,kBAGhBjN,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,EAAEb,UACTF,EAAAA,EAAAA,KAACgE,EAAU,CACThF,MACEgS,EAAKzL,QACD,CACE3B,OAAOC,EAAAA,EAAAA,GACL,IAAIR,KAAK2N,EAAKzL,SACd,WAEFvG,OAAOoE,EAAAA,EAAAA,IACLwC,EAAAA,EAAAA,GACE,IAAIvC,KAAK2N,EAAKzL,SACd,GAEF,GACAzB,eAEJ,KAENjC,SAAWvB,IACT,GAAIA,EAAG,CACL,MAAMwF,EAAK,IAAIzC,KAAK/C,EAAEtB,OAChBuG,GAAU1B,EAAAA,EAAAA,GAAOiC,EAAI,SAE3B,GAAIkL,EAAKrL,UAAW,CAKlB,GAAIJ,IAJc1B,EAAAA,EAAAA,GAChB,IAAIR,KAAK2N,EAAKrL,WACd,SAGA,MAEJ,CAEAmK,EACE,CACEhO,OAAQ,CACN4M,KAAM,UACN1P,MAAO8G,IAGXtE,EACA3B,EAEJ,GAEFsE,SAASxB,EAAAA,EAAAA,IAAc,CACrBC,KAAMoO,EAAKrL,WAAa,IAAItC,KAC5BR,UAAWmO,EAAKrL,UACZ,IAAItC,KAAK2N,EAAKrL,WAAWH,WACzB,EACJ1C,aAAckO,EAAKrL,UACf,IAAItC,KAAK2N,EAAKrL,WAAWF,aACzB,IAEN7B,MAAM,WACNhC,UAAQ,EACRI,UAAWgP,EAAKvT,KAChBwP,YAAY,wBA5KdpN,SA9JK2B,KA6VtBpC,IACCY,EAAAA,EAAAA,KAAA,OAAKY,UAAU,OAAMV,UACnBC,EAAAA,EAAAA,MAAA,SAAOS,UAAU,wCAAuCV,SAAA,EACtDF,EAAAA,EAAAA,KAAA,KAAGY,UAAU,+BACZxB,QAIPY,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,GAAGb,UACVF,EAAAA,EAAAA,KAAA,OAAKY,UAAU,gBAAeV,UAC5BF,EAAAA,EAAAA,KAAA,UACEoB,QAASA,KACPgN,EAAmB,IACd1H,EACH,CACE7H,OAAQ,KACRoQ,KAAM,GACN7S,SAAU,CAAC,CAAEuJ,UAAW,GAAIJ,QAAS,GAAI9H,KAAM,SAIrDA,KAAK,SACLmD,UAAU,6CAA4CV,SACvD,0BAKLF,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,GAAI,GAAGb,UACVF,EAAAA,EAAAA,KAAA,OAAKY,UAAU,kCAAiCV,UAC9CF,EAAAA,EAAAA,KAAA,UAAQvC,KAAK,SAASmD,UAAU,yBAAwBV,SAAC,oB","sources":["pages/Booking/Components/Pricing.js","pages/Booking/Components/Schedule.js","pages/Setting/Calender/Components/DoctorSchedule.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Button, Col, Form, Input, Label, Row } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport {\n  addUserSessionPricing,\n  updateUserSessionPricing,\n} from \"../../../store/actions\";\n\nconst sessions = [10, 15, 30, 40, 50, 60, 75, 90, 120];\n\nconst Pricing = ({\n  pricing,\n  setPricing,\n  sessionPricing,\n  userCenters,\n  doctor,\n  toggle,\n}) => {\n  const dispatch = useDispatch();\n\n  // Validation functions\n  const validatePrice = (value) => {\n    const numValue = Number(value);\n    // if (!value || value === \"\") {\n    //   toast.error(\"Price is required!\");\n    //   return false;\n    // }\n    // if (isNaN(numValue)) {\n    //   toast.error(\"Price must be a valid number!\");\n    //   return false;\n    // }\n    if (numValue < 0) {\n      toast.error(\"Price cannot be negative!\");\n      return false;\n    }\n    if (numValue % 1 !== 0) {\n      toast.error(\"Price must be a whole number!\");\n      return false;\n    }\n    return true;\n  };\n\n  const validateSession = (value) => {\n    const numValue = Number(value);\n    if (!value || value === \"\") {\n      toast.error(\"Session duration is required!\");\n      return false;\n    }\n    if (isNaN(numValue)) {\n      toast.error(\"Session duration must be a valid number!\");\n      return false;\n    }\n    if (numValue < 0) {\n      toast.error(\"Session duration cannot be negative!\");\n      return false;\n    }\n    if (numValue % 1 !== 0) {\n      toast.error(\"Session duration must be a whole number!\");\n      return false;\n    }\n    return true;\n  };\n\n  const validateCenter = (centerId) => {\n    if (!centerId || centerId === \"\") {\n      toast.error(\"Please select a center!\");\n      return false;\n    }\n    return true;\n  };\n\n  const isSessionDuplicate = (\n    sessionValue,\n    currentIndex,\n    type,\n    centerIndex = null,\n    subIndex = null\n  ) => {\n    if (!sessionValue) return false;\n    sessionValue = Number(sessionValue);\n\n    if (type === \"online\") {\n      return pricing?.online?.some(\n        (item, index) =>\n          Number(item.session) === sessionValue &&\n          index !== currentIndex &&\n          item.session !== \"\"\n      );\n    } else if (type === \"offline\") {\n      return pricing?.offline[centerIndex]?.pricings?.some(\n        (item, index) =>\n          Number(item.session) === sessionValue &&\n          index !== subIndex &&\n          item.session !== \"\"\n      );\n    }\n    return false;\n  };\n\n  const isCenterDuplicate = (centerId, currentIndex) => {\n    if (!centerId) return false;\n    return pricing?.offline?.some(\n      (item, index) =>\n        item.center === centerId && index !== currentIndex && item.center !== \"\"\n    );\n  };\n\n  const handleChange = (type, index, key, value, subIndex = null) => {\n    // Common validations\n    if (key === \"price\") {\n      // Allow empty string for price\n      if (value === \"\") {\n        value = \"\";\n      } else {\n        const isValid = validatePrice(value);\n        if (!isValid) return;\n        value = Number(value); // Convert to number only if not empty\n      }\n    }\n    if (key === \"session\") {\n      const isValid = validateSession(value);\n      if (!isValid) return;\n      value = Number(value); // Convert to number after validation\n    }\n\n    if (type === \"online\") {\n      // Online session validations\n      if (key === \"session\") {\n        if (isSessionDuplicate(value, index, \"online\")) {\n          toast.error(\n            `${value} minutes session already exists in online pricing!`\n          );\n          return;\n        }\n      }\n    } else if (type === \"offline\") {\n      // Offline session validations\n      if (key === \"center\") {\n        if (!validateCenter(value)) return;\n        if (isCenterDuplicate(value, index)) {\n          toast.error(\"This center already has pricing configured!\");\n          return;\n        }\n      }\n\n      if (key === \"session\") {\n        if (isSessionDuplicate(value, index, \"offline\", index, subIndex)) {\n          toast.error(\n            `${value} minutes session already exists for this center!`\n          );\n          return;\n        }\n      }\n    }\n\n    // Update pricing state after all validations pass\n    setPricing((prevPricing) => {\n      const updatedPricing = { ...prevPricing };\n\n      if (type === \"online\") {\n        updatedPricing.online = updatedPricing.online.map((item, i) =>\n          i === index ? { ...item, [key]: value } : item\n        );\n      } else if (type === \"offline\") {\n        updatedPricing.offline = updatedPricing.offline.map((center, i) => {\n          if (i === index) {\n            if (key === \"center\") {\n              return { ...center, [key]: value };\n            }\n\n            const updatedPricings = center.pricings.map((pricing, j) =>\n              j === subIndex ? { ...pricing, [key]: value } : pricing\n            );\n            return { ...center, pricings: updatedPricings };\n          }\n          return center;\n        });\n      }\n\n      return updatedPricing;\n    });\n  };\n\n  const addOfflineCenter = () => {\n    setPricing((prevPricing) => ({\n      ...prevPricing,\n      offline: [\n        ...prevPricing.offline,\n        {\n          center: \"\",\n          pricings: [\n            { session: \"\", price: \"\" },\n            { session: \"\", price: \"\" },\n          ],\n        },\n      ],\n    }));\n  };\n\n  const removeOfflineCenter = (index) => {\n    setPricing((prevPricing) => ({\n      ...prevPricing,\n      offline: prevPricing.offline.filter((_, i) => i !== index),\n    }));\n  };\n\n  const removeOnlineSession = (index) => {\n    setPricing((prevPricing) => ({\n      ...prevPricing,\n      online: prevPricing.online.filter((_, i) => i !== index),\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    if (sessionPricing) {\n      dispatch(\n        updateUserSessionPricing({\n          userId: doctor?._id,\n          sessionPricing: pricing,\n        })\n      );\n    } else {\n      dispatch(\n        addUserSessionPricing({ sessionPricing: pricing, userId: doctor?._id })\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit(e);\n        }}\n        className=\"w-100 my-4\"\n      >\n        <Row className=\"gap-4\">\n          <Col xs={12} md={6} className=\"rounded-xl py-4 px-3 shadow-lg\">\n            <div className=\"d-flex justify-content-between align-items-center mb-3\">\n              <h5 className=\"display-h5\">Online Pricing</h5>\n              <Button\n                color=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  const newPricing = { ...pricing };\n                  newPricing.online = [\n                    ...(newPricing.online || []),\n                    { session: \"\", price: \"\" },\n                  ];\n                  setPricing(newPricing);\n                }}\n              >\n                Add Session\n              </Button>\n            </div>\n\n            {pricing?.online?.map((prc, idx) => (\n              <Row key={idx} className=\"mb-3\">\n                <Col xs={2} md={5} className=\"d-flex align-items-end\">\n                  <div className=\"mt-auto\">\n                    <Label size=\"sm\">Session</Label>\n                    <Input\n                      bsSize=\"sm\"\n                      type=\"select\"\n                      required\n                      value={prc.session}\n                      onChange={(e) =>\n                        handleChange(\"online\", idx, \"session\", e.target.value)\n                      }\n                    >\n                      <option value=\"\" selected disabled hidden>\n                        Choose here\n                      </option>\n                      {sessions.map((option) => (\n                        <option\n                          key={option}\n                          value={option}\n                          disabled={isSessionDuplicate(option, idx, \"online\")}\n                        >\n                          {option} min\n                        </option>\n                      ))}\n                    </Input>\n                  </div>\n                </Col>\n                <Col xs={2} md={5}>\n                  <div className=\"mt-auto\">\n                    <Label size=\"sm\">Session Price</Label>\n                    <Input\n                      bsSize=\"sm\"\n                      type=\"text\"\n                      required\n                      value={prc.price}\n                      onChange={(e) =>\n                        handleChange(\"online\", idx, \"price\", e.target.value)\n                      }\n                      onKeyPress={(e) => {\n                        // Allow only numbers and backspace\n                        if (!/[0-9]/.test(e.key) && e.key !== \"Backspace\") {\n                          e.preventDefault();\n                        }\n                      }}\n                    />\n                  </div>\n                </Col>\n                <Col xs={2} md={2} className=\"d-flex align-items-end\">\n                  <Button\n                    size=\"sm\"\n                    onClick={() => removeOnlineSession(idx)}\n                    color=\"danger\"\n                    outline\n                    type=\"button\"\n                    className=\"mb-1\"\n                  >\n                    <i className=\"ri-close-circle-line font-size-20\"></i>\n                  </Button>\n                </Col>\n              </Row>\n            ))}\n          </Col>\n          <Col xs={12} md={12} className=\"shadow-lg py-4 px-3\">\n            <h5 className=\"display-h5\">Offline Pricing</h5>\n\n            {pricing?.offline?.map((prc, idx) => (\n              <Row\n                key={idx}\n                className={`${\n                  idx !== pricing.offline.length - 1\n                    ? \"border-bottom border-dark pb-4\"\n                    : \"\"\n                }`}\n              >\n                <Col xs={3} md={4}>\n                  <div className=\"\">\n                    <Label size=\"sm\">Centers</Label>\n                    <Input\n                      bsSize=\"sm\"\n                      type=\"select\"\n                      required\n                      value={prc.center}\n                      onChange={(e) =>\n                        handleChange(\"offline\", idx, \"center\", e.target.value)\n                      }\n                    >\n                      <option value=\"\" selected disabled hidden>\n                        Choose here\n                      </option>\n                      {(userCenters || []).map((option) => (\n                        <option\n                          key={option._id}\n                          value={option._id}\n                          disabled={isCenterDuplicate(option._id, idx)}\n                        >\n                          {option.title}\n                        </option>\n                      ))}\n                    </Input>\n                  </div>\n                </Col>\n\n                <Col xs={2} md={6} className=\"\">\n                  {(prc?.pricings || []).map((pricing, i) => (\n                    <div className=\"d-flex gap-4\" key={i}>\n                      <div className=\"mt-auto\">\n                        <Label size=\"sm\">Session</Label>\n                        <Input\n                          bsSize=\"sm\"\n                          type=\"select\"\n                          required\n                          value={pricing.session}\n                          onChange={(e) =>\n                            handleChange(\n                              \"offline\",\n                              idx,\n                              \"session\",\n                              e.target.value,\n                              i\n                            )\n                          }\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            Choose here\n                          </option>\n                          {sessions.map((option) => (\n                            <option\n                              key={option}\n                              value={option}\n                              disabled={isSessionDuplicate(\n                                option,\n                                idx,\n                                \"offline\",\n                                idx,\n                                i\n                              )}\n                            >\n                              {option} min\n                            </option>\n                          ))}\n                        </Input>\n                      </div>\n\n                      <div className=\"mt-auto\">\n                        <Label size=\"sm\">Session Price</Label>\n                        <Input\n                          bsSize=\"sm\"\n                          type=\"text\"\n                          required\n                          value={pricing.price}\n                          onChange={(e) =>\n                            handleChange(\n                              \"offline\",\n                              idx,\n                              \"price\",\n                              e.target.value,\n                              i\n                            )\n                          }\n                          onKeyPress={(e) => {\n                            // Allow only numbers and backspace\n                            if (!/[0-9]/.test(e.key) && e.key !== \"Backspace\") {\n                              e.preventDefault();\n                            }\n                          }}\n                        />\n                      </div>\n                    </div>\n                  ))}\n                </Col>\n                <Col xs={2} className=\"d-flex flex-col\">\n                  <Button\n                    size=\"sm\"\n                    onClick={() => removeOfflineCenter(idx)}\n                    color=\"danger\"\n                    outline\n                    type=\"button\"\n                    className=\"mt-auto\"\n                  >\n                    <i className=\"ri-close-circle-line font-size-20 mt-auto\"></i>\n                  </Button>\n                </Col>\n              </Row>\n            ))}\n\n            <button\n              onClick={() => addOfflineCenter()}\n              type=\"button\"\n              className=\"btn d-block btn-primary btn-sm\"\n            >\n              Add\n            </button>\n          </Col>\n        </Row>\n\n        <div className=\"d-flex justify-content-end my-4\">\n          <button type=\"submit\" className=\"btn btn-secondary btn-sm\">\n            Save\n          </button>\n        </div>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userCenters: state.User.userCenters,\n  centers: state.Center.data,\n});\n\nexport default connect(mapStateToProps)(Pricing);\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo,\n} from \"react\";\n//flatpicker\nimport Flatpicker from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\n\n//react-select\nimport Select, { components } from \"react-select\";\n\n// Formik Validation\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Button,\n  Col,\n  Form,\n  Input,\n  Label,\n  Nav,\n  NavItem,\n  NavLink,\n  FormGroup,\n  Row,\n} from \"reactstrap\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  addUserIncrementalSchedule,\n  fetchUserSchedule,\n} from \"../../../store/actions\";\nimport {\n  addDays,\n  eachDayOfInterval,\n  eachMinuteOfInterval,\n  endOfDay,\n  format,\n  setHours,\n  setMilliseconds,\n  setMinutes,\n  startOfDay,\n  addMinutes,\n  setSeconds,\n} from \"date-fns\";\nimport Pricing from \"./Pricing\";\nimport WeeklySchedule from \"../../Setting/Calender/Components/DoctorSchedule\";\n// import { markedUserActiveOrInactive } from \"../../../store/actions\";\nimport { markedUserActiveOrInactive } from \"../../../store/features/auth/user/userSlice\";\n\nexport const generateTimes = ({\n  date,\n  startHour = 0,\n  startMinutes = 0,\n  endHour = 0,\n  endMinutes = 0,\n}) => {\n  const start =\n    startHour > 0\n      ? setMinutes(\n          setHours(setSeconds(new Date(date), 0), startHour),\n          startMinutes + 15 || 0\n        )\n      : startOfDay(new Date(date));\n\n  const end =\n    endHour > 0\n      ? setMinutes(\n          setHours(setSeconds(new Date(date), 0), endHour),\n          endMinutes - 15 || 0\n        )\n      : endOfDay(new Date(date));\n\n  const times = [];\n  let current = start;\n\n  while (current <= end) {\n    times.push({\n      label: format(current, \"h:mm a\"),\n      value: current.toISOString(),\n    });\n    current = addMinutes(current, 15);\n  }\n\n  return times;\n};\n\nexport const Option = (props) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    props.isSelected &&\n      ref.current.scrollIntoView({ behavior: \"instant\", block: \"center\" });\n  }, [props.isSelected]);\n\n  return !props.isDisabled ? (\n    <components.Option {...props} innerRef={ref} />\n  ) : null;\n};\n\n// Create a separate TimeSelect component\nexport const TimeSelect = memo(\n  ({ value, onChange, options, label, required, generateTimes }) => {\n    return (\n      <div className=\"position-relative\">\n        <Label className=\"form-label\">\n          {label}\n          {required && <span className=\"text-danger\">*</span>}\n        </Label>\n        <Select\n          required={required}\n          components={components}\n          defaultValue={value}\n          styles={{\n            menuPortal: (base) => ({\n              ...base,\n              zIndex: 9999,\n            }),\n          }}\n          menuShouldScrollIntoView\n          menuPortalTarget={document.body}\n          menuPosition=\"fixed\"\n          onChange={onChange}\n          options={options}\n        />\n      </div>\n    );\n  }\n);\n\n// Create a separate ScheduleRow component\nconst ScheduleRow = memo(\n  ({\n    sch,\n    idx,\n    i,\n    date,\n    generateTimes,\n    handleScheduleChange,\n    removeSchedule,\n    userCenters,\n  }) => {\n    const startTimeOptions = useMemo(\n      () =>\n        generateTimes({\n          date: date.date,\n          endHour: sch.endTime ? new Date(sch.endTime).getHours() : 0,\n          endMinutes: sch.endTime ? new Date(sch.endTime).getMinutes() : 0,\n        }),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [date.date, sch.endTime]\n    );\n\n    const endTimeOptions = useMemo(\n      () =>\n        generateTimes({\n          date: date.date,\n          startHour: sch.startTime ? new Date(sch.startTime).getHours() : 0,\n          startMinutes: sch.startTime\n            ? new Date(sch.startTime).getMinutes()\n            : 0,\n        }),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [date.date, sch.startTime]\n    );\n\n    return (\n      <Row key={sch.id}>\n        <Col xs={3}>\n          <TimeSelect\n            value={{\n              label: sch.startTime && format(new Date(sch.startTime), \"h:mm a\"),\n              value:\n                sch.startTime &&\n                setSeconds(\n                  setMilliseconds(new Date(sch.startTime), 0),\n                  0\n                ).toISOString(),\n            }}\n            onChange={(e) => {\n              const updatedDate = new Date(date.date);\n              const dt = new Date(e.value);\n              updatedDate.setHours(\n                dt.getHours(),\n                dt.getMinutes(),\n                dt.getSeconds(),\n                0\n              );\n              handleScheduleChange(i, idx, \"startTime\", updatedDate);\n            }}\n            options={startTimeOptions}\n            label=\"Start Time\"\n            required\n          />\n        </Col>\n        <Col xs={3}>\n          <TimeSelect\n            value={{\n              label: sch.endTime && format(new Date(sch.endTime), \"h:mm a\"),\n              value:\n                sch.endTime &&\n                setSeconds(\n                  setMilliseconds(new Date(sch.endTime), 0),\n                  0\n                ).toISOString(),\n            }}\n            onChange={(e) => {\n              const updatedDate = new Date(date.date);\n              const dt = new Date(e.value);\n              updatedDate.setHours(\n                dt.getHours(),\n                dt.getMinutes(),\n                dt.getSeconds(),\n                0\n              );\n              handleScheduleChange(i, idx, \"endTime\", updatedDate);\n            }}\n            options={endTimeOptions}\n            label=\"End Time\"\n            required\n          />\n        </Col>\n        <Col xs={3} className=\"d-flex align-items-end\">\n          <div className=\"mt-auto\">\n            <Label size=\"sm\">Type</Label>\n            <Input\n              bsSize=\"sm\"\n              type=\"select\"\n              value={sch.type}\n              onChange={(e) =>\n                handleScheduleChange(i, idx, \"type\", e.target.value)\n              }\n            >\n              <option value=\"\" selected disabled hidden>\n                Choose here\n              </option>\n              {([\"ONLINE\", \"OFFLINE\"] || []).map((option, idx) => (\n                <option key={idx} id={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Input>\n          </div>\n        </Col>\n\n        {sch.type === \"OFFLINE\" && (\n          <Col xs={2}>\n            <div className=\"\">\n              <Label size=\"sm\">Centers</Label>\n              <Input\n                bsSize=\"sm\"\n                type=\"select\"\n                value={sch.center}\n                onChange={(e) => {\n                  const id =\n                    e.target.options[e.target.selectedIndex].getAttribute(\"id\");\n                  handleScheduleChange(i, idx, \"center\", id);\n                }}\n              >\n                <option value=\"\" selected disabled hidden>\n                  Choose here\n                </option>\n                {(userCenters || []).map((option, idx) => (\n                  <option key={idx} id={option._id} value={option._id}>\n                    {option.title}\n                  </option>\n                ))}\n              </Input>\n            </div>\n          </Col>\n        )}\n\n        <Col xs={1} className=\"d-flex flex-col\">\n          <Button\n            size=\"sm\"\n            onClick={() => removeSchedule(i, idx)}\n            color=\"danger\"\n            outline\n            type=\"button\"\n            className=\"mt-auto\"\n          >\n            <i\n              className={`${\n                idx === 0 ? \"ri-eraser-line\" : \"ri-close-circle-line\"\n              } font-size-20 mt-auto`}\n            ></i>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n);\n\n// Create a separate DateRow component\nconst DateRow = memo(\n  ({\n    date,\n    i,\n    schedule,\n    generateTimes,\n    handleScheduleChange,\n    addSchedule,\n    removeSchedule,\n    userCenters,\n  }) => {\n    return (\n      <div\n        key={date.id}\n        className={\n          schedule.length > 1 && i !== schedule.length - 1\n            ? `border-bottom border-dark overflow-auto pb-2 d-flex gap-4 align-items-center mb-3 m-auto`\n            : `d-flex gap-4 align-items-end mb-3 overflow-auto m-auto`\n        }\n        style={{ width: \"800px\" }}\n      >\n        <time\n          className=\"bg-secondary text-nowrap text-center rounded text-white p-2\"\n          aria-label={date.date.toDateString()}\n        >\n          <span>{format(date.date, \"dd MMM yyyy\")}</span>\n          <span className=\"d-block\">{format(date.date, \"EEEE\")}</span>\n        </time>\n\n        <div className=\"flex-grow-1\">\n          {(date.workingSchedule || []).map((sch, idx) => (\n            <ScheduleRow\n              key={sch.id}\n              sch={sch}\n              idx={idx}\n              i={i}\n              date={date}\n              generateTimes={generateTimes}\n              handleScheduleChange={handleScheduleChange}\n              removeSchedule={removeSchedule}\n              userCenters={userCenters}\n            />\n          ))}\n        </div>\n\n        <button\n          onClick={() => addSchedule(i)}\n          type=\"button\"\n          className=\"btn d-block btn-primary btn-sm\"\n        >\n          Add\n        </button>\n      </div>\n    );\n  }\n);\n\nconst Schedule = ({\n  isOpen,\n  toggle,\n  doctor,\n  userCenters,\n  sessionPricing,\n  userSchedule,\n  weeklySchedule,\n}) => {\n  const dispatch = useDispatch();\n  const [toggled, setToggled] = useState(false);\n  const [apiFlag, setApiFlag] = useState(false);\n\n  const [tab, setTab] = useState(0);\n  const [scheduleTab, setScheduleTab] = useState(0);\n  const [pricing, setPricing] = useState({\n    online: [{ session: \"\", price: \"\" }],\n    offline: [\n      {\n        center: \"\",\n        pricings: [\n          { session: \"\", price: \"\" },\n          { session: \"\", price: \"\" },\n        ],\n      },\n    ],\n  });\n\n  // track ids to delete\n  const [deleteScheduleIds, setDeleteScheduleIds] = useState([]);\n  const [deleteSlotIds, setDeleteSlotIds] = useState([]);\n  console.log(deleteSlotIds);\n\n  useEffect(() => {\n    if (sessionPricing) {\n      setPricing(sessionPricing);\n    }\n  }, [sessionPricing]);\n\n  const date = new Date();\n\n  const initialSchedule = useMemo(\n    () =>\n      eachDayOfInterval({\n        start: date,\n        end: addDays(date, 29),\n      }).map((dt) => ({\n        id: uuid(),\n        date: new Date(dt.setHours(12, 12, 12, 12)),\n        workingSchedule: [\n          { id: uuid(), type: \"\", startTime: \"\", endTime: \"\", center: null },\n        ],\n      })),\n    [date]\n  );\n\n  const [schedule, setSchedule] = useState(initialSchedule);\n\n  const handleScheduleChange = useCallback(\n    (dateIndex, scheduleIndex, field, value) => {\n      setSchedule((prevSchedule) =>\n        prevSchedule.map((d, i) => {\n          if (i === dateIndex) {\n            return {\n              ...d,\n              workingSchedule: d.workingSchedule.map((sch, j) =>\n                j === scheduleIndex\n                  ? {\n                      ...sch,\n                      ...(value === \"ONLINE\" && { center: null }),\n                      [field]: value,\n                    }\n                  : sch\n              ),\n            };\n          }\n          return d;\n        })\n      );\n    },\n    []\n  );\n\n  const addSchedule = useCallback((dateIndex) => {\n    setSchedule((prevDates) =>\n      prevDates.map((d, i) =>\n        i === dateIndex\n          ? {\n              ...d,\n              workingSchedule: [\n                ...d.workingSchedule,\n                {\n                  id: uuid(),\n                  type: \"\",\n                  startTime: \"\",\n                  endTime: \"\",\n                  center: \"\",\n                },\n              ],\n            }\n          : d\n      )\n    );\n  }, []);\n\n  const removeSchedule = useCallback((dateIndex, scheduleIndex) => {\n    setSchedule((prevDates) =>\n      prevDates.map((date, i) =>\n        i === dateIndex\n          ? {\n              ...date,\n              workingSchedule:\n                scheduleIndex === 0\n                  ? date.workingSchedule.map((_, idx) =>\n                      idx === scheduleIndex\n                        ? {\n                            id: uuid(),\n                            type: \"\",\n                            startTime: \"\",\n                            endTime: \"\",\n                            center: \"\",\n                          }\n                        : _\n                    )\n                  : date.workingSchedule.filter(\n                      (_, idx) => idx !== scheduleIndex\n                    ),\n            }\n          : date\n      )\n    );\n  }, []);\n\n  const bulkEditSchedule = useCallback((values) => {\n    setSchedule((prevSchedule) =>\n      prevSchedule.map((s) => ({\n        ...s,\n        workingSchedule: s.workingSchedule.map((w) => ({\n          ...(w.startTime ? w : values),\n        })),\n      }))\n    );\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (values) => {\n      function cleanData(data) {\n        return data\n          .map((item) => ({\n            date: item.date,\n            workingSchedule: item.workingSchedule\n              .filter(\n                (schedule) =>\n                  schedule.startTime !== \"\" && schedule.endTime !== \"\"\n              )\n              .map(({ id, ...rest }) => rest),\n          }))\n          .filter((item) => item.workingSchedule.length > 0);\n      }\n\n      const payload = {\n        userId: values.user,\n        workingSchedulesData: cleanData(values.workingSchedule),\n      };\n\n      dispatch(addUserIncrementalSchedule(payload));\n      toggle();\n    },\n    [dispatch, toggle]\n  );\n\n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n\n    initialValues: {\n      user: doctor?._id,\n      workingSchedule: schedule,\n    },\n    validationSchema: Yup.object({\n      user: Yup.string().required(\"User ID is required\"),\n    }),\n    onSubmit: handleSubmit,\n  });\n\n  const getDoctorSchedule = useCallback(() => {\n    if (userSchedule?.length > 0) {\n      let scheduleCopy = schedule;\n      scheduleCopy = scheduleCopy.map((sch) => {\n        //new Date(sch.date).toISOString().split(\"T\")[0];\n\n        const matchedSchedule = userSchedule.find(\n          (val) => {\n            return (\n              val.date &&\n              format(new Date(val.date), \"dd MMM yyyy\") ===\n                format(new Date(sch.date), \"dd MMM yyyy\")\n            );\n          } //new Date(val.date).toISOString().split(\"T\")[0] === schDate\n        );\n\n        if (matchedSchedule) {\n          return {\n            ...matchedSchedule,\n            id: uuid(),\n            date: sch.date,\n          };\n        }\n        return sch;\n      });\n\n      setSchedule(scheduleCopy);\n    } else {\n      setSchedule(\n        eachDayOfInterval({\n          start: date,\n          end: addDays(date, 29),\n        }).map((dt) => ({\n          id: uuid(),\n          date: new Date(dt.setHours(12, 12, 12, 12)),\n          workingSchedule: [\n            { id: uuid(), type: \"\", startTime: \"\", endTime: \"\", center: null },\n          ],\n        }))\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userSchedule]);\n\n  useEffect(() => {\n    getDoctorSchedule();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, userSchedule]);\n\n  useEffect(() => {\n    console.log(doctor, \"run change listing\");\n    const fetchSchedule = async () => {\n      if (doctor?._id) {\n        const resultAction = await dispatch(fetchUserSchedule(doctor._id));\n        console.log(resultAction, \"resultAction of listing\");\n        setToggled(resultAction?.payload?.user?.isHideFromSearch);\n      }\n    };\n\n    fetchSchedule();\n  }, [dispatch, doctor?._id, apiFlag]);\n\n  const components = {\n    Option: Option,\n  };\n\n  useEffect(() => {\n    if (doctor) {\n      setToggled(doctor?.isHideFromSearch);\n    }\n  }, [doctor]);\n\n  const handleUserHide = async (e) => {\n    console.log(e, \"website listing\");\n    if (!doctor) return;\n    const newStatus = e.target.checked;\n    setToggled(newStatus);\n\n    console.log(newStatus, \"newStatus\");\n    try {\n      await dispatch(\n        markedUserActiveOrInactive({\n          userId: doctor._id,\n        })\n      ).unwrap();\n      setApiFlag(!apiFlag); // or show a toast/snackbar here\n    } catch (err) {\n      console.error(\"Update failed:\", err);\n    }\n  };\n\n  const memoizeIncrementalSchedule = useMemo(() => {\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          validation.handleSubmit();\n          return false;\n        }}\n        className=\"needs-validation m-auto\"\n        action=\"#\"\n      >\n        <div>\n          <div className=\"h-500 overflow-auto\">\n            {schedule.map((date, i) => (\n              <DateRow\n                key={date.id}\n                date={date}\n                i={i}\n                schedule={schedule}\n                generateTimes={generateTimes}\n                handleScheduleChange={handleScheduleChange}\n                addSchedule={addSchedule}\n                removeSchedule={removeSchedule}\n                userCenters={userCenters}\n              />\n            ))}\n          </div>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"d-flex gap-2\">\n              <span\n                className=\"text-black\"\n                style={{ fontSize: \"16px\", fontWeight: 700 }}\n              >\n                Website Listing:\n              </span>\n              <FormGroup switch>\n                <Input\n                  type=\"switch\"\n                  id=\"activeSwitch\"\n                  checked={!toggled}\n                  style={{\n                    boxShadow: \"none\",\n                    outline: \"none\",\n                    border: \"none\",\n                    height: \"18px\",\n                    width: \"40px\",\n                  }}\n                  onChange={(e) => handleUserHide(e)}\n                />\n                <Label for=\"activeSwitch\" check></Label>\n              </FormGroup>\n            </div>\n            <button type=\"submit\" className=\"btn btn-secondary btn-sm\">\n              Save\n            </button>\n          </div>\n        </div>\n      </Form>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    schedule,\n    handleScheduleChange,\n    addSchedule,\n    removeSchedule,\n    userCenters,\n    validation,\n  ]);\n\n  return (\n    <React.Fragment>\n      {/* <CustomModal\n        title={\"User Schedule\"}\n        centered\n        isOpen={isOpen}\n        toggle={toggle}\n        size={\"lg\"}\n      > */}\n\n      <Nav pills className=\"mb-4 justify-content-center\">\n        <NavItem onClick={() => setTab(0)}>\n          <NavLink active={tab === 0} href=\"#\">\n            Schedule\n          </NavLink>\n        </NavItem>\n        <NavItem onClick={() => setTab(1)}>\n          <NavLink active={tab === 1} href=\"#\">\n            Pricing\n          </NavLink>\n        </NavItem>\n      </Nav>\n\n      {tab === 1 ? (\n        <Pricing\n          pricing={pricing}\n          setPricing={setPricing}\n          sessionPricing={sessionPricing}\n          doctor={doctor}\n          toggle={toggle}\n        />\n      ) : (\n        <div>\n          <Nav pills className=\"mb-4 justify-content-center\">\n            <NavItem onClick={() => setScheduleTab(0)}>\n              <NavLink active={scheduleTab === 0} href=\"#\">\n                Incremental\n              </NavLink>\n            </NavItem>\n            <NavItem onClick={() => setScheduleTab(1)}>\n              <NavLink active={scheduleTab === 1} href=\"#\">\n                Weekly\n              </NavLink>\n            </NavItem>\n          </Nav>\n          {scheduleTab === 0 ? (\n            <>{memoizeIncrementalSchedule}</>\n          ) : (\n            <WeeklySchedule\n              doctor={doctor}\n              userCenters={userCenters}\n              toggle={toggle}\n              weeklySchedule={weeklySchedule}\n            />\n          )}\n        </div>\n      )}\n      {/* </CustomModal> */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  appointments: state.Booking.data,\n  // user: state.User.user,\n  userSchedule: state.User.incrementalSchedule, //state.Setting.doctorAvailableSlots,\n  weeklySchedule: state.User.weeklySchedule,\n  userCenters: state.User.userCenters,\n  sessionPricing: state.User.sessionPricing,\n  centers: state.Center.data,\n  currentEvent: state.Booking.event,\n  patients: state.Patient.allPatients,\n  centerAccess: state.User.centerAccess,\n});\n\nexport default connect(mapStateToProps)(Schedule);\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CustomModal from \"../../../../Components/Common/Modal\";\nimport {\n  Row,\n  Col,\n  Input,\n  Label,\n  Button,\n  Form,\n  InputGroup,\n  InputGroupText,\n  FormGroup,\n} from \"reactstrap\";\nimport RenderWhen from \"../../../../Components/Common/RenderWhen\";\nimport _ from \"lodash\";\nimport { eachMinuteOfInterval, format } from \"date-fns\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addUserWeeklySchedule,\n  updateUserWeeklySchedule,\n} from \"../../../../store/actions\";\nimport Select, { components } from \"react-select\";\nimport { setSeconds, setMilliseconds } from \"date-fns\";\nimport { generateTimes } from \"../../../Booking/Components/Schedule\";\n\n// Custom Option component for react-select\nconst Option = (props) => {\n  const { isSelected, innerRef, innerProps, children } = props;\n  return (\n    <div\n      ref={innerRef}\n      {...innerProps}\n      className={`p-2 ${\n        isSelected ? \"bg-primary text-white\" : \"hover:bg-light\"\n      }`}\n    >\n      {children}\n    </div>\n  );\n};\n\n// TimeSelect component\nconst TimeSelect = ({\n  value,\n  onChange,\n  options,\n  label,\n  required,\n  disabled,\n  placeholder = \"Choose time\",\n}) => {\n  return (\n    <div className=\"position-relative\">\n      <Label className=\"form-label mb-1 fw-medium\">\n        {label}\n        {required && <span className=\"text-danger ms-1\">*</span>}\n      </Label>\n      <Select\n        required={required}\n        isDisabled={disabled}\n        components={{ Option }}\n        value={value}\n        styles={{\n          control: (base, state) => ({\n            ...base,\n            minHeight: \"36px\",\n            height: \"36px\",\n            fontSize: \"0.875rem\",\n            borderColor: state.isFocused ? \"#0d6efd\" : \"#dee2e6\",\n            boxShadow: state.isFocused\n              ? \"0 0 0 0.25rem rgba(13, 110, 253, 0.25)\"\n              : \"none\",\n            \"&:hover\": {\n              borderColor: state.isFocused ? \"#0d6efd\" : \"#dee2e6\",\n            },\n            backgroundColor: disabled ? \"#e9ecef\" : \"white\",\n            borderRadius: \"0.375rem\",\n          }),\n          menuPortal: (base) => ({\n            ...base,\n            zIndex: 9999,\n          }),\n          option: (base, state) => ({\n            ...base,\n            padding: \"8px 12px\",\n            backgroundColor: state.isSelected\n              ? \"#0d6efd\"\n              : state.isFocused\n              ? \"#f8f9fa\"\n              : \"white\",\n            color: state.isSelected ? \"white\" : \"#212529\",\n            cursor: \"pointer\",\n            \"&:hover\": {\n              backgroundColor: state.isSelected ? \"#0d6efd\" : \"#f8f9fa\",\n            },\n          }),\n          singleValue: (base) => ({\n            ...base,\n            color: \"#212529\",\n          }),\n          placeholder: (base) => ({\n            ...base,\n            color: \"#6c757d\",\n          }),\n        }}\n        menuShouldScrollIntoView\n        menuPortalTarget={document.body}\n        menuPosition=\"fixed\"\n        onChange={onChange}\n        options={options}\n        placeholder={placeholder}\n        isClearable={false}\n        classNamePrefix=\"time-select\"\n      />\n    </div>\n  );\n};\n\n// Update the SessionTypeSelect component to receive setSessionErrors and validateSessionOverlap as props\nconst SessionTypeSelect = ({\n  value,\n  onChange,\n  sessions,\n  disabled,\n  currentIndex,\n  setSessionErrors,\n  validateSessionOverlap,\n}) => {\n  const options = [\n    { value: \"OFFLINE\", label: \"Offline\" },\n    { value: \"ONLINE\", label: \"Online\" },\n  ];\n\n  const handleTypeChange = (newType) => {\n    const currentSession = sessions[currentIndex];\n    if (currentSession.startTime && currentSession.endTime) {\n      const hasOverlap = validateSessionOverlap(\n        sessions,\n        currentIndex,\n        currentSession.startTime,\n        currentSession.endTime,\n        newType\n      );\n\n      if (hasOverlap) {\n        return;\n      }\n    }\n\n    onChange(newType);\n  };\n\n  return (\n    <div className=\"position-relative\">\n      <Label className=\"form-label mb-1 fw-medium\">\n        Session Type\n        <span className=\"text-danger ms-1\">*</span>\n      </Label>\n      <Select\n        isDisabled={disabled}\n        value={options.find((option) => option.value === value)}\n        onChange={(e) => handleTypeChange(e.value)}\n        options={options}\n        styles={{\n          control: (base, state) => ({\n            ...base,\n            minHeight: \"36px\",\n            height: \"36px\",\n            fontSize: \"0.875rem\",\n            borderColor: state.isFocused ? \"#0d6efd\" : \"#dee2e6\",\n            boxShadow: state.isFocused\n              ? \"0 0 0 0.25rem rgba(13, 110, 253, 0.25)\"\n              : \"none\",\n            \"&:hover\": {\n              borderColor: state.isFocused ? \"#0d6efd\" : \"#dee2e6\",\n            },\n            backgroundColor: disabled ? \"#e9ecef\" : \"white\",\n            borderRadius: \"0.375rem\",\n          }),\n          menuPortal: (base) => ({\n            ...base,\n            zIndex: 9999,\n          }),\n          option: (base, state) => ({\n            ...base,\n            padding: \"8px 12px\",\n            backgroundColor: state.isSelected\n              ? \"#0d6efd\"\n              : state.isFocused\n              ? \"#f8f9fa\"\n              : \"white\",\n            color: state.isSelected ? \"white\" : \"#212529\",\n            cursor: \"pointer\",\n            \"&:hover\": {\n              backgroundColor: state.isSelected ? \"#0d6efd\" : \"#f8f9fa\",\n            },\n          }),\n        }}\n        menuShouldScrollIntoView\n        menuPortalTarget={document.body}\n        menuPosition=\"fixed\"\n        placeholder=\"Select type\"\n        isClearable={false}\n        classNamePrefix=\"session-type-select\"\n      />\n    </div>\n  );\n};\n\nconst DoctorSchedule = ({ weeklySchedule, doctor, userCenters, toggle }) => {\n  const dispatch = useDispatch();\n  const [workingSchedule, setWorkingSchedule] = useState(() => {\n    if (weeklySchedule?.workingSchedule?.length > 0) {\n      return _.cloneDeep(weeklySchedule.workingSchedule);\n    }\n    return [];\n  });\n  const [sessionErrors, setSessionErrors] = useState({});\n  const [error, setError] = useState(\"\");\n\n  const handleChange = (e, idx) => {\n    let list = [...workingSchedule];\n    const prop = e.target.name;\n    const value = parseInt(e.target.value);\n\n    if (prop === \"days\") {\n      list.forEach((schedule, otherIdx) => {\n        if (\n          otherIdx !== idx &&\n          schedule.center?._id === list[idx]?.center?._id &&\n          schedule.days.includes(value)\n        ) {\n          const filteredDays = schedule.days.filter((day) => day !== value);\n          list[otherIdx].days = filteredDays;\n        }\n      });\n      if (list[idx][prop].includes(value)) {\n        // Update the days in the current schedule\n        const newDays = list[idx][prop].includes(value)\n          ? list[idx][prop].filter((item) => item !== value)\n          : [...(list[idx][prop] || []), value];\n        list[idx][prop] = newDays;\n      } else if (!list[idx][prop].includes(value)) {\n        list[idx][prop] = [...(list[idx][prop] || []), value];\n      }\n    } //else if (prop !== \"days\") list[idx][prop] = value;\n    setWorkingSchedule(list);\n  };\n\n  useEffect(() => {\n    if (doctor?.data?.workingSchedule) {\n      const clonedWorkingSchedule = _.cloneDeep(\n        doctor.data.workingSchedule.workingSchedule\n      );\n      setWorkingSchedule(clonedWorkingSchedule);\n    }\n  }, [doctor]);\n\n  // Add this validation function\n  const validateSessionOverlap = (\n    sessions,\n    currentIndex,\n    newStart,\n    newEnd,\n    newType\n  ) => {\n    for (let i = 0; i < sessions.length; i++) {\n      if (i === currentIndex) continue;\n\n      const session = sessions[i];\n      if (!session.startTime || !session.endTime) continue;\n\n      // If both sessions are of the same type, check for overlap\n      if (session.type === newType) {\n        const existingStart = new Date(session.startTime);\n        const existingEnd = new Date(session.endTime);\n        const newStartTime = new Date(newStart);\n        const newEndTime = new Date(newEnd);\n\n        if (\n          (newStartTime >= existingStart && newStartTime < existingEnd) ||\n          (newEndTime > existingStart && newEndTime <= existingEnd) ||\n          (newStartTime <= existingStart && newEndTime >= existingEnd)\n        ) {\n          return true; // Overlap found\n        }\n      }\n    }\n    return false; // No overlap\n  };\n\n  // Update the handleTime function\n  const handleTime = (e, idx, i) => {\n    let list = [...workingSchedule];\n    const prop = e.target.name;\n    const value = e.target.value;\n\n    // Validate time overlap before updating\n    if (prop === \"startTime\" || prop === \"endTime\") {\n      const newStart =\n        prop === \"startTime\" ? value : list[idx].sessions[i].startTime;\n      const newEnd = prop === \"endTime\" ? value : list[idx].sessions[i].endTime;\n      const sessionType = list[idx].sessions[i].type;\n    }\n\n    list[idx].sessions[i][prop] = value;\n    setWorkingSchedule(list);\n  };\n\n  const removeSchedule = (idx) => {\n    const list = [...workingSchedule];\n    list.splice(idx, 1);\n    setWorkingSchedule(list);\n  };\n\n  const hours = eachMinuteOfInterval(\n    {\n      start: new Date(new Date().setHours(0)).setMinutes(0),\n      end: new Date(new Date().setHours(23)).setMinutes(0),\n    },\n    { step: 15 }\n  );\n\n  // Update the handleSubmit function to validate session types\n  const handleSubmit = () => {\n    const checkDays = workingSchedule.find((sch) => sch?.days?.length === 0);\n    const checkSessions = workingSchedule.some((sch) =>\n      sch.sessions.some(\n        (session) => !session.type || !session.startTime || !session.endTime\n      )\n    );\n\n    if (checkSessions) {\n      setError(\n        \"Please fill in all session details including type, start time, and end time\"\n      );\n      return;\n    }\n\n    if (!checkDays) {\n      dispatch(addUserWeeklySchedule({ workingSchedule, user: doctor?._id }));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit();\n          return false;\n        }}\n        className=\"needs-validation\"\n        action=\"#\"\n      >\n        <Row>\n          {(workingSchedule || []).map((item, idx) => (\n            <React.Fragment key={idx}>\n              <Col xs={12}>\n                <div className=\"mb-3\">\n                  <div className=\"d-flex justify-content-between flex-wrap align-items-center mb-n4 mt-2\">\n                    {\" \"}\n                    <Label className=\"form-label\">\n                      Days <span className=\"text-danger\">*</span>\n                    </Label>\n                    <Button\n                      onClick={() => removeSchedule(idx)}\n                      color=\"danger\"\n                      size=\"sm\"\n                    >\n                      <i className=\"ri-close-circle-line fs-9 text-white\"></i>\n                    </Button>\n                  </div>\n                  <div className=\"d-flex flex-wrap\">\n                    <div className=\"d-flex me-3 align-items-center mt-2\">\n                      <Input\n                        className=\"me-2 mt-0\"\n                        type=\"checkbox\"\n                        name=\"days\"\n                        value={1}\n                        onChange={(e) => handleChange(e, idx)}\n                        checked={item.days?.includes(1)}\n                      />\n                      <Label className=\"form-label fs-9 text-black mb-0\">\n                        Monday\n                      </Label>\n                    </div>\n                    <div className=\"d-flex me-3 align-items-center mt-2\">\n                      <Input\n                        className=\"me-2 mt-0\"\n                        type=\"checkbox\"\n                        name=\"days\"\n                        value={2}\n                        onChange={(e) => handleChange(e, idx)}\n                        checked={item.days?.includes(2)}\n                      />\n                      <Label className=\"form-label fs-9 text-black mb-0\">\n                        Tuesday\n                      </Label>\n                    </div>\n                    <div className=\"d-flex me-3 align-items-center mt-2\">\n                      <Input\n                        className=\"me-2 mt-0\"\n                        type=\"checkbox\"\n                        name=\"days\"\n                        value={3}\n                        onChange={(e) => handleChange(e, idx)}\n                        checked={item.days?.includes(3)}\n                      />\n                      <Label className=\"form-label fs-9 text-black mb-0\">\n                        Wednesday\n                      </Label>\n                    </div>\n                    <div className=\"d-flex me-3 align-items-center mt-2\">\n                      <Input\n                        className=\"me-2 mt-0\"\n                        type=\"checkbox\"\n                        name=\"days\"\n                        value={4}\n                        onChange={(e) => handleChange(e, idx)}\n                        checked={item.days?.includes(4)}\n                      />\n                      <Label className=\"form-label fs-9 text-black mb-0\">\n                        Thursday\n                      </Label>\n                    </div>\n                    <div className=\"d-flex me-3 align-items-center mt-2\">\n                      <Input\n                        className=\"me-2 mt-0\"\n                        type=\"checkbox\"\n                        name=\"days\"\n                        value={5}\n                        onChange={(e) => handleChange(e, idx)}\n                        checked={item.days?.includes(5)}\n                      />\n                      <Label className=\"form-label fs-9 text-black mb-0\">\n                        Friday\n                      </Label>\n                    </div>\n                    <div className=\"d-flex me-3 align-items-center mt-2\">\n                      <Input\n                        className=\"me-2 mt-0\"\n                        type=\"checkbox\"\n                        name=\"days\"\n                        value={6}\n                        onChange={(e) => handleChange(e, idx)}\n                        checked={item.days?.includes(6)}\n                      />\n                      <Label className=\"form-label fs-9 text-black mb-0\">\n                        Saturday\n                      </Label>\n                    </div>\n                    <div className=\"d-flex me-3 align-items-center mt-2\">\n                      <Input\n                        className=\"me-2 mt-0\"\n                        type=\"checkbox\"\n                        name=\"days\"\n                        value={0}\n                        onChange={(e) => handleChange(e, idx)}\n                        checked={item.days?.includes(0)}\n                      />\n                      <Label className=\"form-label fs-9 text-black mb-0\">\n                        Sunday\n                      </Label>\n                    </div>\n\n                    <div className=\"mb-3 ms-md-3\">\n                      <Label size=\"sm\">Centers</Label>\n                      <Input\n                        bsSize=\"sm\"\n                        type=\"select\"\n                        required\n                        value={item.center}\n                        onChange={(e) => {\n                          const schedules = [...workingSchedule];\n                          schedules[idx][\"center\"] = e.target.value;\n                          setWorkingSchedule(schedules);\n                        }}\n                      >\n                        <option value=\"\" selected disabled hidden>\n                          Choose here\n                        </option>\n                        {(userCenters || []).map((option, idx) => (\n                          <option key={idx} value={option._id}>\n                            {option.title}\n                          </option>\n                        ))}\n                      </Input>\n                    </div>\n                  </div>\n                </div>\n              </Col>\n              <RenderWhen isTrue={item?.days?.length > 0}>\n                <Col xs={12}>\n                  <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                    <h6 className=\"mb-0 text-primary\">Sessions</h6>\n                    <Button\n                      color=\"light\"\n                      size=\"sm\"\n                      className=\"d-flex align-items-center\"\n                      onClick={() => {\n                        const list = [...workingSchedule];\n                        list[idx].sessions.push({\n                          startTime: \"\",\n                          endTime: \"\",\n                          type: \"\",\n                        });\n                        setWorkingSchedule(list);\n                      }}\n                    >\n                      <i className=\"ri-add-line me-1\"></i> Add Session\n                    </Button>\n                  </div>\n                </Col>\n                {(item.sessions || []).map((sess, i) => (\n                  <Col key={i} md={6}>\n                    <div className=\"card shadow-sm mb-3\">\n                      <div className=\"card-body p-3\">\n                        <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                          <div className=\"d-flex align-items-center\">\n                            <div\n                              className=\"bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-2\"\n                              style={{ width: \"28px\", height: \"28px\" }}\n                            >\n                              {i + 1}\n                            </div>\n                            <h6 className=\"mb-0 text-primary fw-semibold\">\n                              Session {i + 1}\n                            </h6>\n                          </div>\n                          <div className=\"d-flex align-items-center\">\n                            <SessionTypeSelect\n                              value={sess.type}\n                              onChange={(value) => {\n                                const list = [...workingSchedule];\n                                list[idx].sessions[i].type = value;\n                                setWorkingSchedule(list);\n                              }}\n                              sessions={item.sessions}\n                              currentIndex={i}\n                              setSessionErrors={setSessionErrors}\n                              validateSessionOverlap={validateSessionOverlap}\n                            />\n                            {i > 0 && (\n                              <Button\n                                color=\"link\"\n                                className=\"p-0 text-danger opacity-75 hover-opacity-100 ms-2\"\n                                onClick={() => {\n                                  const updatedSessions = [...item.sessions];\n                                  updatedSessions.splice(i, 1);\n                                  const updatedSchedule = [...workingSchedule];\n                                  updatedSchedule[idx].sessions =\n                                    updatedSessions;\n                                  setWorkingSchedule(updatedSchedule);\n                                  // Clear error when session is removed\n                                  // setSessionErrors((prev) => {\n                                  //   const newErrors = { ...prev };\n                                  //   delete newErrors[`${i}`];\n                                  //   return newErrors;\n                                  // });\n                                }}\n                              >\n                                <i className=\"ri-close-circle-line fs-5\"></i>\n                              </Button>\n                            )}\n                          </div>\n                        </div>\n                        <Row className=\"g-3\">\n                          <Col xs={6}>\n                            <TimeSelect\n                              value={\n                                sess.startTime\n                                  ? {\n                                      label: format(\n                                        new Date(sess.startTime),\n                                        \"hh:mm a\"\n                                      ),\n                                      value: setSeconds(\n                                        setMilliseconds(\n                                          new Date(sess.startTime),\n                                          0\n                                        ),\n                                        0\n                                      ).toISOString(),\n                                    }\n                                  : null\n                              }\n                              onChange={(e) => {\n                                if (e) {\n                                  const dt = new Date(e.value);\n                                  const startTime = format(dt, \"HH:mm\");\n\n                                  if (sess.endTime) {\n                                    const endTime = format(\n                                      new Date(sess.endTime),\n                                      \"HH:mm\"\n                                    );\n                                    if (startTime >= endTime) {\n                                      return;\n                                    }\n                                  }\n\n                                  handleTime(\n                                    {\n                                      target: {\n                                        name: \"startTime\",\n                                        value: dt,\n                                      },\n                                    },\n                                    idx,\n                                    i\n                                  );\n                                }\n                              }}\n                              options={generateTimes({\n                                date: sess.endTime || new Date(),\n                                endHour: sess.endTime\n                                  ? new Date(sess.endTime).getHours()\n                                  : 0,\n                                endMinutes: sess.endTime\n                                  ? new Date(sess.endTime).getMinutes()\n                                  : 0,\n                              })}\n                              label=\"Start Time\"\n                              required\n                              disabled={!sess.type}\n                              placeholder=\"start time\"\n                            />\n                          </Col>\n                          <Col xs={6}>\n                            <TimeSelect\n                              value={\n                                sess.endTime\n                                  ? {\n                                      label: format(\n                                        new Date(sess.endTime),\n                                        \"hh:mm a\"\n                                      ),\n                                      value: setSeconds(\n                                        setMilliseconds(\n                                          new Date(sess.endTime),\n                                          0\n                                        ),\n                                        0\n                                      ).toISOString(),\n                                    }\n                                  : null\n                              }\n                              onChange={(e) => {\n                                if (e) {\n                                  const dt = new Date(e.value);\n                                  const endTime = format(dt, \"HH:mm\");\n\n                                  if (sess.startTime) {\n                                    const startTime = format(\n                                      new Date(sess.startTime),\n                                      \"HH:mm\"\n                                    );\n                                    if (endTime <= startTime) {\n                                      return;\n                                    }\n                                  }\n\n                                  handleTime(\n                                    {\n                                      target: {\n                                        name: \"endTime\",\n                                        value: dt,\n                                      },\n                                    },\n                                    idx,\n                                    i\n                                  );\n                                }\n                              }}\n                              options={generateTimes({\n                                date: sess.startTime || new Date(),\n                                startHour: sess.startTime\n                                  ? new Date(sess.startTime).getHours()\n                                  : 0,\n                                startMinutes: sess.startTime\n                                  ? new Date(sess.startTime).getMinutes()\n                                  : 0,\n                              })}\n                              label=\"End Time\"\n                              required\n                              disabled={!sess.type}\n                              placeholder=\"End time\"\n                            />\n                          </Col>\n                        </Row>\n                        {/* {sessionErrors[`${i}`] && (\n                          <div className=\"mt-2\">\n                            <small className=\"text-danger d-flex align-items-center\">\n                              <i className=\"ri-error-warning-line me-1\"></i>\n                              {sessionErrors[`${i}`]}\n                            </small>\n                          </div>\n                        )} */}\n                      </div>\n                    </div>\n                  </Col>\n                ))}\n              </RenderWhen>\n            </React.Fragment>\n          ))}\n          {error && (\n            <div className=\"mt-2\">\n              <small className=\"text-danger d-flex align-items-center\">\n                <i className=\"ri-error-warning-line me-1\"></i>\n                {error}\n              </small>\n            </div>\n          )}\n          <Col xs={12}>\n            <div className=\"text-end my-3\">\n              <button\n                onClick={() => {\n                  setWorkingSchedule([\n                    ...workingSchedule,\n                    {\n                      center: null,\n                      days: [],\n                      sessions: [{ startTime: \"\", endTime: \"\", type: \"\" }],\n                    },\n                  ]);\n                }}\n                type=\"button\"\n                className=\"btn btn-primary btn-sm btn-outline ms-auto\"\n              >\n                Add more timings\n              </button>\n            </div>\n          </Col>\n          <Col xs={12}>\n            <div className=\"d-flex justify-content-end mt-3\">\n              <button type=\"submit\" className=\"btn btn-primary btn-sm\">\n                Save\n              </button>\n            </div>\n          </Col>\n        </Row>\n      </Form>\n      {/* </CustomModal> */}\n    </React.Fragment>\n  );\n};\n\nDoctorSchedule.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nexport default DoctorSchedule;\n"],"names":["sessions","connect","state","userCenters","User","centers","Center","data","_ref","_pricing$online2","_pricing$offline2","pricing","setPricing","sessionPricing","doctor","toggle","dispatch","useDispatch","isSessionDuplicate","sessionValue","currentIndex","type","centerIndex","arguments","length","undefined","subIndex","Number","_pricing$online","online","some","item","index","session","_pricing$offline$cent","offline","_pricing$offline$cent2","pricings","isCenterDuplicate","centerId","_pricing$offline","center","handleChange","key","value","isValid","numValue","toast","error","validatePrice","isNaN","validateSession","concat","prevPricing","updatedPricing","_objectSpread","map","i","updatedPricings","j","_jsx","React","children","_jsxs","Form","onSubmit","e","preventDefault","updateUserSessionPricing","userId","_id","addUserSessionPricing","className","Row","Col","xs","md","Button","color","size","onClick","newPricing","price","prc","idx","Label","Input","bsSize","required","onChange","target","selected","disabled","hidden","option","onKeyPress","test","removeOnlineSession","filter","_","outline","title","removeOfflineCenter","generateTimes","date","startHour","startMinutes","endHour","endMinutes","start","setMinutes","setHours","setSeconds","Date","startOfDay","end","endOfDay","times","current","push","label","format","toISOString","addMinutes","TimeSelect","memo","_ref2","options","Select","components","defaultValue","styles","menuPortal","base","zIndex","menuShouldScrollIntoView","menuPortalTarget","document","body","menuPosition","ScheduleRow","_ref3","sch","handleScheduleChange","removeSchedule","startTimeOptions","useMemo","endTime","getHours","getMinutes","endTimeOptions","startTime","setMilliseconds","updatedDate","dt","getSeconds","id","selectedIndex","getAttribute","DateRow","_ref4","schedule","addSchedule","style","width","toDateString","workingSchedule","appointments","Booking","userSchedule","incrementalSchedule","weeklySchedule","currentEvent","event","patients","Patient","allPatients","centerAccess","_ref5","isOpen","toggled","setToggled","useState","apiFlag","setApiFlag","tab","setTab","scheduleTab","setScheduleTab","deleteScheduleIds","setDeleteScheduleIds","deleteSlotIds","setDeleteSlotIds","console","log","useEffect","initialSchedule","eachDayOfInterval","addDays","uuid","setSchedule","useCallback","dateIndex","scheduleIndex","field","prevSchedule","d","prevDates","handleSubmit","values","s","w","async","payload","user","workingSchedulesData","_ref6","_objectWithoutProperties","_excluded","addUserIncrementalSchedule","validation","useFormik","enableReinitialize","initialValues","validationSchema","Yup","getDoctorSchedule","scheduleCopy","matchedSchedule","find","val","_resultAction$payload","_resultAction$payload2","resultAction","fetchUserSchedule","isHideFromSearch","fetchSchedule","memoizeIncrementalSchedule","action","fontSize","fontWeight","FormGroup","switch","checked","boxShadow","border","height","newStatus","markedUserActiveOrInactive","unwrap","err","handleUserHide","for","check","Nav","pills","NavItem","NavLink","active","href","Pricing","_Fragment","WeeklySchedule","Option","props","isSelected","innerRef","innerProps","ref","placeholder","isDisabled","control","minHeight","borderColor","isFocused","backgroundColor","borderRadius","padding","cursor","singleValue","isClearable","classNamePrefix","SessionTypeSelect","setSessionErrors","validateSessionOverlap","newType","currentSession","handleTypeChange","setWorkingSchedule","_weeklySchedule$worki","sessionErrors","setError","list","prop","name","parseInt","forEach","otherIdx","_schedule$center","_list$idx","_list$idx$center","days","includes","filteredDays","day","newDays","_doctor$data","clonedWorkingSchedule","newStart","newEnd","existingStart","existingEnd","newStartTime","newEndTime","handleTime","eachMinuteOfInterval","step","checkDays","_sch$days","addUserWeeklySchedule","_item$days","_item$days2","_item$days3","_item$days4","_item$days5","_item$days6","_item$days7","_item$days8","splice","schedules","RenderWhen","isTrue","sess","updatedSessions","updatedSchedule"],"sourceRoot":""}