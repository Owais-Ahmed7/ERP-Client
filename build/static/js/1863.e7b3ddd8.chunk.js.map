{"version":3,"file":"static/js/1863.e7b3ddd8.chunk.js","mappings":"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","sources":["Components/constants/report.js","pages/Report/Components/Dashboard/index.js","pages/Report/Components/Report/SeachPatient.js","pages/Report/Components/Report/data.js","pages/Report/Components/Report/Menu.js","pages/Report/Components/Report/Banner.js","pages/Report/Components/Report/AdvanceFilter/ReferrelPatient.js","pages/Report/Components/Report/AdvanceFilter/index.js","pages/Report/Components/Report/Table.js","pages/Report/Components/Report/index.js","pages/Report/Components/Finance/index.js","pages/Report/Components/Patient/index.js","pages/Report/Components/Lead/index.js","pages/Report/Components/OPD/index.js","pages/Report/Components/DBLogs/components/DBLogsHeader.js","pages/Report/Components/DBLogs/components/DBLogsFilters.js","pages/Report/Components/DBLogs/components/DBLogsTable.js","pages/Report/Components/DBLogs/index.js","pages/Report/Components/Booking/index.js","pages/Report/index.js","Components/Common/BreadCrumb.js","pages/Report/Components/Hubspot/index.js","pages/Report/Components/Header.js"],"sourcesContent":["export const DASHBOARD = \"DASHBOARD\";\nexport const REPORT = \"REPORT\";\nexport const FINANACE = \"FINANACE\";\nexport const DB_LOGS = \"DB_LOGS\";\nexport const PATIENT_ANALYTICS = \"PATIENT_ANALYTICS\";\nexport const LEAD_ANALYTICS = \"LEAD_ANALYTICS\";\nexport const OPD_ANALYTICS = \"OPD_ANALYTICS\";\nexport const HUBSPOT_CONTACTS = \"HUBSPOT_CONTACTS\";\nexport const BOOKING = \"BOOKING\";\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { fetchDashboardAnalytics } from \"../../../../store/actions\";\nimport MonthTillDate from \"../../../DashboardEcommerce/DashBoardTable/MonthTillDate\";\nimport MonthOnMonthTable from \"../../../DashboardEcommerce/DashBoardTable/MonthOnMonth\";\nimport PropTypes from \"prop-types\";\n\nconst Dashboard = ({ centers, data, loading }) => {\n  const dispatch = useDispatch();\n  const [selectedCenterId, setSelectedCenterId] = useState(\"\");\n\n  useEffect(() => {\n    if (selectedCenterId) {\n      dispatch(fetchDashboardAnalytics(selectedCenterId));\n    }\n  }, [selectedCenterId, dispatch]);\n\n  const handleSelectCenter = (event) => {\n    const centerId = event.target.value;\n    setSelectedCenterId(centerId);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"mt-5\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"page-title-box d-sm-flex align-items-center justify-content-between\">\n                <h4 className=\"mb-sm-0 font-size-18\">Dashboard</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"mb-3\">\n                  <label\n                    htmlFor=\"centerSelect\"\n                    className=\"form-label fw-semibold\"\n                  >\n                    Select a Center\n                  </label>\n                  <select\n                    id=\"centerSelect\"\n                    className=\"form-select\"\n                    onChange={handleSelectCenter}\n                    value={selectedCenterId}\n                  >\n                    <option value=\"\">Select a Center</option>\n                    {centers &&\n                      centers.map((center) => (\n                        <option key={center._id} value={center._id}>\n                          {center.title}\n                        </option>\n                      ))}\n                  </select>\n                </div>\n\n                {loading && (\n                  <div className=\"text-center py-4\">\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                      <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    <p className=\"mt-2 text-muted\">Loading dashboard data...</p>\n                  </div>\n                )}\n\n                {!loading && !selectedCenterId && (\n                  <div className=\"text-center py-4\">\n                    <p className=\"text-muted\">\n                      Please select a center to view dashboard analytics.\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {!loading && data && (\n          <div className=\"row\">\n            <div className=\"col-md-12 mb-3\">\n              <MonthTillDate\n                centerId={selectedCenterId}\n                data={data?.monthTillDate}\n              />\n            </div>\n            <div className=\"col-md-12\">\n              <MonthOnMonthTable\n                centerId={selectedCenterId}\n                data={data?.monthOnMonth}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  data: PropTypes.any,\n  loading: PropTypes.bool,\n  centers: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nDashboard.defaultProps = {\n  data: null,\n  loading: false,\n  centers: [],\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.Dashboard?.data || null,\n  loading: state.Dashboard?.loading || false,\n  centers:\n    state.Center?.data?.map((center) => ({\n      title: center.title,\n      _id: center._id,\n    })) || [],\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Input,\n  Spinner,\n  UncontrolledDropdown,\n} from \"reactstrap\";\nimport RenderWhen from \"../../../../Components/Common/RenderWhen\";\n\nimport { connect, useDispatch } from \"react-redux\";\nimport { searchPatient } from \"../../../../store/actions\";\n\nconst SearchPatient = ({\n  patients,\n  searchLoading,\n  centerAccess,\n  patient,\n  setPatient,\n}) => {\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    const val = e.target.value;\n    setValue(val);\n  };\n\n  useEffect(() => {\n    dispatch(searchPatient({ name: value, centerAccess }));\n  }, [dispatch, centerAccess, value]);\n\n  return (\n    <React.Fragment>\n      <div className=\"h-100\">\n        {\" \"}\n        <UncontrolledDropdown direction=\"down\" className=\"\">\n          <DropdownToggle\n            className=\"p-0 w-100 h-100 position-relative\"\n            color=\"light\"\n          >\n            <Input\n              value={value}\n              onChange={handleChange}\n              size={\"sm\"}\n              className=\"w-100 h-100\"\n            />\n            {/* add custom medicine */}\n            <RenderWhen isTrue={searchLoading}>\n              <span\n                className=\"link-success dropdown-input-icon\"\n                style={{ right: \"10px\" }}\n              >\n                <Spinner size={\"sm\"} color=\"success\" />\n              </span>\n            </RenderWhen>\n          </DropdownToggle>\n          <DropdownMenu className=\"dropdown-menu-md overflow-auto dropdown-height-md\">\n            {(patients || []).map((item) => (\n              <DropdownItem\n                className=\"d-flex align-items-center link-primary text-primary fs-6\"\n                key={item[\"_id\"]}\n                onClick={() => {\n                  setValue(item.name);\n                  setPatient(item);\n                }}\n              >\n                <span>{item.name}</span>\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    </React.Fragment>\n  );\n};\n\nSearchPatient.propTypes = {\n  patients: PropTypes.array,\n  centerAccess: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  patients: state.Patient.searchedPatients,\n  searchLoading: state.Patient.searchLoading,\n  centerAccess: state.User.centerAccess,\n});\n\nexport default connect(mapStateToProps)(SearchPatient);\n","export const ALL_TRANSACTIONS = \"ALL_TRANSACTIONS\";\nexport const ADVANCE_PAYMENT = \"ADVANCE_PAYMENT\";\nexport const INVOICE = \"INVOICE\";\nexport const DUE_AMOUNT = \"DUE_AMOUNT\";\nexport const OPD_BILL = \"OPD_BILL\";\nexport const ALL_REFERRELS = \"ALL_REFERRELS\";\nexport const ADDMISSION_DATE = \"ADDMISSION_DATE\";\nexport const DISCHARGE_DATE = \"DISCAHRGE_DATE\";\nexport const ADMIT_PATIENT = \"ADMIT_PATIENT\";\nexport const DISCHARGE_PATIENT = \"DISCHARGE_PATIENT\";\nexport const INTERN = \"INTERN\";\n\nexport const payments = [\n  { label: \"All Transactions\", value: ALL_TRANSACTIONS },\n  { label: \"IPD Payment\", value: ADVANCE_PAYMENT },\n  { label: \"IPD Invoice\", value: INVOICE },\n  { label: \"IPD Due Amount\", value: DUE_AMOUNT },\n  { label: \"OPD Bills\", value: OPD_BILL },\n  { label: \"Interns\", value: INTERN },\n];\n\nexport const calendar = [\"Daily\", \"Monthly\", \"Pre Doctor\", \"Pre Procedure\"];\n\nexport const allTransactionHeaders = [\n  { label: \"Date\", key: \"date\" },\n  { label: \"Patient/Intern\", key: \"name\" },\n  { label: \"UID\", key: \"uid\" },\n  { label: \"Type\", key: \"type\" },\n  { label: \"Center\", key: \"center.title\" },\n  { label: \"Invoice Number\", key: \"invoiceNumber\" },\n  { label: \"Invoiced Amount (₹Dr)\", key: \"invoice.payable\" },\n  { label: \"Payment Modes\", key: \"paymentModes\" },\n  { label: \"Paid Amount (₹Cr)\", key: \"advancePayment.totalAmount\" },\n];\n\nexport const allTransactionHeadersAddmissionDischargeDate = [\n  { label: \"Date\", key: \"date\" },\n  { label: \"Patient/Intern\", key: \"name\" },\n  { label: \"UID\", key: \"uid\" },\n  { label: \"Type\", key: \"type\" },\n  { label: \"Center\", key: \"center.title\" },\n  { label: \"Date of Addmission\", key: \"dateOfAddmission\" },\n  { label: \"Invoice Number\", key: \"invoiceNumber\" },\n  { label: \"Invoiced Amount (₹Dr)\", key: \"invoice.payable\" },\n  { label: \"Payment Modes\", key: \"paymentModes\" },\n  { label: \"Paid Amount (₹Cr)\", key: \"advancePayment.totalAmount\" },\n];\n\nexport const dueAmountHeaders = [\n  { label: \"Patient/Intern\", key: \"name\" },\n  { label: \"Center\", key: \"patient.center.title\" },\n  { label: \"UID\", key: \"uid\" },\n  { label: \"Date of Addmission\", key: \"dateOfAddmission\" },\n  // { label: \"Date of Discharge\", key: \"dateOfDischarge\" },\n  { label: \"Total Invoiced Amount (₹Dr)\", key: \"totalPayable\" },\n  { label: \"Total Paid Amount (₹Cr)\", key: \"totalAdvancePayment\" },\n  { label: \"Total Due Amount\", key: \"dueAmount\" },\n];\n\n// const dueAmountHeadersDiagnosis = [\n//   { label: \"Patient Name\", key: \"patient.name\"\n// { label: \"Type\", key: \"type\" }, },\n// { label: \"Center\", key: \"center.title\" }\n//   { label: \"Date of Addmission\", key: \"dateOfAddmission\" },\n//   { label: \"Date of Discharge\", key: \"dateOfDischarge\" },\n//   { label: \"Diagnosis\", key: \"dischargeSummary.diagnosis\" },\n//   { label: \"Total Invoiced Amount (₹Dr)\", key: \"invoice.payable\" },\n//   { label: \"Total Paid Amount (₹Cr)\", key: \"advancePayment.totalAmount\" },\n//   { label: \"Total Due Amount\", key: \"dueAmount\" },\n// ];\n\nexport const advancePaymentHeaders = [\n  { label: \"Date\", key: \"date\" },\n  { label: \"Patient/Intern\", key: \"name\" },\n  { label: \"UID\", key: \"uid\" },\n  { label: \"Type\", key: \"type\" },\n  { label: \"Center\", key: \"center.title\" },\n  { label: \"Invoice Number\", key: \"invoiceNumber\" },\n  { label: \"Payment Modes\", key: \"paymentModes\" },\n  { label: \"Paid Amount (₹Cr)\", key: \"advancePayment.totalAmount\" },\n];\n\nexport const advancePaymentHeadersAddmissionDischargeDate = [\n  { label: \"Date\", key: \"date\" },\n  { label: \"Patient/Intern\", key: \"name\" },\n  { label: \"UID\", key: \"uid\" },\n  { label: \"Type\", key: \"type\" },\n  { label: \"Center\", key: \"center.title\" },\n  { label: \"Date of Addmission\", key: \"dateOfAddmission\" },\n  // { label: \"Date of Discharge\", key: \"dateOfDischarge\" },\n  { label: \"Invoice Number\", key: \"invoiceNumber\" },\n  { label: \"Payment Modes\", key: \"paymentModes\" },\n  { label: \"Paid Amount (₹Cr)\", key: \"advancePayment.totalAmount\" },\n];\n\nexport const payableAmountHeaders = [\n  { label: \"Date\", key: \"date\" },\n  { label: \"Patient/Intern\", key: \"name\" },\n  { label: \"UID\", key: \"uid\" },\n  { label: \"Type\", key: \"type\" },\n  { label: \"Center\", key: \"center.title\" },\n  { label: \"Invoice Number\", key: \"invoiceNumber\" },\n  { label: \"Invoiced Amount (₹Dr)\", key: \"invoice.payable\" },\n];\n\nexport const payableAmountHeadersAddmissionDischargeDate = [\n  { label: \"Date\", key: \"date\" },\n  { label: \"Patient/Intern\", key: \"name\" },\n  { label: \"UID\", key: \"uid\" },\n  { label: \"Type\", key: \"type\" },\n  { label: \"Center\", key: \"center.title\" },\n  { label: \"Date of Addmission\", key: \"dateOfAddmission\" },\n  // { label: \"Date of Discharge\", key: \"dateOfDischarge\" },\n  { label: \"Invoice Number\", key: \"invoiceNumber\" },\n  { label: \"Invoiced Amount (₹Dr)\", key: \"invoice.payable\" },\n];\n\nexport const opdBillHeaders = [\n  { label: \"Date\", key: \"date\" },\n  { label: \"Patient/Intern\", key: \"name\" },\n  { label: \"UID\", key: \"uid\" },\n  { label: \"Type\", key: \"type\" },\n  { label: \"Center\", key: \"center.title\" },\n  { label: \"Invoice Number\", key: \"invoiceNumber\" },\n  { label: \"Invoiced Amount (₹Dr)\", key: \"invoice.payable\" },\n];\n","import React from \"react\";\nimport { Button, Col, Input, Row } from \"reactstrap\";\nimport { format } from \"date-fns\";\nimport { CSVLink } from \"react-csv\";\nimport SearchPatient from \"./SeachPatient\";\nimport {\n  BANK,\n  CARD,\n  CASH,\n  CHEQUE,\n  UPI,\n} from \"../../../../Components/constants/patient\";\nimport {\n  ADDMISSION_DATE,\n  ADVANCE_PAYMENT,\n  ALL_TRANSACTIONS,\n  DISCHARGE_DATE,\n  DISCHARGE_PATIENT,\n  DUE_AMOUNT,\n  INVOICE,\n  OPD_BILL,\n  INTERN,\n  advancePaymentHeaders,\n  advancePaymentHeadersAddmissionDischargeDate,\n  allTransactionHeaders,\n  allTransactionHeadersAddmissionDischargeDate,\n  dueAmountHeaders,\n  opdBillHeaders,\n  payableAmountHeaders,\n  payableAmountHeadersAddmissionDischargeDate,\n  payments,\n} from \"./data\";\n\nconst Menu = ({\n  data,\n  billType,\n  setBillType,\n  patient,\n  setPatient,\n  sortByDate,\n  setSortByDate,\n  setSortPatientStatus,\n  sortPatientStatus,\n  patientsReferrel,\n  setPatientsReferrel,\n  diagnosisCol,\n  toggle,\n  ...rest\n}) => {\n  const documents = () => {\n    const filteredData =\n      billType === INTERN ? data?.filter((row) => row.intern) : data;\n    return filteredData?.map((row) => ({\n      ...row,\n      name: row.intern ? row.intern.name : row.patient?.name || \"\",\n      date: row.date ? format(new Date(row.date), \"dd MMM yyyy\") : \"\",\n      uid:\n        row.patient?.id\n          ? `${row.patient.id.prefix}${row.patient.id.value}`\n          : \"\",\n      invoiceNumber:\n        row.key\n          ? `${row.key.prefix}${row.key.patientId}-${row.key.value}`\n          : \"\",\n      dateOfAddmission: row.patient?.addmission?.addmissionDate\n        ? format(new Date(row.patient.addmission.addmissionDate), \"dd MMM yyyy\")\n        : \"\",\n      dateOfDischarge: row.patient?.addmission?.dischargeDate\n        ? format(new Date(row.patient.addmission.dischargeDate), \"dd MMM yyyy\")\n        : \"\",\n        type:\n   billType === ALL_TRANSACTIONS\n     ? row.type && row.type.trim() !== \"\" \n       ? row.type \n       : \"INTERN\"\n     : row.type || \"\",\n      invoice: {\n        payable:\n          row.intern && row.receipt\n            ? row.receipt.totalAmount || 0\n            : row.invoice?.payable || row.receiptInvoice?.payable || 0,\n      },\n      advancePayment: {\n        totalAmount:\n          row.intern && row.receipt\n            ? row.receipt.totalAmount || 0\n            : row.advancePayment?.totalAmount ||\n              row.receiptInvoice?.payable ||\n              0,\n      },\n      paymentModes: (row.intern\n        ? row.receipt?.paymentModes\n        : row.advancePayment?.paymentModes || row.receiptInvoice?.paymentModes\n      )\n        ?.map((item, idx, arr) => {\n          const prevItem = arr[idx - 1];\n          const prefix = prevItem ? \"\\n\" : \"\";\n          if (item.paymentMode === CASH || item.type === CASH) {\n            return `${prefix}${item.paymentMode || item.type} ₹${item.amount}`;\n          }\n          if (item.paymentMode === CARD || item.type === CARD) {\n            return `${prefix}${item.paymentMode || item.type} ${\n              item.cardNumber || \"\"\n            } ₹${item.amount}`;\n          }\n          if (item.paymentMode === UPI || item.type === UPI) {\n            return `${prefix}${item.paymentMode || item.type} ${\n              item.transactionId || \"\"\n            }`;\n          }\n          if (item.paymentMode === CHEQUE || item.type === CHEQUE) {\n            return `${prefix}${item.paymentMode || item.type} ${\n              item.bankName || \"\"\n            } ${item.chequeNo || item.chequeNumber || \"\"} ₹${item.amount}`;\n          }\n          if (item.paymentMode === BANK || item.type === BANK) {\n            return `${prefix}${item.paymentMode || item.type} ${\n              item.bankName || \"\"\n            } ₹${item.amount}`;\n          }\n          return \"\";\n        })\n        .filter(Boolean)\n        .join(\"\"),\n    }));\n  };\n\n  const headers = () => {\n    let resultantHeaders = [];\n    if (\n      (sortByDate === ADDMISSION_DATE || sortByDate === DISCHARGE_DATE) &&\n      diagnosisCol\n    ) {\n      if (billType === ADVANCE_PAYMENT)\n        resultantHeaders = [\n          ...advancePaymentHeadersAddmissionDischargeDate,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n          {\n            label: \"Diagnosis\",\n            key: \"dischargeSummary.diagnosis\",\n          },\n        ];\n      else if (billType === INVOICE)\n        resultantHeaders = [\n          ...payableAmountHeadersAddmissionDischargeDate,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n          {\n            label: \"Diagnosis\",\n            key: \"dischargeSummary.diagnosis\",\n          },\n        ];\n      else if (billType === DUE_AMOUNT)\n        resultantHeaders = [\n          ...dueAmountHeaders,\n          sortPatientStatus === DISCHARGE_PATIENT\n            ? {\n                label: \"Date of Discharge\",\n                key: \"dateOfDischarge\",\n              }\n            : null,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n          {\n            label: \"Diagnosis\",\n            key: \"dischargeSummary.diagnosis\",\n          },\n        ];\n      else if (billType === ALL_TRANSACTIONS)\n        resultantHeaders = [\n          ...allTransactionHeadersAddmissionDischargeDate,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n        ];\n      else if (billType === INTERN)\n        resultantHeaders = [\n          { label: \"Patient/Intern\", key: \"name\" },\n          { label: \"Center\", key: \"center.title\" },\n          { label: \"Date\", key: \"date\" },\n          { label: \"UID\", key: \"uid\" },\n          { label: \"Invoice No\", key: \"invoiceNumber\" },\n          { label: \"Invoiced Amount\", key: \"invoice.payable\" },\n          { label: \"Payment Modes\", key: \"paymentModes\" },\n          { label: \"Paid Amount\", key: \"advancePayment.totalAmount\" },\n        ];\n    } else if (\n      sortByDate === ADDMISSION_DATE ||\n      sortByDate === DISCHARGE_DATE\n    ) {\n      if (billType === ADVANCE_PAYMENT)\n        resultantHeaders = [\n          ...advancePaymentHeadersAddmissionDischargeDate,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n        ];\n      else if (billType === INVOICE)\n        resultantHeaders = [\n          ...payableAmountHeadersAddmissionDischargeDate,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n        ];\n      else if (billType === DUE_AMOUNT)\n        resultantHeaders = [\n          ...dueAmountHeaders,\n          sortPatientStatus === DISCHARGE_PATIENT\n            ? {\n                label: \"Date of Discharge\",\n                key: \"dateOfDischarge\",\n              }\n            : null,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n        ];\n      else if (billType === ALL_TRANSACTIONS)\n        resultantHeaders = [\n          ...allTransactionHeadersAddmissionDischargeDate,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n        ];\n      else if (billType === INTERN)\n        resultantHeaders = [\n          { label: \"Patient/Intern\", key: \"name\" },\n          { label: \"Center\", key: \"center.title\" },\n          { label: \"Date\", key: \"date\" },\n          { label: \"UID\", key: \"uid\" },\n          { label: \"Invoice No\", key: \"invoiceNumber\" },\n          { label: \"Invoiced Amount\", key: \"invoice.payable\" },\n          { label: \"Payment Modes\", key: \"paymentModes\" },\n          { label: \"Paid Amount\", key: \"advancePayment.totalAmount\" },\n        ];\n    } else if (diagnosisCol) {\n      if (billType === DUE_AMOUNT) {\n        resultantHeaders = [\n          ...dueAmountHeaders,\n          sortPatientStatus === DISCHARGE_PATIENT\n            ? {\n                label: \"Date of Discharge\",\n                key: \"dateOfDischarge\",\n              }\n            : null,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n          {\n            label: \"Diagnosis\",\n            key: \"dischargeSummary.diagnosis\",\n          },\n        ];\n      } else if (billType === ADVANCE_PAYMENT)\n        resultantHeaders = [\n          ...advancePaymentHeaders,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n          {\n            label: \"Diagnosis\",\n            key: \"dischargeSummary.diagnosis\",\n          },\n        ];\n      else if (billType === INVOICE)\n        resultantHeaders = [\n          ...payableAmountHeaders,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n          {\n            label: \"Diagnosis\",\n            key: \"dischargeSummary.diagnosis\",\n          },\n        ];\n      else if (billType === ALL_TRANSACTIONS)\n        resultantHeaders = [\n          ...allTransactionHeaders,\n          patientsReferrel\n            ? { label: \"Referred By\", key: \"patient.referredBy\" }\n            : null,\n          {\n            label: \"Diagnosis\",\n            key: \"dischargeSummary.diagnosis\",\n          },\n        ];\n      else if (billType === INTERN)\n        resultantHeaders = [\n          { label: \"Patient/Intern\", key: \"name\" },\n          { label: \"Center\", key: \"center.title\" },\n          { label: \"Date\", key: \"date\" },\n          { label: \"UID\", key: \"uid\" },\n          { label: \"Invoice No\", key: \"invoiceNumber\" },\n          { label: \"Invoiced Amount\", key: \"invoice.payable\" },\n          { label: \"Payment Modes\", key: \"paymentModes\" },\n          { label: \"Paid Amount\", key: \"advancePayment.totalAmount\" },\n        ];\n    } else if (billType === DUE_AMOUNT)\n      resultantHeaders = [\n        ...dueAmountHeaders,\n        sortPatientStatus === DISCHARGE_PATIENT\n          ? {\n              label: \"Date of Discharge\",\n              key: \"dateOfDischarge\",\n            }\n          : null,\n        patientsReferrel\n          ? { label: \"Referred By\", key: \"patient.referredBy\" }\n          : null,\n      ];\n    else if (billType === ADVANCE_PAYMENT)\n      resultantHeaders = [\n        ...advancePaymentHeaders,\n        patientsReferrel\n          ? { label: \"Referred By\", key: \"patient.referredBy\" }\n          : null,\n      ];\n    else if (billType === INVOICE)\n      resultantHeaders = [\n        ...payableAmountHeaders,\n        patientsReferrel\n          ? { label: \"Referred By\", key: \"patient.referredBy\" }\n          : null,\n      ];\n    else if (billType === ALL_TRANSACTIONS)\n      resultantHeaders = [\n        ...allTransactionHeaders,\n        patientsReferrel\n          ? { label: \"Referred By\", key: \"patient.referredBy\" }\n          : null,\n      ];\n    else if (billType === OPD_BILL)\n      resultantHeaders = [\n        ...opdBillHeaders,\n        patientsReferrel\n          ? { label: \"Referred By\", key: \"patient.referredBy\" }\n          : null,\n      ];\n    else if (billType === INTERN)\n      resultantHeaders = [\n        { label: \"Patient/Intern\", key: \"name\" },\n        { label: \"Center\", key: \"center.title\" },\n        { label: \"Date\", key: \"date\" },\n        // { label: \"UID\", key: \"uid\" },\n        // { label: \"Invoice No\", key: \"invoiceNumber\" },\n        // { label: \"Invoiced Amount\", key: \"invoice.payable\" },\n        { label: \"Payment Modes\", key: \"paymentModes\" },\n        { label: \"Paid Amount\", key: \"advancePayment.totalAmount\" },\n      ];\n\n    return resultantHeaders.filter((header) => header !== null);\n  };\n\n  const handleChange = (e) => {\n    if (e) setBillType(e.target.value);\n  };\n\n  const reset = () => {\n    setPatient(\"\");\n    setBillType(ALL_TRANSACTIONS);\n    setSortPatientStatus(\"\");\n    setSortByDate(\"\");\n    setPatientsReferrel(\"\");\n  };\n\n  return (\n    <React.Fragment>\n      <div>\n        <div>\n          <form>\n            <Row>\n              <Col xs={12} md={3} className=\"mb-3 mb-md-0\">\n                <div className=\"d-flex\">\n                  <Input\n                    id=\"selectfilter\"\n                    name=\"address\"\n                    type=\"select\"\n                    onChange={handleChange}\n                    value={billType || \"\"}\n                    className=\"form-control form-control-sm\"\n                  >\n                    {(payments || []).map((item, idx) => (\n                      <option\n                        value={item.value}\n                        className=\"text-muted\"\n                        key={item + idx}\n                      >\n                        {item.label}\n                      </option>\n                    ))}\n                  </Input>\n                </div>\n              </Col>\n              <Col xs={12} md={3}>\n                <SearchPatient setPatient={setPatient} patient={patient} />\n              </Col>\n              <Col xs={12} md={6}>\n                <div className=\"d-flex justify-content-start justify-content-md-end mt-3 mt-md-0\">\n                  <Button\n                    size=\"sm\"\n                    color=\"danger\"\n                    title=\"Reset\"\n                    onClick={reset}\n                  >\n                    <i className=\"ri-arrow-go-back-line text-white\"></i>\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    color=\"light\"\n                    className=\"ms-3\"\n                    title=\"Print\"\n                  >\n                    <i className=\"ri-printer-line\"></i>\n                  </Button>\n                  <CSVLink\n                    data={documents() || []}\n                    title=\"CSV Download\"\n                    filename={\"reports.csv\"}\n                    headers={headers()}\n                    className=\"btn btn-info px-2 ms-3\"\n                  >\n                    <i className=\"ri-file-paper-2-line text-light text-decoration-none\"></i>\n                  </CSVLink>\n                  <Button\n                    size=\"sm\"\n                    color=\"secondary\"\n                    className=\"ms-3\"\n                    title=\"Filters\"\n                    onClick={toggle}\n                  >\n                    <i className=\"ri-filter-2-line\"></i>\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nMenu.propTypes = {};\n\nexport default Menu;\n","import React from \"react\";\nimport RenderWhen from \"../../../../Components/Common/RenderWhen\";\nimport { ADVANCE_PAYMENT, DUE_AMOUNT, INTERN, INVOICE, OPD_BILL } from \"./data\";\n\nconst Banner = ({ data, billType }) => {\n  console.log(billType);\n  const totalAdvancePayment = (dt) => {\n    let amount = 0;\n    dt?.forEach((item) => {\n      if (item.intern && item.receipt?.totalAmount) {\n        amount += item.receipt.totalAmount;\n      } else if (billType === DUE_AMOUNT) {\n        amount += item?.totalAdvancePayment || 0;\n      } else if (billType === OPD_BILL) {\n        amount += item?.receiptInvoice?.payable || 0;\n      } else {\n        amount +=\n          item?.advancePayment?.totalAmount ||\n          item?.receiptInvoice?.payable ||\n          0;\n      }\n    });\n    return amount;\n  };\n\n  // const totalPayable = (dt) => {\n  //   let amount = 0;\n  //   dt?.forEach((item) => {\n  //     console.log(item);\n  //     if (billType === DUE_AMOUNT) {\n  //       amount += item?.totalPayable || 0;\n  //     } else {\n  //       amount += item?.invoice?.payable || 0;\n  //     }\n  //     if (billType === OPD_BILL && !item.intern) {\n  //       amount += item?.receiptInvoice?.payable || 0;\n  //     }\n  //   });\n  //   return amount;\n  // };\n\n  const totalPayable = (dt) => {\n    let amount = 0;\n\n    dt?.forEach((item) => {\n      if (billType === DUE_AMOUNT) {\n        amount += item?.totalPayable || 0;\n      } else if (billType === OPD_BILL) {\n        if (item.intern && item.receipt) {\n          amount += item?.receipt?.totalAmount || 0;\n        } else {\n          amount +=\n            item?.invoice?.payable || item?.receiptInvoice?.payable || 0;\n        }\n      } else {\n        amount += item?.invoice?.payable || item?.receiptInvoice?.payable || 0;\n      }\n    });\n\n    return amount;\n  };\n\n  const dueAmount = (dt) => {\n    const totalAdPayment = totalAdvancePayment(dt);\n    const totalPay = totalPayable(dt);\n    return totalPay > totalAdPayment ? totalPay - totalAdPayment : 0.0;\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"p-4 mt-3 shadow bg-body rounded\">\n        <div className=\"d-flex flex-wrap justify-content-between justify-content-md-around\">\n          <RenderWhen isTrue={billType !== ADVANCE_PAYMENT}>\n            <div className=\"d-flex align-items-center\">\n              <h6 className=\"display-6 fs-6\">TOTAL INVOICED AMOUNT (₹): </h6>\n              <h5 className=\"display-5 ms-2 fs-17 font-semi-bold\">\n                {totalPayable(data) || totalAdvancePayment(data) || 0.0}\n              </h5>\n            </div>\n          </RenderWhen>\n          <RenderWhen isTrue={billType !== INVOICE}>\n            <div className=\"d-flex align-items-center\">\n              <h6 className=\"display-6 fs-6\">TOTAL PAID AMOUNT (₹): </h6>\n              <h5 className=\"display-5 ms-2 fs-17 font-semi-bold\">\n                {totalAdvancePayment(data) || 0.0}\n              </h5>\n            </div>\n          </RenderWhen>\n          <RenderWhen isTrue={billType === DUE_AMOUNT}>\n            <div className=\"d-flex align-items-center\">\n              <h6 className=\"display-6 fs-6\">TOTAL DUE AMOUNT (₹): </h6>\n              <h5 className=\"display-5 ms-2 fs-17 font-semi-bold\">\n                {dueAmount(data) || 0.0}\n              </h5>\n            </div>\n          </RenderWhen>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Input,\n  Spinner,\n  UncontrolledDropdown,\n} from \"reactstrap\";\nimport RenderWhen from \"../../../../../Components/Common/RenderWhen\";\n\nimport { connect, useDispatch } from \"react-redux\";\nimport { searchPatientReferral } from \"../../../../../store/actions\";\n\nconst ReferrelPatient = ({\n  referrels,\n  searchLoading,\n  centerAccess,\n  patientReferrel,\n  setPatientsReferrel,\n}) => {\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    const val = e.target.value;\n    setValue(val);\n  };\n\n  useEffect(() => {\n    if (value) dispatch(searchPatientReferral({ value, centerAccess }));\n  }, [dispatch, centerAccess, value]);\n\n  return (\n    <React.Fragment>\n      <div className=\"h-100\">\n        {\" \"}\n        <UncontrolledDropdown direction=\"down\" className=\"h-100\">\n          <DropdownToggle\n            className=\"p-0 w-100 h-100 position-relative\"\n            color=\"light\"\n          >\n            <Input\n              value={value}\n              onChange={handleChange}\n              placeholder=\"Search by referral...\"\n              size={\"sm\"}\n              className=\"w-100 h-100\"\n            />\n            {/* add custom medicine */}\n            <RenderWhen isTrue={searchLoading}>\n              <span\n                className=\"link-success dropdown-input-icon\"\n                style={{ right: \"10px\" }}\n              >\n                <Spinner size={\"sm\"} color=\"success\" />\n              </span>\n            </RenderWhen>\n          </DropdownToggle>\n          <DropdownMenu className=\"dropdown-menu-md overflow-auto dropdown-height-md\">\n            {(referrels || []).map((item) => (\n              <DropdownItem\n                className=\"d-flex align-items-center link-primary text-primary fs-6\"\n                key={item[\"_id\"]}\n                onClick={() => {\n                  setValue(item.referredBy);\n                  setPatientsReferrel(item.referredBy);\n                }}\n              >\n                <span className=\"\">{item.referredBy}</span>\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    </React.Fragment>\n  );\n};\n\nReferrelPatient.propTypes = {\n  referrels: PropTypes.array,\n  centerAccess: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  referrels: state.Patient.patientReferrel,\n  searchLoading: state.Patient.patientRefLoading,\n  centerAccess: state.User.centerAccess,\n});\n\nexport default connect(mapStateToProps)(ReferrelPatient);\n","import React from \"react\";\nimport { Collapse, Card, CardBody, Row, Col, Input, Label } from \"reactstrap\";\nimport ReferralPatient from \"./ReferrelPatient\";\nimport { ADDMISSION_DATE, ALL_REFERRELS, DISCHARGE_DATE } from \"../data\";\n\nconst AdvanceFilter = ({\n  isOpen,\n  sortByDate,\n  setSortByDate,\n  sortPatientStatus,\n  setSortPatientStatus,\n  patientsReferrel,\n  setPatientsReferrel,\n  diagnosisCol,\n  setDiagnosisCol,\n}) => {\n  return (\n    <React.Fragment>\n      <div className=\"mt-3\">\n        <div>\n          <Collapse isOpen={isOpen}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col s={12} md={4} lg={3} className=\"mb-3 mb-md-0\">\n                    <div className=\"d-flex h-100\">\n                      <Input\n                        id=\"\"\n                        name=\"dates\"\n                        type=\"select\"\n                        onChange={(e) => setSortByDate(e.target.value)}\n                        value={sortByDate || \"\"}\n                        className=\"form-control form-control-sm h-100\"\n                      >\n                        <option disabled selected value=\"\">\n                          Choose Date Filter\n                        </option>\n                        <option value={ADDMISSION_DATE} className=\"text-muted\">\n                          Date Of Addmission\n                        </option>\n                        <option value={DISCHARGE_DATE} className=\"text-muted\">\n                          Date Of Discharge\n                        </option>\n                      </Input>\n                    </div>\n                  </Col>\n                  <Col xs={12} md={3} className=\"mb-3 mb-md-0\">\n                    <div className=\"d-flex h-100\">\n                      <Input\n                        id=\"\"\n                        name=\"patientStatus\"\n                        type=\"select\"\n                        onChange={(e) => {\n                          setSortPatientStatus(e.target.value);\n                        }}\n                        value={sortPatientStatus || \"\"}\n                        className=\"form-control form-control-sm h-100\"\n                      >\n                        <option value=\"\" selected disabled>\n                          Choose here\n                        </option>\n                        <option value={\"ADMIT_PATIENT\"} className=\"text-muted\">\n                          Admit Patients\n                        </option>\n                        <option\n                          value={\"DISCHARGE_PATIENT\"}\n                          className=\"text-muted\"\n                        >\n                          Discharge Patients\n                        </option>\n                      </Input>\n                    </div>\n                  </Col>\n                  <Col xs={12} md={3} className=\"mb-3 mb-md-0\">\n                    <ReferralPatient\n                      patientsReferrel={patientsReferrel}\n                      setPatientsReferrel={setPatientsReferrel}\n                    />\n                  </Col>\n                  <Col xs={12} md={4} className=\"mb-3 mb-md-0\">\n                    <div className=\"d-flex align-items-center h-100\">\n                      <Input\n                        id=\"\"\n                        name=\"diagnosis\"\n                        type=\"checkbox\"\n                        onChange={(e) => setDiagnosisCol(!diagnosisCol)}\n                        checked={diagnosisCol}\n                        className=\"mt-0\"\n                      />\n                      <Label className=\"mb-0 ms-3 fs-4\">Diagnosis</Label>\n                    </div>\n                  </Col>\n                  <Col xs={12} md={4} className=\"mb-3 mb-md-0\">\n                    <div className=\"d-flex align-items-center h-100\">\n                      <Input\n                        id=\"\"\n                        name=\"diagnosis\"\n                        type=\"checkbox\"\n                        onChange={(e) => {\n                          if (patientsReferrel === ALL_REFERRELS)\n                            setPatientsReferrel(\"\");\n                          else setPatientsReferrel(ALL_REFERRELS);\n                        }}\n                        checked={patientsReferrel === ALL_REFERRELS}\n                        className=\"mt-0\"\n                      />\n                      <Label className=\"mb-0 ms-3 fs-4\">Referral</Label>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Collapse>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AdvanceFilter;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport {\n  ADDMISSION_DATE,\n  ADVANCE_PAYMENT,\n  DISCHARGE_DATE,\n  DUE_AMOUNT,\n  INVOICE,\n  OPD_BILL,\n  INTERN,\n} from \"./data\";\nimport DataTable from \"react-data-table-component\";\nimport { OPD } from \"../../../../Components/constants/patient\";\n\nconst Table = ({ data, billType, sortByDate, patientsReferrel }) => {\n  const date = (row) => {\n    if (row.date) {\n      return format(new Date(row.date), \"dd MMM yyyy\");\n    }\n    if (\n      sortByDate === ADDMISSION_DATE &&\n      row.patient?.addmission?.addmissionDate\n    ) {\n      return format(\n        new Date(row.patient.addmission.addmissionDate),\n        \"dd MMM yyyy\"\n      );\n    }\n    if (\n      sortByDate === DISCHARGE_DATE &&\n      row.patient?.addmission?.dischargeDate\n    ) {\n      return format(\n        new Date(row.patient.addmission.dischargeDate),\n        \"dd MMM yyyy\"\n      );\n    }\n    return \"\";\n  };\n\n  const columns = [\n    {\n      name: \"#\",\n      selector: (row, idx) => idx + 1,\n      maxWidth: \"80px\",\n      minWidth: \"80px\",\n    },\n    billType !== DUE_AMOUNT\n      ? {\n          name: \"Type\",\n          selector: (row) => row.bill || row.type || \"\",\n          maxWidth: \"100px\",\n          minWidth: \"100px\",\n        }\n      : null,\n    {\n      name: \"Center\",\n      selector: (row) => row.center?.title || \"\",\n      maxWidth: \"130px\",\n      minWidth: \"130px\",\n    },\n    {\n      name:\n        billType === DUE_AMOUNT && sortByDate === ADDMISSION_DATE\n          ? \"Admission Date\"\n          : billType === DUE_AMOUNT && sortByDate === DISCHARGE_DATE\n          ? \"Discharge Date\"\n          : \"Date\",\n      selector: (row) => date(row),\n      maxWidth: \"130px\",\n      minWidth: \"130px\",\n    },\n    billType !== DUE_AMOUNT &&\n    billType !== OPD_BILL &&\n    billType !== INTERN &&\n    sortByDate === ADDMISSION_DATE\n      ? {\n          name: \"Admission Date\",\n          selector: (row) =>\n            row.patient?.addmission?.addmissionDate\n              ? format(\n                  new Date(row.patient.addmission.addmissionDate),\n                  \"dd MMM yyyy\"\n                )\n              : \"\",\n        }\n      : null,\n    billType !== DUE_AMOUNT &&\n    billType !== OPD_BILL &&\n    billType !== INTERN &&\n    sortByDate === DISCHARGE_DATE\n      ? {\n          name: \"Discharge Date\",\n          selector: (row) =>\n            row.patient?.addmission?.dischargeDate\n              ? format(\n                  new Date(row.patient.addmission.dischargeDate),\n                  \"dd MMM yyyy\"\n                )\n              : \"\",\n        }\n      : null,\n    {\n      name: \"Patient/Intern\",\n      selector: (row) =>\n        row.intern ? row.intern.name : row.patient?.name || \"\",\n      wrap: true,\n      maxWidth: \"150px\",\n      minWidth: \"150px\",\n    },\n    {\n      name: \"UID\",\n      selector: (row) =>\n        row.intern && row.id?.value\n          ? row.id.value\n          : row.patient?.id\n          ? `${row.patient.id.prefix}${row.patient.id.value}`\n          : \"\",\n      wrap: true,\n      maxWidth: \"100px\",\n      minWidth: \"100px\",\n    },\n    patientsReferrel\n      ? {\n          name: \"Referred By\",\n          selector: (row) => row.patient?.referredBy || \"\",\n        }\n      : null,\n    billType !== DUE_AMOUNT\n      ? {\n          name: \"Invoice No\",\n          selector: (row) =>\n            row.key\n              ? `${row.key.prefix}${row.key.patientId}-${row.key.value}`\n              : \"\",\n        }\n      : null,\n    billType !== DUE_AMOUNT && billType !== ADVANCE_PAYMENT\n      ? {\n          name: \"Invoiced Amount\",\n          selector: (row) => {\n            if (row.intern && row.receipt) {\n              return (\n                row.receipt.totalAmount ??\n                row.invoice?.payable ??\n                row.receiptInvoice?.payable ??\n                \"\"\n              );\n            }\n            return row.invoice?.payable ?? row.receiptInvoice?.payable ?? \"\";\n          },\n        }\n      : null,\n    billType !== DUE_AMOUNT && billType !== INVOICE\n      ? {\n          name: \"Payment Modes\",\n          selector: (row) => {\n            if (row.intern && row.receipt?.paymentModes) {\n              return row.receipt.paymentModes\n                .map((payment) =>\n                  `${payment?.paymentMode || \"\"} ${payment?.bankName || \"\"} ${\n                    payment?.transactionId || \"\"\n                  } ${payment?.chequeNumber || \"\"} ${\n                    payment?.cardNumber || \"\"\n                  }`.trim()\n                )\n                .filter(Boolean)\n                .join(\"\\n\");\n            }\n            if (row.type === OPD && row.receiptInvoice?.paymentModes) {\n              return row.receiptInvoice.paymentModes\n                .map((payment) =>\n                  `${payment?.type || \"\"} ${payment?.bankName || \"\"} ${\n                    payment?.transactionId || \"\"\n                  } ${payment?.chequeNumber || \"\"} ${\n                    payment?.cardNumber || \"\"\n                  }`.trim()\n                )\n                .filter(Boolean)\n                .join(\"\\n\");\n            }\n            if (row.deposit?.paymentModes) {\n              return row.deposit.paymentModes\n                .map((payment) =>\n                  `${payment.paymentMode || \"\"} ${payment.bankName || \"\"} ${\n                    payment.chequeNumber || \"\"\n                  } ${payment.cardNumber || \"\"}`.trim()\n                )\n                .filter(Boolean)\n                .join(\"\\n\");\n            }\n            if (row.advancePayment?.paymentModes) {\n              return row.advancePayment.paymentModes\n                .map((payment) =>\n                  `${payment.paymentMode || \"\"} ${payment.bankName || \"\"} ${\n                    payment.chequeNumber || \"\"\n                  } ${payment.cardNumber || \"\"}`.trim()\n                )\n                .filter(Boolean)\n                .join(\"\\n\");\n            }\n            return \"\";\n          },\n        }\n      : null,\n    billType !== DUE_AMOUNT && billType !== INVOICE\n      ? {\n          name: \"Paid Amount\",\n          selector: (row) =>\n            row.intern && row.receipt\n              ? row.receipt.totalAmount\n              : row.type === OPD\n              ? row.receiptInvoice?.payable || \"\"\n              : row.deposit\n              ? row.deposit.totalAmount || \"\"\n              : row.advancePayment\n              ? row.advancePayment.totalAmount || \"\"\n              : \"\",\n        }\n      : null,\n    billType === DUE_AMOUNT\n      ? {\n          name: \"Total Invoiced Amount\",\n          selector: (row) => row.totalPayable || \"\",\n        }\n      : null,\n    billType === DUE_AMOUNT\n      ? {\n          name: \"Total Paid Amount\",\n          selector: (row) => row.totalAdvancePayment || \"\",\n        }\n      : null,\n    billType === DUE_AMOUNT\n      ? {\n          name: \"Total Due Amount\",\n          selector: (row) => row.dueAmount || \"\",\n          style: {\n            color: \"red\",\n            fontWeight: \"bold\",\n          },\n        }\n      : null,\n  ];\n\n  return (\n    <React.Fragment>\n      <div>\n        <div className=\"table-auto mt-5\">\n          <div className=\"table-responsive-sm h-auto table-card mt- mb-1 px-3 overflow-auto\">\n            <DataTable\n              fixedHeader\n              columns={columns.filter((c) => c !== null)}\n              data={data?.map((d) => ({ ...d, id: d._id })) || []}\n              highlightOnHover\n            />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"reactstrap\";\nimport { endOfDay, startOfDay } from \"date-fns\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { fetchReport } from \"../../../../store/actions\";\n\n//components\nimport Header from \"../Header\";\nimport Divider from \"../../../../Components/Common/Divider\";\nimport Menu from \"./Menu\";\nimport Banner from \"./Banner\";\nimport AdvanceFilter from \"./AdvanceFilter\";\nimport Table from \"./Table\";\nimport { ADDMISSION_DATE, ALL_TRANSACTIONS, DUE_AMOUNT } from \"./data\";\n\nconst Report = ({ data, centerAccess }) => {\n  const dispatch = useDispatch();\n  const [reportDate, setReportDate] = useState({\n    start: startOfDay(new Date()),\n    end: endOfDay(new Date()),\n  });\n  //sort by date\n  const [sortByDate, setSortByDate] = useState(\"\");\n  const [patient, setPatient] = useState(\"\");\n  const [billType, setBillType] = useState(ALL_TRANSACTIONS);\n  const [sortPatientStatus, setSortPatientStatus] = useState(\"\");\n  //add diagnosis column\n  const [diagnosisCol, setDiagnosisCol] = useState(false);\n  //get patient by referral name\n  const [patientsReferrel, setPatientsReferrel] = useState(\"\");\n\n  // toggle advance filter\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    if (billType === DUE_AMOUNT) setSortByDate(ADDMISSION_DATE);\n\n    const startDate = startOfDay(reportDate.start);\n    const endDate = endOfDay(reportDate.end);\n    dispatch(\n      fetchReport({\n        startDate,\n        endDate,\n        patient: patient?._id || \"\",\n        billType,\n        patientsReferrel: patientsReferrel.trim(),\n        sortPatientStatus,\n        centerAccess,\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    reportDate,\n    billType,\n    patient,\n    centerAccess,\n    sortPatientStatus,\n    patientsReferrel,\n    dispatch,\n  ]);\n\n  return (\n    <React.Fragment>\n      <div className=\"pt-4\">\n        <div className=\"bg-white p-2 m-n3\">\n          <Header reportDate={reportDate} setReportDate={setReportDate} />\n          <Divider />\n          <Menu\n            data={data}\n            billType={billType}\n            setBillType={setBillType}\n            patient={patient}\n            setPatient={setPatient}\n            toggle={toggle}\n            sortByDate={sortByDate}\n            setSortByDate={setSortByDate}\n            sortPatientStatus={sortPatientStatus}\n            diagnosisCol={diagnosisCol}\n            setDiagnosisCol={setDiagnosisCol}\n            patientsReferrel={patientsReferrel}\n            setSortPatientStatus={setSortPatientStatus}\n            setPatientsReferrel={setPatientsReferrel}\n          />\n          <AdvanceFilter\n            sortPatientStatus={sortPatientStatus}\n            setSortPatientStatus={setSortPatientStatus}\n            sortByDate={sortByDate}\n            setSortByDate={setSortByDate}\n            diagnosisCol={diagnosisCol}\n            setDiagnosisCol={setDiagnosisCol}\n            isOpen={isOpen}\n            patientsReferrel={patientsReferrel}\n            setPatientsReferrel={setPatientsReferrel}\n            setPatient={setPatient}\n          />\n          <Banner billType={billType} data={data} />\n          <Table\n            data={data}\n            sortPatientStatus={sortPatientStatus}\n            sortByDate={sortByDate}\n            billType={billType}\n            diagnosisCol={diagnosisCol}\n            patientsReferrel={patientsReferrel}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nReport.propTypes = {\n  data: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.Report.data,\n  centerAccess: state.User.centerAccess,\n});\n\nexport default connect(mapStateToProps)(Report);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Finance = (props) => {\n  return <div></div>;\n};\n\nFinance.propTypes = {};\n\nexport default Finance;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { differenceInYears, endOfDay, format, startOfDay } from \"date-fns\";\nimport { connect } from \"react-redux\";\nimport Header from \"../Header\";\nimport Divider from \"../../../../Components/Common/Divider\";\nimport DataTable from \"react-data-table-component\";\nimport { CSVLink } from \"react-csv\";\nimport { Button, Input } from \"reactstrap\";\nimport {\n  GET_PATIENT_ANALYTICS,\n  GET_PATIENT_ANALYTICS_WP,\n} from \"../../../../helpers/url_helper\";\nimport axios from \"axios\";\n\nconst Patient = ({ centerAccess }) => {\n  const [reportDate, setReportDate] = useState({\n    start: startOfDay(new Date()),\n    end: endOfDay(new Date()),\n  });\n  const [filter, setFilter] = useState(\"\");\n  const [val, setVal] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totaldata, setTotaldata] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n  const [limit, setLimit] = useState(10);\n\n  const [csvData, setCsvData] = useState([]);\n  const [csvLoading, setCsvLoading] = useState(false);\n  const csvRef = useRef();\n\n  const fetchFullData = async () => {\n    try {\n      setCsvLoading(true);\n      const res = await axios.get(GET_PATIENT_ANALYTICS_WP, {\n        params: {\n          startDate: reportDate.start.toISOString(),\n          endDate: reportDate.end.toISOString(),\n          filter,\n          val,\n          centerAccess,\n        },\n      });\n\n      if (res.success) {\n        const fullData = res.payload || [];\n        const formatted = fullData.map((d, i) => ({\n          ...d,\n          id: i + 1,\n          uid: `${d?.id?.prefix || d?.patient?.id?.prefix || \"\"}${\n            d?.id?.value || d?.patient?.id?.value || \"\"\n          }`,\n          age: d?.dateOfBirth\n            ? differenceInYears(new Date(), new Date(d?.dateOfBirth))\n            : d?.patient?.dateOfBirth\n            ? differenceInYears(new Date(), new Date(d.patient?.dateOfBirth))\n            : \"\",\n          doctor: d?.addmission?.doctors?.length\n            ? d.addmission.doctors.map((doc) => doc?.name || \"\").pop() || \"\"\n            : d?.doctor?.name || d?.addmission?.doctor?.name || \"\",\n          psychologist: d?.addmission?.psychologists?.length\n            ? d.addmission.psychologists.map((psy) => psy?.name || \"\").pop() ||\n              \"\"\n            : d?.psychologist?.name || d?.addmission?.psychologist?.name || \"\",\n          addmissionDate: d?.addmission?.addmissionDate\n            ? format(\n                new Date(d.addmission.addmissionDate),\n                \"d MMM yyyy hh:mm a\"\n              )\n            : d?.addmissionDate\n            ? format(new Date(d.addmissionDate), \"d MMM yyyy hh:mm a\")\n            : \"\",\n          dischargeDate: d?.addmission?.dischargeDate\n            ? format(new Date(d.addmission.dischargeDate), \"d MMM yyyy hh:mm a\")\n            : d?.dischargeDate\n            ? format(new Date(d.dischargeDate), \"d MMM yyyy hh:mm a\")\n            : \"\",\n          billCycleDate: d?.addmission?.addmissionDate\n            ? format(new Date(d.addmission.addmissionDate), \"d\")\n            : \"\",\n        }));\n\n        setCsvData(formatted);\n\n        // trigger download\n        setTimeout(() => {\n          csvRef.current.link.click();\n        }, 100);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch full patient analytics\", err);\n    } finally {\n      setCsvLoading(false);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(GET_PATIENT_ANALYTICS, {\n        params: {\n          page,\n          limit,\n          startDate: reportDate.start.toISOString(),\n          endDate: reportDate.end.toISOString(),\n          filter,\n          val,\n          centerAccess,\n        },\n      });\n\n      if (res.success) {\n        setData(res.payload || []);\n        setTotalPages(res.pagination?.totalPages || 1);\n        setTotaldata(res?.pagination?.total);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch patient analytics\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [page, reportDate, filter, limit, centerAccess, val]);\n\n  const generalColumns = [\n    {\n      name: \"#\",\n      selector: (row, idx) => idx + 1,\n    },\n    {\n      name: \"Center\",\n      selector: (row) => row.center?.title,\n    },\n    {\n      name: \"Patient\",\n      selector: (row) => row.patient?.name,\n      wrap: true,\n    },\n    {\n      name: \"UID\",\n      selector: (row) => `${row.patient?.id?.prefix}${row.patient?.id?.value}`,\n    },\n    {\n      name: \"Doctor\",\n      selector: (row) => {\n        const doctorsFromArray =\n          row?.doctors?.length > 0\n            ? row.doctors\n                .map((d) =>\n                  d?.name ? d.name : d?.doctor?.name ? d.doctor.name : \"\"\n                )\n                .filter(Boolean)\n                .join(\", \")\n            : null;\n\n        const doctorsFromAdmission =\n          row?.addmission?.doctors?.length > 0\n            ? row.addmission.doctors\n                .map((d) => d?.name || \"\")\n                .filter(Boolean)\n                .join(\", \")\n            : null;\n\n        const fallbackDoctor =\n          row?.addmission?.doctor?.name ||\n          row?.doctor?.name ||\n          row?.patient?.doctor?.name ||\n          \"-\";\n\n        return doctorsFromArray || doctorsFromAdmission || fallbackDoctor;\n      },\n      wrap: true,\n    },\n    {\n      name: \"Psychologist\",\n      selector: (row) => {\n        const psychologistsFromArray =\n          row?.psychologists?.length > 0\n            ? row.psychologists\n                .map((p) =>\n                  p?.name\n                    ? p.name\n                    : p?.psychologist?.name\n                    ? p.psychologist.name\n                    : \"\"\n                )\n                .filter(Boolean)\n                .join(\", \")\n            : null;\n\n        const psychologistsFromAdmission =\n          row?.addmission?.psychologists?.length > 0\n            ? row.addmission.psychologists\n                .map((p) => p?.name || \"\")\n                .filter(Boolean)\n                .join(\", \")\n            : null;\n\n        const fallbackPsychologist =\n          row?.addmission?.psychologist?.name ||\n          row?.psychologist?.name ||\n          row?.patient?.psychologist?.name ||\n          \"-\";\n\n        return (\n          psychologistsFromArray ||\n          psychologistsFromAdmission ||\n          fallbackPsychologist\n        );\n      },\n      wrap: true,\n    },\n    {\n      name: \"Gender\",\n      selector: (row) => row.patient?.gender,\n    },\n    {\n      name: \"Referred By\",\n      selector: (row) => row.patient?.referredBy,\n      wrap: true,\n    },\n    {\n      name: \"Phone No\",\n      selector: (row) => row.patient?.phoneNumber,\n    },\n    {\n      name: \"Age\",\n      selector: (row) =>\n        differenceInYears(new Date(), new Date(row.patient?.dateOfBirth)) +\n        \" years\",\n    },\n    {\n      name: \"Guardian\",\n      selector: (row) => row.patient?.guardianName,\n      wrap: true,\n    },\n    {\n      name: \"Guardian Number\",\n      selector: (row) => row.patient?.guardianPhoneNumber,\n      wrap: true,\n    },\n    {\n      name: \"Admission Date\",\n      selector: (row) =>\n        row.addmissionDate\n          ? format(new Date(row.addmissionDate), \"d MMM yyyy hh:mm a\")\n          : \"\",\n      wrap: true,\n    },\n    {\n      name: \"Discharge Date\",\n      selector: (row) =>\n        row.dischargeDate\n          ? format(new Date(row.dischargeDate), \"d MMM yyyy hh:mm a\")\n          : \"\",\n      wrap: true,\n    },\n  ];\n\n  const billCycleDate = {\n    name: \"Bill Cycle Date\",\n    selector: (row) =>\n      row.addmission?.addmissionDate\n        ? format(new Date(row.addmission.addmissionDate), \"d\")\n        : \"\",\n    wrap: true,\n  };\n\n  const addmissionDate = {\n    name: \"Admission Date\",\n    selector: (row) =>\n      row.addmission?.addmissionDate\n        ? format(new Date(row.addmission.addmissionDate), \"d MMM yyyy hh:mm a\")\n        : \"\",\n    wrap: true,\n  };\n\n  const dischargeDate = {\n    name: \"Discharge Date\",\n    selector: (row) =>\n      row.addmission?.dischargeDate\n        ? format(new Date(row.addmission.dischargeDate), \"d MMM yyyy hh:mm a\")\n        : \"\",\n    wrap: true,\n  };\n\n  const patientRow = [\n    {\n      name: \"#\",\n      selector: (row, idx) => idx + 1,\n    },\n    {\n      name: \"Center\",\n      selector: (row) => row.center?.title,\n    },\n    {\n      name: \"Patient\",\n      selector: (row) => row?.name,\n      wrap: true,\n    },\n    {\n      name: \"UID\",\n      selector: (row) => `${row?.uid?.prefix}${row?.uid?.value}`,\n    },\n    {\n      name: \"Gender\",\n      selector: (row) => row?.gender,\n    },\n    {\n      name: \"Referred By\",\n      selector: (row) => row?.referredBy,\n      wrap: true,\n    },\n    {\n      name: \"Doctor\",\n      selector: (row) =>\n        row?.addmission?.doctors?.length > 0\n          ? row.addmission.doctors\n              .map((d) => d?.name || \"\")\n              .filter(Boolean)\n              .pop() || \"—\"\n          : row?.addmission?.doctor?.name || row?.doctor?.name || \"—\",\n      wrap: true,\n    },\n    {\n      name: \"Psychologist\",\n      selector: (row) =>\n        row?.addmission?.psychologists?.length > 0\n          ? row.addmission.psychologists\n              .map((p) => p?.name || \"\")\n              .filter(Boolean)\n              .pop() || \"—\"\n          : row?.addmission?.psychologist?.name ||\n            row?.psychologist?.name ||\n            \"—\",\n      wrap: true,\n    },\n\n    {\n      name: \"Phone No\",\n      selector: (row) => row?.phoneNumber,\n    },\n    //\n    {\n      name: \"Age\",\n      selector: (row) =>\n        row?.dateOfBirth\n          ? differenceInYears(new Date(), new Date(row?.dateOfBirth)) + \" years\"\n          : \"\",\n    },\n    {\n      name: \"Guardian\",\n      selector: (row) => row?.guardianName,\n      wrap: true,\n    },\n    {\n      name: \"Guardian Number\",\n      selector: (row) => row?.guardianPhoneNumber,\n      wrap: true,\n    },\n    {\n      name: \"IPD File NUmber\",\n      selector: (row) => row.ipdFileNumber,\n    },\n  ];\n\n  const admittedColumns = [...patientRow, addmissionDate, billCycleDate];\n  const dischargeColumns = [...patientRow, addmissionDate, dischargeDate];\n\n  const patientColumns = patientRow;\n\n  const generalHeaders = [\n    { label: \"#\", key: \"id\" },\n    { label: \"Center\", key: \"center.title\" },\n    { label: \"Patient\", key: \"patient.name\" },\n    { label: \"UID\", key: \"uid\" },\n    { label: \"Gender\", key: \"patient.gender\" },\n    { label: \"Referred By\", key: \"patient.referredBy\" },\n    { label: \"Phone No\", key: \"patient.phoneNumber\" },\n    { label: \"Doctor\", key: \"doctor\" },\n    { label: \"Psychologist\", key: \"psychologist\" },\n    { label: \"Age\", key: \"age\" },\n    { label: \"Guardian\", key: \"guardianName\" },\n    { label: \"Guardian Number\", key: \"guardianPhoneNumber\" },\n    { label: \"Addmission Date\", key: \"addmissionDate\" },\n    { label: \"Discharge Date\", key: \"dischargeDate\" },\n  ];\n\n  const admittedHeaders = [\n    { label: \"#\", key: \"id\" },\n    { label: \"Center\", key: \"center.title\" },\n    { label: \"Patient\", key: \"name\" },\n    { label: \"UID\", key: \"uid\" },\n    { label: \"Gender\", key: \"gender\" },\n    { label: \"Referred By\", key: \"referredBy\" },\n    { label: \"Phone No\", key: \"phoneNumber\" },\n    { label: \"Doctor\", key: \"doctor\" },\n    { label: \"Psychologist\", key: \"psychologist\" },\n    { label: \"Age\", key: \"age\" },\n    { label: \"Guardian\", key: \"guardianName\" },\n    { label: \"Guardian Number\", key: \"guardianPhoneNumber\" },\n    { label: \"IPD File No\", key: \"ipdFileNumber\" },\n    { label: \"Addmission Date\", key: \"addmissionDate\" },\n    { label: \"Bill Cycle Date\", key: \"billCycleDate\" },\n  ];\n\n  const discahrgeHeaders = [\n    { label: \"#\", key: \"id\" },\n    { label: \"Center\", key: \"center.title\" },\n    { label: \"Patient\", key: \"name\" },\n    { label: \"UID\", key: \"uid\" },\n    { label: \"Gender\", key: \"gender\" },\n    { label: \"Referred By\", key: \"referredBy\" },\n    { label: \"Phone No\", key: \"phoneNumber\" },\n    { label: \"Doctor\", key: \"doctor\" },\n    { label: \"Psychologist\", key: \"psychologist\" },\n    { label: \"Age\", key: \"age\" },\n    { label: \"Guardian\", key: \"guardianName\" },\n    { label: \"Guardian Number\", key: \"guardianPhoneNumber\" },\n    { label: \"IPD File No\", key: \"ipdFileNumber\" },\n    { label: \"Addmission Date\", key: \"addmissionDate\" },\n    { label: \"Discharge Date\", key: \"dischargeDate\" },\n  ];\n\n  const patientHeaders = [\n    { label: \"#\", key: \"id\" },\n    { label: \"Center\", key: \"center.title\" },\n    { label: \"Patient\", key: \"name\" },\n    { label: \"UID\", key: \"uid\" },\n    { label: \"Gender\", key: \"gender\" },\n    { label: \"Phone No\", key: \"phoneNumber\" },\n    { label: \"Doctor\", key: \"doctor\" },\n    { label: \"Psychologist\", key: \"psychologist\" },\n    { label: \"Age\", key: \"age\" },\n    { label: \"Referred By\", key: \"referredBy\" },\n    { label: \"Guardian\", key: \"guardianName\" },\n    { label: \"Guardian Number\", key: \"guardianPhoneNumber\" },\n    { label: \"IPD File No\", key: \"ipdFileNumber\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className=\"pt-4\">\n        <div className=\"bg-white p-2 m-n3\">\n          <div className=\"\">\n            <h6 className=\"display-6 fs-6 my-3\">\n              Total Patients:- {totaldata}\n            </h6>\n          </div>\n          <Header reportDate={reportDate} setReportDate={setReportDate} />\n          <div className=\"d-flex justify-content-between mt-3\">\n            <div className=\"d-flex gap-2\">\n              <Input\n                type=\"select\"\n                value={filter}\n                onChange={(e) => {\n                  setFilter(e.target.value);\n                }}\n              >\n                <option value={\"\"}>General</option>\n                <option value={\"ADMITTED_PATIENTS\"}>Admitted Patients</option>\n                <option value={\"DISCHARGED_PATIENTS\"}>\n                  Discharged Patients\n                </option>\n                <option value={\"ALL_PATIENTS\"}>All Patients</option>\n              </Input>\n\n              <Input\n                type=\"select\"\n                value={limit}\n                onChange={(e) => {\n                  setLimit(Number(e.target.value));\n                  setPage(1);\n                }}\n                style={{ width: \"100px\" }}\n              >\n                {[10, 20, 30, 40, 50].map((l) => (\n                  <option key={l} value={l}>\n                    {l}\n                  </option>\n                ))}\n              </Input>\n            </div>\n            <div>\n              {filter === \"ADMITTED_PATIENTS\" &&\n                (val === \"ALL_ADMITTED\" ? (\n                  <Button\n                    color=\"info\"\n                    onClick={() => setVal(\"\")}\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Back to dates\n                  </Button>\n                ) : (\n                  <Button\n                    color=\"info\"\n                    onClick={() => setVal(\"ALL_ADMITTED\")}\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Show All Admitted Patients\n                  </Button>\n                ))}\n\n              <Button\n                color=\"info\"\n                onClick={fetchFullData}\n                disabled={csvLoading}\n              >\n                {csvLoading ? \"Preparing CSV...\" : \"Export CSV\"}\n              </Button>\n\n              <CSVLink\n                data={csvData || []}\n                filename=\"reports.csv\"\n                headers={\n                  filter === \"ADMITTED_PATIENTS\"\n                    ? admittedHeaders\n                    : filter === \"DISCHARGED_PATIENTS\"\n                    ? discahrgeHeaders\n                    : filter === \"ALL_PATIENTS\"\n                    ? patientHeaders\n                    : generalHeaders\n                }\n                className=\"d-none\"\n                ref={csvRef}\n              />\n            </div>\n          </div>\n          <Divider />\n          <DataTable\n            fixedHeader\n            columns={\n              filter === \"ADMITTED_PATIENTS\"\n                ? admittedColumns\n                : filter === \"ALL_PATIENTS\"\n                ? patientColumns\n                : filter === \"DISCHARGED_PATIENTS\"\n                ? dischargeColumns\n                : generalColumns\n            }\n            data={data?.map((d) => ({ ...d, uid: d.id, id: d._id })) || []}\n            highlightOnHover\n          />\n          <div className=\"d-flex justify-content-between align-items-center mt-3\">\n            <Button\n              disabled={page === 1}\n              onClick={() => setPage((p) => Math.max(p - 1, 1))}\n            >\n              Prev\n            </Button>\n            <span>\n              Page {page} of {totalPages}\n            </span>\n            <Button\n              disabled={page === totalPages}\n              onClick={() => setPage((p) => p + 1)}\n            >\n              Next\n            </Button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nPatient.propTypes = {\n  data: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.Report.patient,\n  centerAccess: state.User.centerAccess,\n});\n\nexport default connect(mapStateToProps)(Patient);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { endOfDay, format, startOfDay } from \"date-fns\";\nimport { connect, useDispatch } from \"react-redux\";\n\n//components\nimport Header from \"../Header\";\nimport Divider from \"../../../../Components/Common/Divider\";\nimport DataTable from \"react-data-table-component\";\nimport { fetchLeadAnalytics } from \"../../../../store/actions\";\nimport { CSVLink } from \"react-csv\";\n\nconst Lead = ({ data, centerAccess }) => {\n  const dispatch = useDispatch();\n  const [reportDate, setReportDate] = useState({\n    start: startOfDay(new Date()),\n    end: endOfDay(new Date()),\n  });\n  //sort by date\n\n  // toggle advance filter\n  //   const [isOpen, setIsOpen] = useState(false);\n  //   const toggle = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    const startDate = startOfDay(reportDate.start);\n    const endDate = endOfDay(reportDate.end);\n    dispatch(fetchLeadAnalytics({ startDate, endDate, centerAccess }));\n  }, [dispatch, reportDate, centerAccess]);\n\n  const columns = [\n    {\n      name: \"#\",\n      selector: (row, idx) => idx + 1,\n    },\n    {\n      name: \"Date\",\n      selector: (row) =>\n        row.date ? format(new Date(row.date), \"d MMM yyyy hh:mm a\") : \"\",\n    },\n    {\n      name: \"Center\",\n      selector: (row) => row.location?.map((l) => l.title).join(\", \"),\n    },\n    {\n      name: \"Patient Name\",\n      selector: (row) => row.patient?.name,\n    },\n    {\n      name: \"Attended By\",\n      selector: (row) => row.attendedBy,\n    },\n    // {\n    //   name: \"#\",\n    //   selector: (row) => row.,\n    // },\n    // {\n    //   name: \"#\",\n    //   selector: (row) => row.,\n    // },\n  ];\n\n  const headers = [\n    { label: \"#\", key: \"id\" },\n    { label: \"Date\", key: \"date\" },\n    { label: \"Center\", key: \"location\" },\n    { label: \"Patient Name\", key: \"patient.name\" },\n    { label: \"Attended By\", key: \"attendedBy\" },\n    // { label: \"\", key: \"\" },\n  ];\n\n  const csvLeads = () => {\n    return data?.map((d, i) => ({\n      ...d,\n      id: i + 1,\n      date: d.date ? format(new Date(d.date), \"d MMM yyyy hh:mm a\") : \"\",\n      location: d.location?.map((l) => l.title).join(\", \"),\n    }));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"pt-4\">\n        <div className=\"bg-white p-2 m-n3\">\n          <Header reportDate={reportDate} setReportDate={setReportDate} />\n          <Divider />\n          <div className=\"text-end mt-3\">\n            <CSVLink\n              data={csvLeads() || []}\n              title=\"CSV Download\"\n              filename={\"reports.csv\"}\n              headers={headers}\n              className=\"btn btn-info px-2 ms-3\"\n            >\n              <i className=\"ri-file-paper-2-line text-light text-decoration-none\"></i>\n            </CSVLink>\n          </div>\n          <DataTable\n            fixedHeader\n            columns={columns}\n            data={data?.map((d) => ({ ...d, id: d._id })) || []}\n            highlightOnHover\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nLead.propTypes = {\n  data: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.Report.lead,\n  centerAccess: state.User.centerAccess,\n});\n\nexport default connect(mapStateToProps)(Lead);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { differenceInMinutes, endOfDay, format, startOfDay } from \"date-fns\";\nimport { connect, useDispatch } from \"react-redux\";\n\n//components\nimport Header from \"../Header\";\nimport Divider from \"../../../../Components/Common/Divider\";\nimport DataTable from \"react-data-table-component\";\nimport { fetchOPDAnalytics } from \"../../../../store/actions\";\nimport { CSVLink } from \"react-csv\";\n\nconst OPDAnalytics = ({ data, centerAccess }) => {\n  const dispatch = useDispatch();\n  const [reportDate, setReportDate] = useState({\n    start: startOfDay(new Date()),\n    end: endOfDay(new Date()),\n  });\n  //sort by date\n\n  // toggle advance filter\n  //   const [isOpen, setIsOpen] = useState(false);\n  //   const toggle = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    const startDate = startOfDay(reportDate.start);\n    const endDate = endOfDay(reportDate.end);\n    dispatch(fetchOPDAnalytics({ startDate, endDate, centerAccess }));\n  }, [dispatch, reportDate, centerAccess]);\n\n  const columns = [\n    {\n      name: \"#\",\n      selector: (row, idx) => idx + 1,\n    },\n    {\n      name: \"Patient Name\",\n      selector: (row) => row.patient?.name,\n    },\n    {\n      name: \"UID\",\n      selector: (row) => `${row.patient?.id?.prefix}${row.patient?.id?.value}`,\n    },\n    {\n      name: \"Doctor\",\n      selector: (row) => row.doctor?.name,\n      wrap: true,\n    },\n    {\n      name: \"Date\",\n      selector: (row) =>\n        `On ${format(new Date(row.startDate), \"dd MMM yyyy\")} at \\n ${format(\n          new Date(row.startDate),\n          \"hh:mm a\"\n        )} for ${differenceInMinutes(\n          new Date(row?.endDate),\n          new Date(row?.startDate)\n        )} mins`,\n      wrap: true,\n    },\n    {\n      name: \"Center\",\n      selector: (row) => row.center?.title,\n    },\n    {\n      name: \"Appointment Type\",\n      selector: (row) => row.consultationType,\n    },\n    {\n      name: \"Patient Ph Number\",\n      selector: (row) => row.patient?.phoneNumber,\n      wrap: true,\n    },\n    {\n      name: \"Prescribed\",\n      selector: (row) => (row?.chart ? \"Yes\" : \"No\"),\n    },\n    {\n      name: \"Paid Amount\",\n      selector: (row) => row.bill?.receiptInvoice?.payable,\n    },\n    {\n      name: \"Payment Mode\",\n      selector: (row) =>\n        row.bill?.receiptInvoice?.paymentModes\n          ?.map(\n            (pm) =>\n              `${pm.amount} - ${pm.type} ${pm.transactionId || \"\"} ${\n                pm.bank || \"\"\n              } ${pm.chequeNumber || \"\"} ${pm.cardNumber || \"\"}`\n          )\n          .join(\", \"),\n      wrap: true,\n    },\n    // {\n    //   name: \"#\",\n    //   selector: (row) => row.,\n    // },\n    // {\n    //   name: \"#\",\n    //   selector: (row) => row.,\n    // },\n  ];\n\n  const csvOPD = () => {\n    return data?.map((d, i) => ({\n      ...d,\n      id: i + 1,\n      uid: `${d.patient?.id?.prefix}${d.patient?.id?.value}`,\n      paymentMode: d.bill?.receiptInvoice?.paymentModes\n        ?.map(\n          (pm) =>\n            `${pm.amount} - ${pm.type} ${pm.transactionId || \"\"} ${\n              pm.bank || \"\"\n            } ${pm.chequeNumber || \"\"} ${pm.cardNumber || \"\"}`\n        )\n        .join(\", \"),\n      prescribed: d?.chart ? \"Yes\" : \"No\",\n      paidAmount: d.bill?.receiptInvoice?.payable,\n      date: `On ${format(new Date(d.startDate), \"dd MMM yyyy\")} at \\n ${format(\n        new Date(d.startDate),\n        \"hh:mm a\"\n      )} for ${differenceInMinutes(\n        new Date(d?.endDate),\n        new Date(d?.startDate)\n      )} mins`,\n    }));\n  };\n\n  const headers = [\n    { label: \"#\", key: \"id\" },\n    { label: \"Patient\", key: \"patient.name\" },\n    { label: \"UID\", key: \"uid\" },\n    { label: \"Doctor\", key: \"doctor.name\" },\n    { label: \"Date\", key: \"date\" },\n    { label: \"Center\", key: \"center.title\" },\n    { label: \"Appointment Type\", key: \"consultationType\" },\n    { label: \"Patient Phone No\", key: \"patient.phoneNumber\" },\n    { label: \"Prescribed\", key: \"prescribed\" },\n    { label: \"Paid Amount\", key: \"paidAmount\" },\n    { label: \"Payment Mode\", key: \"paymentMode\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className=\"pt-4\">\n        <div className=\"bg-white p-2 m-n3\">\n          <Header reportDate={reportDate} setReportDate={setReportDate} />\n          <Divider />\n          <div className=\"text-end mt-3\">\n            <CSVLink\n              data={csvOPD() || []}\n              title=\"CSV Download\"\n              filename={\"reports.csv\"}\n              headers={headers}\n              className=\"btn btn-info px-2 ms-3\"\n            >\n              <i className=\"ri-file-paper-2-line text-light text-decoration-none\"></i>\n            </CSVLink>\n          </div>\n          <DataTable\n            fixedHeader\n            columns={columns}\n            data={data?.map((d) => ({ ...d, id: d._id })) || []}\n            highlightOnHover\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nOPDAnalytics.propTypes = {\n  data: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.Report.opd,\n  centerAccess: state.User.centerAccess,\n});\n\nexport default connect(mapStateToProps)(OPDAnalytics);\n","import React from \"react\";\nimport { CardHeader, Button } from \"reactstrap\";\n\nconst DBLogsHeader = ({ onRefresh, onToggleFilters, showFilters, loading }) => {\n  return (\n    <CardHeader className=\"d-flex justify-content-between align-items-center\">\n      <div>\n        <h5 className=\"mb-0\">\n          <i className=\"fas fa-chart-line mr-2\"></i>\n          Activity Logs\n        </h5>\n        <small className=\"text-muted\">\n          Monitor system activities and user actions\n        </small>\n      </div>\n      <div className=\"d-flex gap-2\">\n        <Button\n          color=\"primary\"\n          outline\n          onClick={onRefresh}\n          disabled={loading}\n          className=\"btn-sm\"\n          style={{ minWidth: \"120px\" }}\n        >\n          <i className=\"fas fa-sync-alt mr-1\"></i>\n          Refresh\n        </Button>\n        <Button\n          color=\"outline-secondary\"\n          onClick={onToggleFilters}\n          className=\"btn-sm\"\n          style={{ minWidth: \"120px\" }}\n        >\n          <i className=\"fas fa-filter mr-1\"></i>\n          {showFilters ? \"Hide\" : \"Show\"} Filters\n          <i\n            className={`fas fa-chevron-${showFilters ? \"up\" : \"down\"} ml-1`}\n          ></i>\n        </Button>\n      </div>\n    </CardHeader>\n  );\n};\n\nexport default DBLogsHeader;\n","import React from \"react\";\nimport { Card, CardBody, Row, Col, Input, Button } from \"reactstrap\";\n\nconst DBLogsFilters = ({\n  filters,\n  onFilterChange,\n  onApplyFilters,\n  onClearFilters,\n  loading,\n}) => {\n  return (\n    <Card className=\"mb-4 border-light\">\n      <CardBody className=\"p-0\">\n        <Row>\n          <Col md={2}>\n            <div>\n              <label htmlFor=\"action\">\n                <i className=\"fas fa-chart-line mr-1\"></i>\n                Action Type\n              </label>\n              <Input\n                type=\"select\"\n                name=\"action\"\n                id=\"action\"\n                value={filters.action}\n                onChange={onFilterChange}\n              >\n                <option value=\"\">All Actions</option>\n                <option value=\"delete\">Delete</option>\n                <option value=\"update\">Update</option>\n                <option value=\"create\">Create</option>\n              </Input>\n            </div>\n          </Col>\n          <Col md={2}>\n            <div>\n              <label htmlFor=\"collectionName\">\n                <i className=\"fas fa-database mr-1\"></i>\n                Collection\n              </label>\n              <Input\n                type=\"select\"\n                name=\"collectionName\"\n                id=\"collectionName\"\n                value={filters.collectionName}\n                onChange={onFilterChange}\n              >\n                <option value=\"\">All Collections</option>\n                <option value=\"Patient\">Patient</option>\n                <option value=\"Bill\">Bill</option>\n                <option value=\"Chart\">Chart</option>\n                <option value=\"Center\">Center</option>\n                <option value=\"ssrsTest\">SSRS Test</option>\n                <option value=\"Lead\">Lead</option>\n                <option value=\"Intern\">Intern</option>\n                <option value=\"Addmission\">Admission</option>\n                <option value=\"User\">User</option>\n              </Input>\n            </div>\n          </Col>\n          <Col md={2}>\n            <div>\n              <label htmlFor=\"startDate\">\n                <i className=\"fas fa-calendar mr-1\"></i>\n                Start Date\n              </label>\n              <Input\n                type=\"date\"\n                name=\"startDate\"\n                id=\"startDate\"\n                value={filters.startDate}\n                onChange={onFilterChange}\n              />\n            </div>\n          </Col>\n          <Col md={2}>\n            <div>\n              <label htmlFor=\"endDate\">\n                <i className=\"fas fa-calendar mr-1\"></i>\n                End Date\n              </label>\n              <Input\n                type=\"date\"\n                name=\"endDate\"\n                id=\"endDate\"\n                value={filters.endDate}\n                onChange={onFilterChange}\n              />\n            </div>\n          </Col>\n          <Col md={4}>\n            <div>\n              <label htmlFor=\"search\">\n                <i className=\"fas fa-search mr-1\"></i>\n                Search Notes\n              </label>\n              <Input\n                type=\"text\"\n                name=\"search\"\n                id=\"search\"\n                placeholder=\"Search in notes...\"\n                value={filters.search}\n                onChange={onFilterChange}\n              />\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col md={12} className=\"d-flex gap-3 justify-content-end\">\n            <Button\n              color=\"primary\"\n              onClick={onApplyFilters}\n              className=\"btn-sm\"\n              style={{ minWidth: \"100px\" }}\n              disabled={loading}\n            >\n              Apply Filters\n            </Button>\n            <Button\n              color=\"secondary\"\n              onClick={onClearFilters}\n              className=\"btn-sm\"\n              style={{ minWidth: \"100px\" }}\n              disabled={loading}\n            >\n              Clear Filters\n            </Button>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default DBLogsFilters;\n","import React from \"react\";\nimport { Table, Badge, Spinner } from \"reactstrap\";\nimport { format } from \"date-fns\";\n\nconst DBLogsTable = ({ data, loading }) => {\n  // Get action badge color and icon\n  const getActionBadge = (action) => {\n    switch (action?.toLowerCase()) {\n      case \"delete\":\n        return { color: \"danger\", icon: \"🗑️\", text: \"Delete\" };\n      case \"update\":\n        return { color: \"warning\", icon: \"✏️\", text: \"Update\" };\n      case \"create\":\n        return { color: \"success\", icon: \"➕\", text: \"Create\" };\n      default:\n        return { color: \"secondary\", icon: \"📝\", text: action || \"Unknown\" };\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"text-center py-4\">\n        <Spinner color=\"primary\" />\n        <p className=\"mt-2\">Loading logs...</p>\n      </div>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"text-center py-5\">\n        <i className=\"fas fa-database fa-3x text-muted mb-3\"></i>\n        <h5 className=\"text-muted\">No logs found</h5>\n        <p className=\"text-muted\">No activity logs available</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"table-responsive\">\n      <Table striped hover className=\"mb-0\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th>\n              <i className=\"fas fa-clock mr-1\"></i>#\n            </th>\n            <th>\n              <i className=\"fas fa-clock mr-1\"></i>\n              Timestamp\n            </th>\n            <th>\n              <i className=\"fas fa-chart-line mr-1\"></i>\n              Action\n            </th>\n            <th>\n              <i className=\"fas fa-database mr-1\"></i>\n              Collection\n            </th>\n            <th>\n              <i className=\"fas fa-id-card mr-1\"></i>\n              UID\n            </th>\n            <th>\n              <i className=\"fas fa-database mr-1\"></i>\n              Source\n            </th>\n            <th>Details</th>\n            <th>Changes</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((log, index) => {\n            const actionBadge = getActionBadge(log.action);\n            const timestamp = log.date;\n\n            return (\n              <tr key={log._id || index}>\n                <td>\n                  <div className=\"d-flex flex-column\">\n                    <small className=\"text-muted\">{index + 1}</small>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex flex-column\">\n                    <small className=\"text-muted\">\n                      {timestamp &&\n                        format(new Date(timestamp), \"dd/MM/yyyy hh:mm a\")}\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <Badge\n                    color={actionBadge.color}\n                    className=\"d-flex align-items-center\"\n                  >\n                    <span className=\"mr-1\">{actionBadge.icon}</span>\n                    {actionBadge.text}\n                  </Badge>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center\">\n                    <Badge color=\"info\" className=\"mr-2\">\n                      {log.collectionName || \"Unknown\"}\n                    </Badge>\n                    {log.documentId && (\n                      <small className=\"text-muted\">ID: {log.documentId}</small>\n                    )}\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex flex-column\">\n                    <small className=\"text-muted\">{log.uid || \"N/A\"}</small>\n                  </div>\n                </td>\n                <td>\n                  <Badge color=\"info\" outline>\n                    {log.source || \"System\"}\n                  </Badge>\n                </td>\n                <td>\n                  <small className=\"text-muted\">\n                    {log.note || \"No description\"}\n                  </small>\n                </td>\n                <td>\n                  {log.updatedFields &&\n                    Object.keys(log.updatedFields).length > 0 && (\n                      <div className=\"mb-1\">\n                        <small className=\"text-success\">\n                          <strong>Updated:</strong>{\" \"}\n                          {Object.keys(log.updatedFields).join(\", \")}\n                        </small>\n                      </div>\n                    )}\n                  {log.removedFields && log.removedFields.length > 0 && (\n                    <div>\n                      <small className=\"text-danger\">\n                        <strong>Removed:</strong> {log.removedFields.join(\", \")}\n                      </small>\n                    </div>\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default DBLogsTable;\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col,\n  Input,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Alert,\n} from \"reactstrap\";\nimport { fetchDBLogs } from \"../../../../store/actions\";\nimport DBLogsHeader from \"./components/DBLogsHeader\";\nimport DBLogsFilters from \"./components/DBLogsFilters\";\nimport DBLogsTable from \"./components/DBLogsTable\";\n\nconst DBLogs = ({ data, loading, pagination }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const [showFilters, setShowFilters] = useState(false);\n  const [itemsPerPage, setItemsPerPage] = useState(20);\n  const [currentPage, setCurrentPage] = useState(1);\n  // const [totalItems] = useState(150);\n  const [localFilters, setLocalFilters] = useState({\n    action: \"\",\n    collectionName: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    search: \"\",\n  });\n\n  // Calculate pagination\n  const totalPages = Math.ceil(pagination.totalItems / itemsPerPage);\n  const hasNextPage = currentPage < totalPages;\n  const hasPrevPage = currentPage > 1;\n\n  // Handle filter changes\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setLocalFilters((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Apply filters\n  const handleApplyFilters = () => {\n    setCurrentPage(1); // Reset to first page when applying filters\n    fetchData();\n  };\n\n  // Clear filters\n  const handleClearFilters = () => {\n    setLocalFilters({\n      action: \"\",\n      collectionName: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      search: \"\",\n    });\n    setCurrentPage(1);\n  };\n\n  // Handle pagination\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  // Handle items per page change\n  const handleItemsPerPageChange = (e) => {\n    const newItemsPerPage = Number(e.target.value);\n    setItemsPerPage(newItemsPerPage);\n    setCurrentPage(1); // Reset to first page when changing items per page\n  };\n\n  // Fetch data function\n  const fetchData = () => {\n    const params = {\n      page: currentPage,\n      limit: itemsPerPage,\n      sortBy: \"date\",\n      sortOrder: \"desc\",\n      ...localFilters,\n    };\n\n    // Remove empty filters\n    Object.keys(params).forEach((key) => {\n      if (\n        params[key] === \"\" ||\n        params[key] === null ||\n        params[key] === undefined\n      ) {\n        delete params[key];\n      }\n    });\n    dispatch(fetchDBLogs(params));\n  };\n\n  // Refresh data\n  const handleRefresh = () => {\n    fetchData();\n  };\n\n  // Effect to fetch data when pagination or filters change\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, itemsPerPage]);\n\n  // Effect to fetch data on initial load\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Format date\n  const formatDate = (dateString) => {\n    if (!dateString) return \"N/A\";\n    return new Date(dateString).toLocaleString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    });\n  };\n\n  // Get action badge color and icon\n  const getActionBadge = (action) => {\n    switch (action?.toLowerCase()) {\n      case \"delete\":\n        return { color: \"danger\", icon: \"🗑️\", text: \"Delete\" };\n      case \"update\":\n        return { color: \"warning\", icon: \"✏️\", text: \"Update\" };\n      case \"create\":\n        return { color: \"success\", icon: \"➕\", text: \"Create\" };\n      default:\n        return { color: \"secondary\", icon: \"📝\", text: action || \"Unknown\" };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"\">\n        <div className=\"row mt-4\">\n          <div className=\"col-12\">\n            <Card>\n              <DBLogsHeader\n                onRefresh={handleRefresh}\n                onToggleFilters={() => setShowFilters(!showFilters)}\n                showFilters={showFilters}\n                loading={loading}\n              />\n              <CardBody>\n                {/* Error Alert */}\n                {error && (\n                  <Alert color=\"danger\" className=\"mb-3\">\n                    <strong>Error:</strong> {error}\n                  </Alert>\n                )}\n\n                {/* Items Per Page and Total Count */}\n                <Row className=\"mb-3\">\n                  <Col md={6}>\n                    <Input\n                      type=\"select\"\n                      name=\"itemsPerPage\"\n                      value={itemsPerPage}\n                      onChange={handleItemsPerPageChange}\n                    >\n                      <option value={10}>10 per page</option>\n                      <option value={20}>20 per page</option>\n                      <option value={50}>50 per page</option>\n                      <option value={100}>100 per page</option>\n                    </Input>\n                  </Col>\n                  <Col md={6}>\n                    <div className=\"text-right\">\n                      <small className=\"text-muted\">\n                        Total: {pagination.totalItems} logs\n                      </small>\n                    </div>\n                  </Col>\n                </Row>\n\n                {showFilters && (\n                  <DBLogsFilters\n                    filters={localFilters}\n                    onFilterChange={handleFilterChange}\n                    onApplyFilters={handleApplyFilters}\n                    onClearFilters={handleClearFilters}\n                    loading={loading}\n                  />\n                )}\n\n                <DBLogsTable data={data} loading={loading} />\n\n                {/* Pagination */}\n                {totalPages > 1 && (\n                  <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                    <div>\n                      <small className=\"text-muted\">\n                        Showing {(currentPage - 1) * itemsPerPage + 1} to{\" \"}\n                        {Math.min(\n                          currentPage * itemsPerPage,\n                          pagination.totalItems\n                        )}{\" \"}\n                        of {pagination.totalItems} entries\n                      </small>\n                    </div>\n                    <Pagination\n                      className=\"mb-0\"\n                      style={{ marginBottom: \"0px\" }}\n                    >\n                      <PaginationItem disabled={!hasPrevPage}>\n                        <PaginationLink\n                          previous\n                          onClick={() => handlePageChange(currentPage - 1)}\n                          disabled={!hasPrevPage}\n                        />\n                      </PaginationItem>\n\n                      {Array.from({ length: totalPages }, (_, i) => i + 1)\n                        .filter(\n                          (page) =>\n                            page === 1 ||\n                            page === totalPages ||\n                            Math.abs(page - currentPage) <= 2\n                        )\n                        .map((page, index, array) => (\n                          <React.Fragment key={page}>\n                            {index > 0 && array[index - 1] !== page - 1 && (\n                              <PaginationItem disabled>\n                                <PaginationLink>...</PaginationLink>\n                              </PaginationItem>\n                            )}\n                            <PaginationItem active={page === currentPage}>\n                              <PaginationLink\n                                onClick={() => handlePageChange(page)}\n                              >\n                                {page}\n                              </PaginationLink>\n                            </PaginationItem>\n                          </React.Fragment>\n                        ))}\n\n                      <PaginationItem disabled={!hasNextPage}>\n                        <PaginationLink\n                          next\n                          onClick={() => handlePageChange(currentPage + 1)}\n                          disabled={!hasNextPage}\n                        />\n                      </PaginationItem>\n                    </Pagination>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.DBLogs?.logs,\n  loading: state.DBLogs?.loading,\n  totalItems: state.DBLogs?.totalItems,\n  pagination: state.DBLogs.pagination,\n});\n\nexport default connect(mapStateToProps)(DBLogs);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  differenceInMinutes,\n  differenceInYears,\n  endOfDay,\n  format,\n  startOfDay,\n} from \"date-fns\";\nimport { connect, useDispatch } from \"react-redux\";\nimport Header from \"../Header\";\nimport Divider from \"../../../../Components/Common/Divider\";\nimport DataTable from \"react-data-table-component\";\nimport { CSVLink } from \"react-csv\";\nimport { Button, Input } from \"reactstrap\";\nimport {\n  GET_BOOKING_ANALYTICS,\n  GET_PATIENT_ANALYTICS,\n  GET_PATIENT_ANALYTICS_WP,\n} from \"../../../../helpers/url_helper\";\nimport axios from \"axios\";\nimport { fetchBookingAnalytics } from \"../../../../store/actions\";\nimport { getBookingAnalytics } from \"../../../../helpers/backend_helper\";\n\nconst Booking = ({\n  centerAccess,\n  data,\n  totalPages,\n  currentPage,\n  limit: limitProp,\n  total,\n}) => {\n  const dispatch = useDispatch();\n\n  const [reportDate, setReportDate] = useState({\n    start: startOfDay(new Date()),\n    end: endOfDay(new Date()),\n  });\n  const [filter, setFilter] = useState(\"\");\n  const [val, setVal] = useState(\"\");\n  //   const [data, setData] = useState([]);\n  const [page, setPage] = useState(currentPage || 1);\n  // const [totalPages, setTotalPages] = useState(1);\n  const [limit, setLimit] = useState(limitProp || 10);\n\n  const [csvData, setCsvData] = useState([]);\n  const [csvLoading, setCsvLoading] = useState(false);\n  const csvRef = useRef();\n\n  useEffect(() => {\n    setPage(currentPage || 1);\n  }, [currentPage]);\n\n  const fetchFullData = async () => {\n    try {\n      setCsvLoading(true);\n      const res = await getBookingAnalytics({\n        page: 1,\n        limit: 10000,\n        startDate: reportDate.start.toISOString(),\n        endDate: reportDate.end.toISOString(),\n        filter,\n        val,\n        centerAccess,\n      });\n\n      if (res.success) {\n        console.log(res.payload, \"payload\");\n        const fullData = res.payload || [];\n        const formatted = fullData.map((d, i) => ({\n          ...d,\n          id: i + 1,\n          patientName: d?.patient?.name\n            .split(\" \")\n            .map((n) => n.charAt(0).toUpperCase() + n.slice(1))\n            .join(\" \"),\n          doctorName: d?.doctor?.name\n            .split(\" \")\n            .map((n) => n.charAt(0).toUpperCase() + n.slice(1))\n            .join(\" \"),\n          centerName: d?.center?.title\n            .split(\" \")\n            .map((n) => n.charAt(0).toUpperCase() + n.slice(1))\n            .join(\" \"),\n          date: `${format(\n            new Date(d.startDate),\n            \"d MMM yyyy hh:mm a\"\n          )} for ${differenceInMinutes(\n            new Date(d.endDate),\n            new Date(d.startDate)\n          )} minutes`,\n          phoneNumber: d?.patient?.dialCode + d?.patient?.mobile,\n          paymentStatus:\n            d?.transactionId?.payment_Status || d?.bill\n              ? \"Completed\"\n              : \"Unpaid\",\n          paymentMethod:\n            d?.transactionId?.payment_method?.toUpperCase() ||\n            d?.bill?.receiptInvoice?.paymentModes\n              ?.map((m) => m.type)\n              .join(\", \"),\n          bookingPrice:\n            d?.transactionId?.booking_price ||\n            d?.bill?.receiptInvoice?.paymentModes\n              ?.reduce((sum, m) => sum + (m.amount || 0), 0)\n              .toFixed(2),\n        }));\n\n        setCsvData(formatted);\n\n        // trigger download\n        setTimeout(() => {\n          csvRef.current.link.click();\n        }, 100);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch full patient analytics\", err);\n    } finally {\n      setCsvLoading(false);\n    }\n  };\n\n  console.log(page, \"page\");\n\n  const fetchData = async () => {\n    dispatch(\n      fetchBookingAnalytics({\n        page,\n        limit,\n        startDate: reportDate.start.toISOString(),\n        endDate: reportDate.end.toISOString(),\n        filter,\n        val,\n        centerAccess,\n      })\n    );\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [page, reportDate, filter, limit, centerAccess, val]);\n\n  console.log(data, \"data\");\n\n  const generalColumns = [\n    {\n      name: \"#\",\n      selector: (row, idx) => idx + 1,\n    },\n    {\n      name: \"Center\",\n      selector: (row) => row.center?.title,\n    },\n    {\n      name: \"Patient\",\n      selector: (row) => row.patient?.name,\n      wrap: true,\n      style: {\n        textTransform: \"capitalize\",\n      },\n    },\n    {\n      name: \"UID\",\n      selector: (row) => `${row.patient?.id?.prefix}${row.patient?.id?.value}`,\n    },\n    {\n      name: \"Doctor\",\n      selector: (row) => row.doctor?.name,\n      wrap: true,\n    },\n    {\n      name: \"Date\",\n      selector: (row) =>\n        `${format(\n          new Date(row.startDate),\n          \"d MMM yyyy hh:mm a\"\n        )} for ${differenceInMinutes(\n          new Date(row.endDate),\n          new Date(row.startDate)\n        )} minutes`,\n      wrap: true,\n    },\n    {\n      name: \"Gender\",\n      selector: (row) => row.patient?.gender,\n    },\n    {\n      name: \"Phone No\",\n      selector: (row) => row.patient?.dialCode + row.patient?.mobile || \"\",\n    },\n    {\n      name: \"Booking Price\",\n      selector: (row) =>\n        row.transactionId?.booking_price ||\n        row.bill?.receiptInvoice?.paymentModes\n          ?.reduce((sum, m) => sum + (m.amount || 0), 0)\n          .toFixed(2),\n    },\n    {\n      name: \"Payment Method\",\n      selector: (row) =>\n        row.transactionId?.payment_method?.toUpperCase() ||\n        row.bill?.receiptInvoice?.paymentModes?.map((m) => m.type).join(\", \"),\n    },\n    {\n      name: \"Payment Status\",\n      selector: (row) =>\n        row.transactionId?.payment_Status || row.bill ? \"Completed\" : \"Unpaid\",\n    },\n  ];\n\n  const generalHeaders = [\n    { label: \"#\", key: \"id\" },\n    {\n      label: \"Center\",\n      key: \"centerName\",\n      style: { textTransform: \"capitalize\" },\n    },\n    {\n      label: \"Patient\",\n      key: \"patientName\",\n      style: { textTransform: \"capitalize\" },\n    },\n    { label: \"UID\", key: \"patient.id.value\" },\n    { label: \"Gender\", key: \"patient.gender\" },\n    { label: \"Phone No\", key: \"phoneNumber\" },\n    {\n      label: \"Doctor\",\n      key: \"doctorName\",\n      style: { textTransform: \"capitalize\" },\n    },\n    { label: \"Date\", key: \"date\" },\n    { label: \"Booking Price\", key: \"bookingPrice\" },\n    { label: \"Payment Method\", key: \"paymentMethod\" },\n    { label: \"Payment Status\", key: \"paymentStatus\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className=\"pt-4\">\n        <div className=\"bg-white p-2 m-n3\">\n          <div className=\"\">\n            <h6 className=\"display-6 fs-6 my-3\">\n              Total Appointments:- {total}\n            </h6>\n          </div>\n          <Header reportDate={reportDate} setReportDate={setReportDate} />\n          <div className=\"d-flex justify-content-between mt-3\">\n            <div className=\"d-flex gap-2\">\n              <Input\n                type=\"select\"\n                value={filter}\n                onChange={(e) => {\n                  setFilter(e.target.value);\n                }}\n              >\n                <option value={\"\"}>All Appointments</option>\n                <option value={\"PRESCRIBED_APPOINTMENTS\"}>\n                  Prescribed Appointments\n                </option>\n                <option value={\"PAID_APPOINTMENTS\"}>Paid Appointments</option>\n                <option value={\"CANCELLED_APPOINTMENTS\"}>\n                  Cancelled Appointments\n                </option>\n              </Input>\n\n              <Input\n                type=\"select\"\n                value={limit}\n                onChange={(e) => {\n                  setLimit(Number(e.target.value));\n                  setPage(1);\n                }}\n                style={{ width: \"100px\" }}\n              >\n                {[10, 20, 30, 40, 50].map((l) => (\n                  <option key={l} value={l}>\n                    {l}\n                  </option>\n                ))}\n              </Input>\n            </div>\n            <div>\n              {/* {filter === \"PRESCRIBED_APPOINTMENTS\" &&\n                (val === \"ALL_PRESCRIBED\" ? (\n                  <Button\n                    color=\"info\"\n                    onClick={() => setVal(\"\")}\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Back to dates\n                  </Button>\n                ) : (\n                  <Button\n                    color=\"info\"\n                    onClick={() => setVal(\"ALL_ADMITTED\")}\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Show All Admitted Patients\n                  </Button>\n                ))} */}\n\n              <Button\n                color=\"info\"\n                onClick={fetchFullData}\n                disabled={csvLoading}\n              >\n                {csvLoading ? \"Preparing CSV...\" : \"Export CSV\"}\n              </Button>\n\n              <CSVLink\n                data={csvData || []}\n                filename=\"reports.csv\"\n                headers={generalHeaders}\n                className=\"d-none\"\n                ref={csvRef}\n              />\n            </div>\n          </div>\n          <Divider />\n          <DataTable\n            fixedHeader\n            columns={\n              // filter === \"PRESCRIBED_APPOINTMENTS\"\n              //   ? admittedColumns\n              //   : filter === \"CANCELLED_APPOINTMENTS\"\n              //   ? patientColumns\n              //   :\n              generalColumns\n            }\n            data={\n              data?.map((d) => ({\n                ...d,\n                id: d._id,\n                date: `${format(\n                  new Date(d.startDate),\n                  \"d MMM yyyy hh:mm a\"\n                )} for ${differenceInMinutes(\n                  new Date(d.endDate),\n                  new Date(d.startDate)\n                )} minutes`,\n              })) || []\n            }\n            highlightOnHover\n          />\n          <div className=\"d-flex justify-content-between align-items-center mt-3\">\n            <Button\n              disabled={page === 1}\n              onClick={() => setPage((p) => Math.max(p - 1, 1))}\n            >\n              Prev\n            </Button>\n            <span>\n              Page {page} of {totalPages}\n            </span>\n            <Button\n              disabled={page === totalPages}\n              onClick={() => setPage((p) => p + 1)}\n            >\n              Next\n            </Button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nBooking.propTypes = {\n  data: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  centerAccess: state.User.centerAccess,\n  data: state.Report.booking,\n  totalPages: state.Report.totalPages,\n  currentPage: state.Report.currentPage,\n  limit: state.Report.limit,\n  total: state.Report.total,\n});\n\nexport default connect(mapStateToProps)(Booking);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, ButtonGroup, Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  DASHBOARD,\n  DB_LOGS,\n  FINANACE,\n  HUBSPOT_CONTACTS,\n  LEAD_ANALYTICS,\n  OPD_ANALYTICS,\n  PATIENT_ANALYTICS,\n  REPORT,\n  BOOKING,\n} from \"../../Components/constants/report\";\nimport Dashboard from \"./Components/Dashboard\";\nimport ReportAnalytics from \"./Components/Report\";\nimport Finance from \"./Components/Finance\";\nimport Patient from \"./Components/Patient\";\nimport Lead from \"./Components/Lead\";\nimport OPD from \"./Components/OPD\";\nimport BreadCrumb from \"../../Components/Common/BreadCrumb\";\nimport DBLogs from \"./Components/DBLogs\";\nimport HubspotContacts from \"./Components/Hubspot\";\nimport Booking from \"./Components/Booking\";\n\nconst Report = ({}) => {\n  const [view, setView] = useState(REPORT);\n\n  const handleView = (v) => setView(v);\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid>\n          <BreadCrumb title={\"Report\"} pageTitle={\"Report\"} />\n          <ButtonGroup>\n            {\" \"}\n            <Button\n              outline={view !== DASHBOARD}\n              onClick={() => handleView(DASHBOARD)}\n            >\n              Dashboard\n            </Button>{\" \"}\n            <Button\n              outline={view !== REPORT}\n              onClick={() => handleView(REPORT)}\n            >\n              Report\n            </Button>{\" \"}\n            <Button\n              outline={view !== FINANACE}\n              onClick={() => handleView(FINANACE)}\n            >\n              Finance\n            </Button>\n            <Button\n              outline={view !== PATIENT_ANALYTICS}\n              onClick={() => handleView(PATIENT_ANALYTICS)}\n            >\n              Patient Analytics\n            </Button>\n            <Button\n              outline={view !== DB_LOGS}\n              onClick={() => handleView(DB_LOGS)}\n            >\n              DB Logs\n            </Button>\n            <Button\n              outline={view !== LEAD_ANALYTICS}\n              onClick={() => handleView(LEAD_ANALYTICS)}\n            >\n              Lead Analytics\n            </Button>\n            <Button\n              outline={view !== OPD_ANALYTICS}\n              onClick={() => handleView(OPD_ANALYTICS)}\n            >\n              OPD Analytics\n            </Button>\n            <Button\n              outline={view !== BOOKING}\n              onClick={() => handleView(BOOKING)}\n            >\n              Booking\n            </Button>\n            {/* <Button\n              outline={view !== HUBSPOT_CONTACTS}\n              onClick={() => handleView(HUBSPOT_CONTACTS)}\n            >\n              Hubspot Contacts\n            </Button> */}\n          </ButtonGroup>\n          <div>\n            {view === DASHBOARD && <Dashboard view={view} />}\n            {view === REPORT && <ReportAnalytics view={view} />}\n            {view === FINANACE && <Finance view={view} />}\n            {view === PATIENT_ANALYTICS && <Patient view={view} />}\n            {view === LEAD_ANALYTICS && <Lead view={view} />}\n            {view === OPD_ANALYTICS && <OPD view={view} />}\n            {view === DB_LOGS && <DBLogs view={view} />}\n            {view === HUBSPOT_CONTACTS && <HubspotContacts view={view} />}\n            {view === BOOKING && <Booking view={view} />}\n          </div>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\n\nReport.propTypes = {\n  data: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.Report.data,\n  centerAccess: state.User.centerAccess,\n});\n\nexport default connect(mapStateToProps)(Report);\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row } from \"reactstrap\";\r\n\r\nconst BreadCrumb = ({ title, pageTitle }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"page-title-box p-3 d-flex flex-column flex-sm-row align-items-start align-items-sm-center justify-content-between gap-2\">\r\n            {/* Page Title */}\r\n            <h4 className=\"mb-2 mb-sm-0\">{title}</h4>\r\n\r\n            {/* Breadcrumbs */}\r\n            <div className=\"page-title-right\">\r\n              <ol className=\"breadcrumb m-0\">\r\n                <li className=\"breadcrumb-item\">\r\n                  <Link to=\"#\">{pageTitle}</Link>\r\n                </li>\r\n                <li className=\"breadcrumb-item active\">{title}</li>\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import React, { useEffect, useState, useMemo, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  fetchHubspotContacts,\n  togglePatientForm,\n} from \"../../../../store/actions\";\nimport { capitalizeWords } from \"../../../../utils/toCapitalize\";\nimport { Button, Tooltip } from \"reactstrap\";\n\nconst statusBadge = {\n  Planned: \"bg-blue-100 text-blue-700 border-blue-300\",\n  Completed: \"bg-green-100 text-green-700 border-green-300\",\n  Missed: \"bg-red-100 text-red-700 border-red-300\",\n  Admitted: \"bg-emerald-100 text-emerald-700 border-emerald-300 font-bold\",\n};\n\nconst visitTypes = [\"First\", \"Follow-up\"];\nconst statusOptions = [\"Planned\", \"Missed\", \"Completed\"];\nconst agents = [\"Agent A\", \"Agent B\", \"Agent C\"];\n\nconst visitDateOptions = [\n  { label: \"All\", value: \"\" },\n  { label: \"Today Visits\", value: \"today\" },\n  { label: \"Tomorrow Visits\", value: \"tomorrow\" },\n  { label: \"Past Visits\", value: \"past\" },\n  { label: \"Future Visits\", value: \"future\" },\n  { label: \"Planned Visits\", value: \"planned\" },\n];\n\nconst LeadDashboard = ({ leadDate }) => {\n  const dispatch = useDispatch();\n  const {\n    contacts = [],\n    loading,\n    pagination = {},\n  } = useSelector((state) => state.HubspotContacts);\n\n  // UI state\n  const [filters, setFilters] = useState({\n    visitType: \"\",\n    status: \"\",\n    assignedTo: \"\",\n  });\n  const [visitDateFilter, setVisitDateFilter] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [tooltipOpen, setTooltipOpen] = useState(null);\n  const buttonRefs = useRef({});\n\n  // Fetch contacts when visitDateFilter, currentPage, or itemsPerPage changes\n  useEffect(() => {\n    const params = {\n      page: currentPage,\n      limit: itemsPerPage,\n      // leadDate: leadDate,\n      // visitDate: visitDateFilter,\n    };\n    if (visitDateFilter === \"planned\") {\n      params.status = \"Planned\";\n    } else {\n      params.visitDate = visitDateFilter;\n    }\n\n    console.log(params, \"params\");\n    dispatch(fetchHubspotContacts(params));\n  }, [visitDateFilter, currentPage, itemsPerPage, dispatch]);\n\n  // Reset tooltip state and cleanup refs when data changes or component unmounts\n  useEffect(() => {\n    // Reset tooltip state when data changes\n    setTooltipOpen(null);\n    // Clear refs to prevent stale references\n    buttonRefs.current = {};\n\n    // Cleanup function for unmount\n    return () => {\n      buttonRefs.current = {};\n      setTooltipOpen(null);\n    };\n  }, [contacts, currentPage, visitDateFilter]);\n\n  // Filtering (client-side for visitType, status, assignedTo)\n  const filteredContacts = useMemo(() => {\n    let filtered = contacts;\n    if (filters.visitType) {\n      filtered = filtered.filter((c) => c.visitType === filters.visitType);\n    }\n    if (filters.status) {\n      filtered = filtered.filter((c) => c.status === filters.status);\n    }\n    if (filters.assignedTo) {\n      filtered = filtered.filter((c) => c.assignedTo === filters.assignedTo);\n    }\n    return filtered;\n  }, [contacts, filters]);\n\n  console.log(filteredContacts, \"filteredContacts\");\n\n  // Pagination controls\n  const totalPages = pagination?.totalPages || 1;\n  const totalItems = pagination?.totalItems || 0;\n\n  return (\n    <div className=\"p-2 sm:p-6 max-w-7xl mx-auto\">\n      {/* Filters Bar */}\n      <div className=\"bg-white rounded-xl shadow flex flex-wrap items-center gap-2 px-4 py-3 mb-6 border border-gray-100\">\n        <div className=\"flex flex-wrap gap-2\">\n          {visitDateOptions.map((opt) => (\n            <button\n              key={opt.value}\n              className={`px-4 py-2 rounded-lg font-medium border transition-colors duration-150 text-sm focus:outline-none focus:ring-2 focus:ring-blue-400 ${\n                visitDateFilter === opt.value\n                  ? \"bg-blue-600 text-gray-700 border-blue-600 shadow\"\n                  : \"bg-gray-50 text-gray-700 border-gray-300 hover:bg-blue-50\"\n              }`}\n              onClick={() => {\n                setVisitDateFilter(opt.value);\n                setCurrentPage(1);\n              }}\n            >\n              {opt.label}\n            </button>\n          ))}\n        </div>\n        <div className=\"flex-1\" />\n        {/* Future: Add more filters here if needed */}\n      </div>\n\n      {/* Table Card */}\n      <div className=\"bg-white rounded-xl shadow-lg border border-gray-100 overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50 sticky top-0 z-10\">\n            <tr>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Name\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Center\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Email\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Phone\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Gender\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Age\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Visit Date\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Amount\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Relation with pat\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Issues\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Comments\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Lead Status\n              </th>\n              {/* <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Contact Owner\n              </th> */}\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\">\n                Lifecycle Stage\n              </th>\n              <th className=\"px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase tracking-wider\"></th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-100\">\n            {loading ? (\n              <tr>\n                <td\n                  colSpan={7}\n                  className=\"text-center py-12 text-gray-400 text-lg font-medium\"\n                >\n                  Loading contacts...\n                </td>\n              </tr>\n            ) : filteredContacts.length === 0 ? (\n              <tr>\n                <td\n                  colSpan={7}\n                  className=\"text-center py-12 text-gray-400 text-lg font-medium\"\n                >\n                  No contacts found.\n                </td>\n              </tr>\n            ) : (\n              filteredContacts.map((contact, index) => (\n                <tr\n                  key={index}\n                  className={`transition-colors group ${\n                    contact.leadStatus === \"Admitted\"\n                      ? \"bg-emerald-50 hover:bg-emerald-100 border-l-4 border-emerald-500\"\n                      : \"hover:bg-blue-50\"\n                  }`}\n                >\n                  <td className=\"px-4 py-3 font-bold whitespace-nowrap font-semibold text-gray-900 flex items-center gap-2\">\n                    {capitalizeWords(\n                      `${contact.firstname || \"\"} ${contact.lastname || \"\"}`\n                    ) || \"N/A\"}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.center}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.email}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.phone}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.gender === \"Option 1\"\n                      ? \"Male\"\n                      : contact.gender === \"Option 2\"\n                      ? \"Female\"\n                      : \"Other\"}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.patient_age} Years\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.visitDate}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.amount}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.relation_with_patient}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.issues}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.comments}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap\">\n                    <span\n                      className={`px-2 py-1 rounded-full border text-xs font-semibold ${\n                        statusBadge[contact.leadStatus] ||\n                        \"bg-gray-100 text-gray-700 border-gray-300\"\n                      }`}\n                    >\n                      {contact.leadStatus}\n                    </span>\n                  </td>\n                  {/* <td className=\"px-4 py-3 whitespace-nowrap text-gray-700\">\n                    {contact.contactOwner}\n                  </td> */}\n                  <td className=\"px-4 py-3 text-capitalize whitespace-nowrap text-gray-700\">\n                    {contact.lifecyclestage}\n                  </td>\n                  <td className=\"px-4 py-3 text-xs whitespace-nowrap text-gray-700\">\n                    <div>\n                      <Button\n                        ref={(el) => (buttonRefs.current[index] = el)}\n                        onClick={() =>\n                          dispatch(\n                            togglePatientForm({\n                              data: null,\n                              leadData: {\n                                leadOrigin: \"hubspot\",\n                                patient: {\n                                  name: `${contact.firstname} ${contact.lastname}`?.trim(),\n                                  phoneNumber: contact.phone,\n                                  email: contact.email,\n                                },\n                              },\n                              isOpen: true,\n                            })\n                          )\n                        }\n                        onMouseEnter={() => setTooltipOpen(index)}\n                        onMouseLeave={() => setTooltipOpen(null)}\n                      >\n                        <i className=\"ri-user-add-line align-bottom text-white text-muted me-2\"></i>{\" \"}\n                      </Button>\n                      {tooltipOpen === index && buttonRefs.current[index] && (\n                        <Tooltip\n                          isOpen={true}\n                          target={buttonRefs.current[index]}\n                          placement=\"top\"\n                          delay={{ show: 100, hide: 100 }}\n                        >\n                          Register this HubSpot contact as a new patient\n                        </Tooltip>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Pagination Controls */}\n      <div className=\"flex flex-wrap items-center justify-between mt-8 gap-2 bg-white rounded-xl shadow border border-gray-100 px-4 py-3\">\n        <div className=\"text-sm text-gray-600\">\n          Showing{\" \"}\n          {filteredContacts.length === 0\n            ? 0\n            : (currentPage - 1) * itemsPerPage + 1}\n          -{Math.min(currentPage * itemsPerPage, pagination?.totalItems || 0)}{\" \"}\n          of {pagination?.totalItems || 0} contacts\n        </div>\n        <div className=\"flex gap-2 items-center\">\n          <button\n            className=\"px-3 py-1 rounded border border-gray-300 bg-white text-gray-700 hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-400 disabled:opacity-50\"\n            onClick={() => setCurrentPage((p) => Math.max(1, p - 1))}\n            disabled={currentPage === 1}\n          >\n            Previous\n          </button>\n          <span className=\"px-2 py-1 text-gray-700 font-medium\">\n            Page {currentPage} of {totalPages || 1}\n          </span>\n          <button\n            className=\"px-3 py-1 rounded border border-gray-300 bg-white text-gray-700 hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-400 disabled:opacity-50\"\n            onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))}\n            disabled={currentPage === totalPages || totalPages === 0}\n          >\n            Next\n          </button>\n          <select\n            className=\"ml-2 border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-400\"\n            value={itemsPerPage}\n            onChange={(e) => {\n              setItemsPerPage(Number(e.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            {[10, 20, 50, 100].map((size) => (\n              <option key={size} value={size}>\n                {size} / page\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LeadDashboard;\n","import React, { useRef, useEffect } from \"react\";\nimport {\n  Col,\n  Row,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n\nimport \"flatpickr/dist/themes/material_green.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport { endOfDay, startOfDay } from \"date-fns\";\n\nconst Header = ({ reportDate, setReportDate }) => {\n  const changeDate = (days) => {\n    const date = new Date();\n    if (days) date.setDate(date.getDate() - days);\n    setReportDate({ start: startOfDay(date), end: endOfDay(date) });\n  };\n\n  const changeToMonth = () => {\n    const date = new Date(),\n      y = date.getFullYear(),\n      m = date.getMonth();\n    const firstDay = new Date(y, m, 1);\n    setReportDate({ start: startOfDay(firstDay), end: endOfDay(new Date()) });\n  };\n\n  // const ref = useRef();\n  // useEffect(() => {\n  //   import('flatpickr').then((flatpickr) => {\n  //     const fp = flatpickr(ref);\n  //     return () => fp.destroy();\n  //   });\n  // }, [ref]);\n\n  return (\n    <React.Fragment>\n      <div>\n        <div>\n          <Row className=\"justify-content-end\">\n            {/* <Col xs={12} md={6}>\n              <div className=\"d-flex align-items-end\">\n                <h5 className=\"display-5 mb-0 font-size-25 font-semi-bold\">\n                  Reports\n                </h5>\n                <h6 className=\"display-6 font-size-20 mb-0 ms-3\">\n                  Jagruti Rehabilitation Center\n                </h6>\n              </div>\n            </Col> */}\n            <Col xs={12}>\n              <div className=\"d-flex justify-content-md-end mt-4 mt-md-0\">\n                <div className=\"border border-dark d-flex align-items-center\">\n                  <div>\n                    <Flatpickr\n                      // ref={ref}\n                      name=\"dateOfAdmission\"\n                      value={reportDate.start || \"\"}\n                      onChange={([e]) => {\n                        setReportDate({\n                          ...reportDate,\n                          start: e,\n                        });\n                      }}\n                      options={{\n                        dateFormat: \"d M, Y\",\n                        maxDate: new Date(reportDate.end),\n                        disableMobile: true,\n                      }}\n                      className=\"form-control shadow-none bg-light border-0\"\n                      id=\"dateOfAdmission\"\n                    />\n                  </div>\n                  <div className=\"bg-light h-100 d-flex align-items-center\">\n                    -\n                  </div>\n                  <div>\n                    <Flatpickr\n                      // ref={ref}\n                      name=\"dateOfAdmission\"\n                      value={reportDate.end || \"\"}\n                      onChange={([e]) => {\n                        setReportDate({\n                          ...reportDate,\n                          end: e,\n                        });\n                      }}\n                      options={{\n                        dateFormat: \"d M, Y\",\n                        minDate: new Date(reportDate.start),\n                        disableMobile: true,\n                      }}\n                      className=\"form-control shadow-none bg-light border-0 text-end\"\n                      id=\"dateOfAdmission\"\n                    />\n                  </div>\n                  <div className=\"border-start border-dark\">\n                    <UncontrolledDropdown>\n                      <DropdownToggle\n                        caret\n                        color=\"light\"\n                        className=\"pe-3\"\n                      ></DropdownToggle>\n                      <DropdownMenu>\n                        <DropdownItem>\n                          <div onClick={() => changeDate()}>Today</div>\n                        </DropdownItem>\n                        <DropdownItem>\n                          <div onClick={() => changeDate(7)}>Last 7 days</div>\n                        </DropdownItem>\n                        <DropdownItem>\n                          <div onClick={() => changeDate(30)}>Last 30 days</div>\n                        </DropdownItem>\n                        <DropdownItem>\n                          <div onClick={changeToMonth}>This month</div>\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n"],"names":["DASHBOARD","REPORT","FINANACE","DB_LOGS","PATIENT_ANALYTICS","LEAD_ANALYTICS","OPD_ANALYTICS","BOOKING","Dashboard","_ref","centers","data","loading","dispatch","useDispatch","selectedCenterId","setSelectedCenterId","useState","useEffect","fetchDashboardAnalytics","_jsx","React","children","_jsxs","className","htmlFor","id","onChange","event","centerId","target","value","map","center","_id","title","role","MonthTillDate","monthTillDate","MonthOnMonthTable","monthOnMonth","defaultProps","connect","state","_state$Dashboard","_state$Dashboard2","_state$Center","_state$Center$data","Center","patients","Patient","searchedPatients","searchLoading","centerAccess","User","patient","setPatient","setValue","searchPatient","name","UncontrolledDropdown","direction","DropdownToggle","color","Input","e","val","size","RenderWhen","isTrue","style","right","Spinner","DropdownMenu","item","DropdownItem","onClick","ALL_TRANSACTIONS","ADVANCE_PAYMENT","INVOICE","DUE_AMOUNT","OPD_BILL","ALL_REFERRELS","ADDMISSION_DATE","DISCHARGE_DATE","DISCHARGE_PATIENT","INTERN","payments","label","allTransactionHeaders","key","allTransactionHeadersAddmissionDischargeDate","dueAmountHeaders","advancePaymentHeaders","advancePaymentHeadersAddmissionDischargeDate","payableAmountHeaders","payableAmountHeadersAddmissionDischargeDate","opdBillHeaders","billType","setBillType","sortByDate","setSortByDate","setSortPatientStatus","sortPatientStatus","patientsReferrel","setPatientsReferrel","diagnosisCol","toggle","_objectWithoutProperties","_excluded","Row","Col","xs","md","type","idx","SearchPatient","Button","reset","CSVLink","documents","filteredData","filter","row","intern","_row$patient","_row$patient2","_row$patient3","_row$patient3$addmiss","_row$patient4","_row$patient4$addmiss","_row$invoice","_row$receiptInvoice","_row$advancePayment","_row$receiptInvoice2","_ref2","_row$receipt","_row$advancePayment2","_row$receiptInvoice3","_objectSpread","date","format","Date","uid","concat","prefix","invoiceNumber","patientId","dateOfAddmission","addmission","addmissionDate","dateOfDischarge","dischargeDate","trim","invoice","payable","receipt","totalAmount","receiptInvoice","advancePayment","paymentModes","arr","paymentMode","CASH","amount","CARD","cardNumber","UPI","transactionId","CHEQUE","bankName","chequeNo","chequeNumber","BANK","Boolean","join","filename","headers","resultantHeaders","header","console","log","totalAdvancePayment","dt","forEach","_item$receipt","_item$receiptInvoice","_item$advancePayment","_item$receiptInvoice2","totalPayable","_item$receipt2","_item$invoice","_item$receiptInvoice3","_item$invoice2","_item$receiptInvoice4","totalAdPayment","totalPay","dueAmount","referrels","patientReferrel","patientRefLoading","searchPatientReferral","placeholder","referredBy","isOpen","setDiagnosisCol","Collapse","Card","CardBody","s","lg","disabled","selected","ReferralPatient","checked","Label","columns","selector","maxWidth","minWidth","bill","_row$center","_row$patient$addmissi","_row$patient2$addmiss","_row$patient5","wrap","_row$id","_row$patient6","_row$patient7","_ref4","_row$invoice$payable","_row$invoice2","_ref3","_row$receipt$totalAmo","_row$deposit","payment","OPD","deposit","_row$receiptInvoice4","fontWeight","DataTable","fixedHeader","c","d","highlightOnHover","Report","reportDate","setReportDate","start","startOfDay","end","endOfDay","setIsOpen","startDate","endDate","fetchReport","Header","Divider","Menu","AdvanceFilter","Banner","Table","props","setFilter","setVal","setData","page","setPage","totaldata","setTotaldata","totalPages","setTotalPages","limit","setLimit","csvData","setCsvData","csvLoading","setCsvLoading","csvRef","useRef","async","res","axios","get","GET_PATIENT_ANALYTICS","params","toISOString","_res$pagination","_res$pagination2","success","payload","pagination","total","err","error","fetchData","generalColumns","_row$patient2$id","_row$patient3$id","_row$doctors","_row$addmission","_row$addmission$docto","_row$addmission2","_row$addmission2$doct","_row$doctor","_row$patient4$doctor","doctorsFromArray","doctors","length","_d$doctor2","doctor","doctorsFromAdmission","fallbackDoctor","_row$psychologists","_row$addmission3","_row$addmission3$psyc","_row$addmission4","_row$addmission4$psyc","_row$psychologist","_row$patient5$psychol","psychologistsFromArray","psychologists","p","_p$psychologist","psychologist","psychologistsFromAdmission","fallbackPsychologist","gender","_row$patient8","phoneNumber","_row$patient9","differenceInYears","dateOfBirth","_row$patient0","guardianName","_row$patient1","guardianPhoneNumber","billCycleDate","_row$addmission5","_row$addmission6","_row$addmission7","patientRow","_row$center2","_row$uid","_row$uid2","_row$addmission8","_row$addmission8$doct","_row$addmission9","_row$addmission9$doct","_row$doctor2","pop","_row$addmission0","_row$addmission0$psyc","_row$addmission1","_row$addmission1$psyc","_row$psychologist2","ipdFileNumber","admittedColumns","dischargeColumns","patientColumns","Number","width","l","marginRight","GET_PATIENT_ANALYTICS_WP","formatted","i","_d$id","_d$patient","_d$patient$id","_d$id2","_d$patient2","_d$patient2$id","_d$patient3","_d$patient4","_d$addmission","_d$addmission$doctors","_d$doctor","_d$addmission2","_d$addmission2$doctor","_d$addmission3","_d$addmission3$psycho","_d$psychologist","_d$addmission4","_d$addmission4$psycho","_d$addmission5","_d$addmission6","_d$addmission7","age","doc","psy","setTimeout","current","link","click","ref","Math","max","lead","fetchLeadAnalytics","_row$location","location","attendedBy","_d$location","opd","fetchOPDAnalytics","differenceInMinutes","consultationType","chart","_row$bill","_row$bill$receiptInvo","_row$bill2","_row$bill2$receiptInv","_row$bill2$receiptInv2","pm","bank","_d$bill","_d$bill$receiptInvoic","_d$bill$receiptInvoic2","_d$bill2","_d$bill2$receiptInvoi","prescribed","paidAmount","onRefresh","onToggleFilters","showFilters","CardHeader","outline","filters","onFilterChange","onApplyFilters","onClearFilters","action","collectionName","search","striped","hover","index","actionBadge","toLowerCase","icon","text","getActionBadge","timestamp","Badge","documentId","source","note","updatedFields","Object","keys","removedFields","_state$DBLogs","_state$DBLogs2","_state$DBLogs3","DBLogs","logs","totalItems","setError","setShowFilters","itemsPerPage","setItemsPerPage","currentPage","setCurrentPage","localFilters","setLocalFilters","ceil","hasNextPage","hasPrevPage","handlePageChange","sortBy","sortOrder","undefined","fetchDBLogs","DBLogsHeader","handleRefresh","Alert","newItemsPerPage","DBLogsFilters","prev","handleApplyFilters","handleClearFilters","DBLogsTable","min","Pagination","marginBottom","PaginationItem","PaginationLink","previous","Array","from","_","abs","array","active","next","booking","limitProp","fetchBookingAnalytics","textTransform","dialCode","mobile","_row$transactionId","_row$bill$receiptInvo2","booking_price","reduce","sum","m","toFixed","_row$transactionId2","_row$transactionId2$p","payment_method","toUpperCase","_row$transactionId3","payment_Status","getBookingAnalytics","_d$center","_d$transactionId","_d$transactionId2","_d$transactionId2$pay","_d$transactionId3","_d$bill2$receiptInvoi2","patientName","split","n","charAt","slice","doctorName","centerName","paymentStatus","paymentMethod","bookingPrice","view","setView","handleView","v","Container","fluid","BreadCrumb","pageTitle","ButtonGroup","ReportAnalytics","Finance","Lead","HubspotContacts","Booking","Link","to","statusBadge","Planned","Completed","Missed","Admitted","visitDateOptions","leadDate","contacts","useSelector","setFilters","visitType","status","assignedTo","visitDateFilter","setVisitDateFilter","tooltipOpen","setTooltipOpen","buttonRefs","visitDate","fetchHubspotContacts","filteredContacts","useMemo","filtered","opt","colSpan","contact","leadStatus","capitalizeWords","firstname","lastname","email","phone","patient_age","relation_with_patient","issues","comments","lifecyclestage","el","togglePatientForm","leadData","leadOrigin","onMouseEnter","onMouseLeave","Tooltip","placement","delay","show","hide","changeDate","days","setDate","getDate","Flatpickr","options","dateFormat","maxDate","disableMobile","minDate","caret","changeToMonth","y","getFullYear","getMonth","firstDay"],"sourceRoot":""}