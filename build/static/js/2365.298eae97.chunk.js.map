{"version":3,"file":"static/js/2365.298eae97.chunk.js","mappings":"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","sources":["pages/Authentication/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Container,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport ParticlesAuth from \"../AuthenticationInner/ParticlesAuth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport withRouter from \"../../Components/Hooks/withRouter\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\nimport { firstchange } from \"../../helpers/backend_helper\";\r\nimport { closeChangePasswordModal } from \"../../store/features/auth/user/userSlice\";\r\nimport RenderWhen from \"../../Components/Common/RenderWhen\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [viewPassword, setViewPassword] = useState(false);\r\n  const [viewNewPassword, setViewNewPassword] = useState(false);\r\n  const [viewConfirmPassword, setViewConfirmPassword] = useState(false);\r\n  const [changePasswordError, setChangePasswordError] = useState(\"\");\r\n  const {\r\n    showChangePasswordModal = false,\r\n    tempToken = null,\r\n    loading,\r\n  } = useSelector((state) => state.User || {});\r\n\r\n  const validation = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().required(\"Please Enter Your Email\"),\r\n      password: Yup.string().required(\"Please Enter Your Password\"),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      dispatch({\r\n        type: \"user/loginUser\",\r\n        payload: {\r\n          values: {\r\n            ...values,\r\n            email: values.email,\r\n          },\r\n          navigate,\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  const changePasswordValidation = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      newPassword: Yup.string()\r\n        .min(8, \"Password must be at least 8 characters\")\r\n        .required(\"Please Enter Your New Password\"),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\r\n        .required(\"Please Confirm Your New Password\"),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const token = tempToken;\r\n        await firstchange({\r\n          oldPassword: validation.values.password,\r\n          newPassword: values.newPassword,\r\n          token,\r\n        });\r\n        toast.success(\"Password changed successfully!\");\r\n        dispatch(closeChangePasswordModal());\r\n        dispatch({\r\n          type: \"user/loginUser\",\r\n          payload: {\r\n            values: {\r\n              email: validation.values.email,\r\n              password: values.newPassword,\r\n            },\r\n            navigate,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Password change error:\", error);\r\n        setChangePasswordError(\r\n          error.response?.data?.message || \"Failed to change password\"\r\n        );\r\n      }\r\n    },\r\n  });\r\n\r\n  document.title = \"Login\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ParticlesAuth>\r\n        <div\r\n          className=\"auth-page-content\"\r\n          style={{ minHeight: \"100vh\", backgroundColor: \"#f4f6f9\" }}\r\n        >\r\n          <Container>\r\n            <Row>\r\n              <Col lg={12}>\r\n                <div\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: \"3rem\",\r\n                    marginBottom: \"2rem\",\r\n                    color: \"#6c757d\",\r\n                  }}\r\n                >\r\n                  <div className=\"d-inline-block auth-logo\">\r\n                    <h2 style={{ fontWeight: 600, color: \"#4a90e2\" }}>\r\n                      Jagruti Rehab Center Dashboard\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"justify-content-center\">\r\n              <div className=\"col-12 col-md-8 col-lg-5\">\r\n                <Card\r\n                  className=\"shadow\"\r\n                  style={{\r\n                    border: \"none\",\r\n                    borderRadius: \"20px\",\r\n                    backgroundColor: \"#ffffff\",\r\n                    marginTop: \"1rem\",\r\n                  }}\r\n                >\r\n                  <CardBody style={{ padding: \"2rem\" }}>\r\n                    <div\r\n                      style={{ textAlign: \"center\", marginBottom: \"1.5rem\" }}\r\n                    >\r\n                      <h4 style={{ color: \"#1f2937\", fontWeight: \"600\" }}>\r\n                        Welcome Back!\r\n                      </h4>\r\n                      <p style={{ color: \"#6b7280\", marginTop: \"0.5rem\" }}>\r\n                        Sign in to continue.\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Form\r\n                        onSubmit={(e) => {\r\n                          e.preventDefault();\r\n                          validation.handleSubmit();\r\n                          return false;\r\n                        }}\r\n                        action=\"#\"\r\n                      >\r\n                        <div className=\"mb-3\">\r\n                          <Label\r\n                            htmlFor=\"email\"\r\n                            className=\"form-label\"\r\n                            style={{ fontWeight: \"500\", color: \"#374151\" }}\r\n                          >\r\n                            Email\r\n                          </Label>\r\n                          <Input\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter your email\"\r\n                            type=\"email\"\r\n                            autoComplete=\"on\"\r\n                            onChange={validation.handleChange}\r\n                            onBlur={validation.handleBlur}\r\n                            value={validation.values.email || \"\"}\r\n                            invalid={\r\n                              validation.touched.email &&\r\n                              validation.errors.email\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            style={{\r\n                              height: \"45px\",\r\n                              borderRadius: \"10px\",\r\n                              borderColor: \"#ced4da\",\r\n                            }}\r\n                          />\r\n                          {validation.touched.email &&\r\n                          validation.errors.email ? (\r\n                            <FormFeedback type=\"invalid\">\r\n                              {validation.errors.email}\r\n                            </FormFeedback>\r\n                          ) : null}\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                          <Label\r\n                            className=\"form-label\"\r\n                            htmlFor=\"password-input\"\r\n                            style={{ fontWeight: \"500\", color: \"#374151\" }}\r\n                          >\r\n                            Password\r\n                          </Label>\r\n                          <div\r\n                            className=\"position-relative auth-pass-inputgroup mb-3\"\r\n                            style={{ position: \"relative\" }}\r\n                          >\r\n                            <Input\r\n                              name=\"password\"\r\n                              value={validation.values.password || \"\"}\r\n                              type={viewPassword ? \"text\" : \"password\"}\r\n                              className=\"form-control pe-5\"\r\n                              placeholder=\"Enter Password\"\r\n                              autoComplete=\"on\"\r\n                              onChange={validation.handleChange}\r\n                              onBlur={validation.handleBlur}\r\n                              invalid={\r\n                                validation.touched.password &&\r\n                                validation.errors.password\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                              style={{\r\n                                height: \"45px\",\r\n                                borderRadius: \"10px\",\r\n                                borderColor: \"#ced4da\",\r\n                              }}\r\n                            />\r\n                            {validation.touched.password &&\r\n                            validation.errors.password ? (\r\n                              <FormFeedback type=\"invalid\">\r\n                                {validation.errors.password}\r\n                              </FormFeedback>\r\n                            ) : null}\r\n                            <button\r\n                              className=\"btn btn-link position-absolute\"\r\n                              type=\"button\"\r\n                              onClick={() => setViewPassword(!viewPassword)}\r\n                              style={{\r\n                                top: \"50%\",\r\n                                transform: \"translateY(-50%)\",\r\n                                right: \"10px\",\r\n                                color: \"#6c757d\",\r\n                                fontSize: \"1.1rem\",\r\n                              }}\r\n                            >\r\n                              <i className=\"ri-eye-fill align-middle\"></i>\r\n                            </button>\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              textAlign: \"right\",\r\n                              marginBottom: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <Link\r\n                              to=\"/forgot-password\"\r\n                              className=\"text-muted\"\r\n                              style={{ fontSize: \"0.9rem\" }}\r\n                            >\r\n                              Forgot password?\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"d-grid\">\r\n                          <Button\r\n                            disabled={loading}\r\n                            color=\"success\"\r\n                            type=\"submit\"\r\n                            style={{\r\n                              backgroundColor: \"#10b981\",\r\n                              border: \"none\",\r\n                              borderRadius: \"10px\",\r\n                              height: \"45px\",\r\n                              fontWeight: \"500\",\r\n                              fontSize: \"1rem\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"center\",\r\n                              gap: \"10px\",\r\n                            }}\r\n                          >\r\n                            <RenderWhen isTrue={loading}>\r\n                              <div\r\n                                className=\"spinner-border spinner-border-sm\"\r\n                                role=\"status\"\r\n                                style={{ width: \"1rem\", height: \"1rem\" }}\r\n                              >\r\n                                <span className=\"visually-hidden\">\r\n                                  Loading...\r\n                                </span>\r\n                              </div>\r\n                            </RenderWhen>\r\n                            Sign In\r\n                          </Button>\r\n                        </div>\r\n                      </Form>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </ParticlesAuth>\r\n\r\n      <Modal\r\n        isOpen={showChangePasswordModal}\r\n        toggle={() => dispatch(closeChangePasswordModal())}\r\n        centered\r\n      >\r\n        <ModalHeader toggle={() => dispatch(closeChangePasswordModal())}>\r\n          Change Password\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              changePasswordValidation.handleSubmit();\r\n              return false;\r\n            }}\r\n          >\r\n            <div className=\"mb-3\">\r\n              <Label\r\n                htmlFor=\"newPassword\"\r\n                className=\"form-label\"\r\n                style={{ fontWeight: \"500\", color: \"#374151\" }}\r\n              >\r\n                New Password\r\n              </Label>\r\n              <div\r\n                className=\"position-relative auth-pass-inputgroup mb-3\"\r\n                style={{ position: \"relative\" }}\r\n              >\r\n                <Input\r\n                  name=\"newPassword\"\r\n                  className=\"form-control pe-5\"\r\n                  placeholder=\"Enter new password\"\r\n                  type={viewNewPassword ? \"text\" : \"password\"}\r\n                  onChange={changePasswordValidation.handleChange}\r\n                  onBlur={changePasswordValidation.handleBlur}\r\n                  value={changePasswordValidation.values.newPassword || \"\"}\r\n                  invalid={\r\n                    changePasswordValidation.touched.newPassword &&\r\n                    changePasswordValidation.errors.newPassword\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  style={{\r\n                    height: \"45px\",\r\n                    borderRadius: \"10px\",\r\n                    borderColor: \"#ced4da\",\r\n                  }}\r\n                />\r\n                {changePasswordValidation.touched.newPassword &&\r\n                changePasswordValidation.errors.newPassword ? (\r\n                  <FormFeedback type=\"invalid\">\r\n                    {changePasswordValidation.errors.newPassword}\r\n                  </FormFeedback>\r\n                ) : null}\r\n                <button\r\n                  className=\"btn btn-link position-absolute\"\r\n                  type=\"button\"\r\n                  onClick={() => setViewNewPassword(!viewNewPassword)}\r\n                  style={{\r\n                    top: \"50%\",\r\n                    transform: \"translateY(-50%)\",\r\n                    right: \"10px\",\r\n                    color: \"#6c757d\",\r\n                    fontSize: \"1.1rem\",\r\n                  }}\r\n                >\r\n                  <i className=\"ri-eye-fill align-middle\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <Label\r\n                htmlFor=\"confirmPassword\"\r\n                className=\"form-label\"\r\n                style={{ fontWeight: \"500\", color: \"#374151\" }}\r\n              >\r\n                Confirm Password\r\n              </Label>\r\n              <div\r\n                className=\"position-relative auth-pass-inputgroup mb-3\"\r\n                style={{ position: \"relative\" }}\r\n              >\r\n                <Input\r\n                  name=\"confirmPassword\"\r\n                  className=\"form-control pe-5\"\r\n                  placeholder=\"Confirm new password\"\r\n                  type={viewConfirmPassword ? \"text\" : \"password\"}\r\n                  onChange={changePasswordValidation.handleChange}\r\n                  onBlur={changePasswordValidation.handleBlur}\r\n                  value={changePasswordValidation.values.confirmPassword || \"\"}\r\n                  invalid={\r\n                    changePasswordValidation.touched.confirmPassword &&\r\n                    changePasswordValidation.errors.confirmPassword\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  style={{\r\n                    height: \"45px\",\r\n                    borderRadius: \"10px\",\r\n                    borderColor: \"#ced4da\",\r\n                  }}\r\n                />\r\n                {changePasswordValidation.touched.confirmPassword &&\r\n                changePasswordValidation.errors.confirmPassword ? (\r\n                  <FormFeedback type=\"invalid\">\r\n                    {changePasswordValidation.errors.confirmPassword}\r\n                  </FormFeedback>\r\n                ) : null}\r\n                <button\r\n                  className=\"btn btn-link position-absolute\"\r\n                  type=\"button\"\r\n                  onClick={() => setViewConfirmPassword(!viewConfirmPassword)}\r\n                  style={{\r\n                    top: \"50%\",\r\n                    transform: \"translateY(-50%)\",\r\n                    right: \"10px\",\r\n                    color: \"#6c757d\",\r\n                    fontSize: \"1.1rem\",\r\n                  }}\r\n                >\r\n                  <i className=\"ri-eye-fill align-middle\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {changePasswordError && (\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {changePasswordError}\r\n              </div>\r\n            )}\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => changePasswordValidation.handleSubmit()}\r\n            style={{\r\n              borderRadius: \"10px\",\r\n              height: \"45px\",\r\n              fontWeight: \"500\",\r\n            }}\r\n          >\r\n            Change Password\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => dispatch(closeChangePasswordModal())}\r\n            style={{\r\n              borderRadius: \"10px\",\r\n              height: \"45px\",\r\n              fontWeight: \"500\",\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n"],"names":["withRouter","Login","dispatch","useDispatch","navigate","useNavigate","viewPassword","setViewPassword","useState","viewNewPassword","setViewNewPassword","viewConfirmPassword","setViewConfirmPassword","changePasswordError","setChangePasswordError","showChangePasswordModal","tempToken","loading","useSelector","state","User","validation","useFormik","enableReinitialize","initialValues","email","password","validationSchema","Yup","required","onSubmit","async","type","payload","values","_objectSpread","changePasswordValidation","newPassword","confirmPassword","min","oneOf","token","firstchange","oldPassword","toast","success","closeChangePasswordModal","error","_error$response","_error$response$data","console","response","data","message","document","title","_jsxs","React","children","_jsx","ParticlesAuth","className","style","minHeight","backgroundColor","Container","Row","Col","lg","textAlign","marginTop","marginBottom","color","fontWeight","Card","border","borderRadius","CardBody","padding","Form","e","preventDefault","handleSubmit","action","Label","htmlFor","Input","name","placeholder","autoComplete","onChange","handleChange","onBlur","handleBlur","value","invalid","touched","errors","height","borderColor","FormFeedback","position","onClick","top","transform","right","fontSize","Link","to","Button","disabled","display","alignItems","justifyContent","gap","RenderWhen","isTrue","role","width","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","ModalFooter"],"sourceRoot":""}