{"version":3,"file":"static/js/3649.79481be0.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/index-25aba8a9.js","../node_modules/@dytesdk/ui-kit/dist/esm/full-screen-1f58c594.js","../node_modules/@dytesdk/ui-kit/dist/esm/dyte-screenshare-view.entry.js"],"sourcesContent":["import { a as getElement } from './index-08f4416b.js';\nimport { o as appendElement, q as removeElement, u as uiStore } from './ui-store-11740cb4.js';\n\nfunction SyncWithStore() {\n    return function (proto, propName) {\n        const { connectedCallback, disconnectedCallback } = proto;\n        proto.connectedCallback = function () {\n            const host = getElement(this);\n            const value = host[propName];\n            if (!value) {\n                const storeValue = uiStore.state[propName];\n                host[propName] = storeValue;\n                appendElement(propName, host);\n            }\n            return connectedCallback === null || connectedCallback === void 0 ? void 0 : connectedCallback.call(this);\n        };\n        proto.disconnectedCallback = function () {\n            removeElement(propName, getElement(this));\n            return disconnectedCallback === null || disconnectedCallback === void 0 ? void 0 : disconnectedCallback.call(this);\n        };\n    };\n}\n\nexport { SyncWithStore as S };\n","const requestFullScreen = (el) => {\n    if (el == null)\n        return;\n    if (el.requestFullscreen != null) {\n        el.requestFullscreen();\n    }\n    else if (el.mozRequestFullScreen != null) {\n        /* Firefox */\n        el.mozRequestFullScreen();\n    }\n    else if (el.webkitRequestFullscreen != null) {\n        /* Chrome, Safari & Opera */\n        el.webkitRequestFullscreen();\n    }\n    else if (el.msRequestFullscreen != null) {\n        /* IE/Edge */\n        el.msRequestFullscreen();\n    }\n};\nconst exitFullSreen = () => {\n    if (document.exitFullscreen != null) {\n        document.exitFullscreen();\n    }\n    else if (document.mozExitFullScreen != null) {\n        /* Firefox */\n        document.mozExitFullScreen();\n    }\n    else if (document.webkitExitFullscreen != null) {\n        /* Chrome, Safari & Opera */\n        document.webkitExitFullscreen();\n    }\n    else if (document.msExitFullscreen != null) {\n        /* IE/Edge */\n        document.msExitFullscreen();\n    }\n};\nconst isFullScreenEnabled = () => {\n    return document.fullscreenElement != null || document.webkitCurrentFullScreenElement != null;\n};\nconst isFullScreenSupported = () => {\n    if (typeof document !== 'undefined') {\n        return (document.fullscreenEnabled ||\n            document.mozFullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.msFullscreenEnabled);\n    }\n    return false;\n};\n\nexport { isFullScreenSupported as a, exitFullSreen as e, isFullScreenEnabled as i, requestFullScreen as r };\n","import { r as registerInstance, c as createEvent, w as writeTask, h, H as Host, a as getElement } from './index-08f4416b.js';\nimport { a as defaultIconPack, c as useLanguage } from './ui-store-11740cb4.js';\nimport { i as isFullScreenEnabled, r as requestFullScreen, e as exitFullSreen, a as isFullScreenSupported } from './full-screen-1f58c594.js';\nimport { S as SyncWithStore } from './index-25aba8a9.js';\n\nconst dyteScreenshareViewCss = \":host {\\n  line-height: initial;\\n  font-family: var(--dyte-font-family, sans-serif);\\n\\n  font-feature-settings: normal;\\n  font-variation-settings: normal;\\n}\\n\\np {\\n  margin: var(--dyte-space-0, 0px);\\n  padding: var(--dyte-space-0, 0px);\\n}\\n\\n\\n:host {\\n  height: 100%;\\n  width: 100%;\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  overflow: hidden;\\n  border-radius: var(--dyte-border-radius-lg, 12px);\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(var(--dyte-colors-video-bg, 24 24 24) / var(--tw-bg-opacity));\\n  container-type: inline-size;\\n  container-name: screentile;\\n}\\n\\n::slotted(dyte-name-tag) {\\n  position: absolute;\\n  left: var(--dyte-space-3, 12px);\\n  bottom: var(--dyte-space-3, 12px);\\n  opacity: 0.8;\\n}\\n\\n#video-container {\\n  position: absolute;\\n  display: block;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n#video-container .fit-in-container {\\n  -o-object-fit: fill;\\n     object-fit: fill;\\n}\\n\\nvideo {\\n  height: 100%;\\n  width: 100%;\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n}\\n\\n:host([variant='gradient']) ::slotted(dyte-audio-visualizer) {\\n  position: absolute;\\n  top: var(--dyte-space-2, 8px);\\n  right: var(--dyte-space-2, 8px);\\n  border-radius: 9999px;\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));\\n  padding: var(--dyte-space-2, 8px);\\n}\\n\\n:host([variant='gradient']) ::slotted(dyte-name-tag) {\\n  bottom: var(--dyte-space-0, 0px);\\n  left: var(--dyte-space-0, 0px);\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n  justify-content: center;\\n  text-align: center;\\n  background-color: transparent;\\n  background-image: linear-gradient(to top, var(--tw-gradient-stops));\\n  --tw-gradient-from: rgb(var(--dyte-colors-background-1000, 8 8 8));\\n  --tw-gradient-to: rgba(var(--dyte-colors-background-1000, 8 8 8) / 0);\\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\\n  --tw-gradient-to: transparent;\\n}\\n\\n:host([size='sm'][variant='gradient']) ::slotted(dyte-audio-visualizer) {\\n  height: var(--dyte-space-5, 20px);\\n  width: var(--dyte-space-5, 20px);\\n}\\n\\nvideo.visible {\\n  animation: video-fadein 0.4s ease;\\n}\\n\\n#controls {\\n  display: none;\\n  position: absolute;\\n  top: var(--dyte-space-3, 12px);\\n  right: var(--dyte-space-3, 12px);\\n  align-items: center;\\n  justify-content: flex-end;\\n  gap: var(--dyte-space-2, 8px);\\n}\\n\\n:host(:hover) #controls, \\n:host(:active) #controls, \\n:host(:focus-visible) #controls {\\n  display: flex;\\n}\\n\\n#full-screen-btn {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));\\n}\\n\\n/** For self view */\\n\\nh3 {\\n  margin-top: var(--dyte-space-10, 40px);\\n  margin-bottom: var(--dyte-space-6, 24px);\\n  text-align: center;\\n  font-size: 20px;\\n  font-weight: 500;\\n}\\n\\n:host([size='sm']) h3 {\\n  font-size: 16px;\\n}\\n\\n#self-message {\\n  padding-left: var(--dyte-space-4, 16px);\\n  padding-right: var(--dyte-space-4, 16px);\\n}\\n\\n:host(.isSelf) #self-view {\\n  flex: 1 1 0%;\\n}\\n\\n:host(.isSelf) #video-container {\\n  position: static;\\n  aspect-ratio: auto;\\n  height: auto;\\n  width: 50%;\\n  max-width: var(--dyte-space-96, 384px);\\n  border-radius: var(--dyte-border-radius-md, 8px);\\n  transition: 0.6s ease;\\n}\\n\\n:host(.isSelf) #video-container.expand {\\n  width: 60%;\\n  max-width: 100%;\\n}\\n\\n.actions {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: var(--dyte-space-2, 8px);\\n}\\n\\n:host([size='sm'].isSelf) #video-container,\\n:host([size='md'].isSelf) #video-container,\\n:host([size='sm'].isSelf) #expand-btn,\\n:host([size='md'].isSelf) #expand-btn {\\n  /** Hide video, fullscreen buttons in sm and md breakpoints */\\n  display: none;\\n}\\n\\n/** Remote control */\\n\\np {\\n  margin: var(--dyte-space-0, 0px);\\n  padding: var(--dyte-space-0, 0px);\\n}\\n\\n.remote-control {\\n  z-index: 10;\\n  height: 100%;\\n  max-height: 100%;\\n  flex: 0 1 auto;\\n}\\n\\n#remote-control-self {\\n  position: absolute;\\n  top: var(--dyte-space-0, 0px);\\n  left: 50%;\\n  z-index: 10;\\n  width: -moz-max-content;\\n  width: max-content;\\n  max-width: 100%;\\n  box-sizing: border-box;\\n  display: flex;\\n  height: var(--dyte-space-8, 32px);\\n  align-items: center;\\n  overflow: hidden;\\n  border-radius: var(--dyte-border-radius-sm, 4px);\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(var(--dyte-colors-warning, 255 205 7) / var(--tw-bg-opacity));\\n  font-size: 12px;\\n  color: rgb(var(--dyte-colors-text-1000, 255 255 255));\\n  transform: translateX(-50%);\\n}\\n\\n#remote-control-self p {\\n  padding-left: var(--dyte-space-3, 12px);\\n  padding-right: var(--dyte-space-3, 12px);\\n  padding-top: var(--dyte-space-2, 8px);\\n  padding-bottom: var(--dyte-space-2, 8px);\\n}\\n\\n#remote-control-self dyte-button {\\n  height: 100%;\\n  border-radius: var(--dyte-border-radius-none, 0);\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(var(--dyte-colors-danger, 255 45 45) / var(--tw-bg-opacity));\\n  font-size: 12px;\\n}\\n\\n:host([size='sm']) #remote-control-self {\\n  height: auto;\\n  flex-direction: column;\\n}\\n\\n:host([size='sm']) #remote-control-self dyte-button {\\n  width: 100%;\\n  padding-top: var(--dyte-space-1, 4px);\\n  padding-bottom: var(--dyte-space-1, 4px);\\n}\\n\\n/** Name tag positions */\\n\\n:host([name-tag-position='bottom-right']) ::slotted(dyte-name-tag) {\\n  left: auto;\\n  right: var(--dyte-space-3, 12px);\\n}\\n\\n:host([name-tag-position='bottom-center']) ::slotted(dyte-name-tag) {\\n  left: auto;\\n  right: auto;\\n}\\n\\n:host([name-tag-position='top-left']) ::slotted(dyte-name-tag) {\\n  top: var(--dyte-space-3, 12px);\\n  bottom: auto;\\n}\\n\\n:host([name-tag-position='top-right']) ::slotted(dyte-name-tag) {\\n  top: var(--dyte-space-3, 12px);\\n  right: var(--dyte-space-3, 12px);\\n  left: auto;\\n  bottom: auto;\\n}\\n\\n:host([name-tag-position='top-center']) ::slotted(dyte-name-tag) {\\n  left: auto;\\n  right: auto;\\n  bottom: auto;\\n  top: var(--dyte-space-3, 12px);\\n}\\n\\n/** Keyframes */\\n\\n@keyframes video-fadein {\\n  0% {\\n    opacity: 0;\\n    transform: scale(1.4) translateY(20px);\\n  }\\n\\n  100% {\\n    opacity: 1;\\n    transform: scale(1) translateY(0);\\n  }\\n}\\n\\n::slotted(dyte-network-indicator) {\\n  position: absolute;\\n  right: var(--dyte-space-3, 12px);\\n  bottom: var(--dyte-space-3, 12px);\\n}\\n\\n@media only screen and (max-height: 480px) and (orientation: landscape) {\\n    :host([size='sm'][variant='solid']) ::slotted(dyte-name-tag), \\n    :host([size='sm'][variant='solid']) dyte-name-tag {\\n    left: var(--dyte-space-0, 0px);\\n    bottom: var(--dyte-space-0, 0px);\\n    border-radius: var(--dyte-border-radius-none, 0);\\n      transform-origin: 0% 110%;\\n      transform: scale(0.6);\\n  }\\n}\\n\\n@container screentile (max-width: 400px) {\\n  ::slotted(dyte-name-tag) {\\n    transform-origin: 0 130%;\\n    transform: scale(0.7);\\n  }\\n}\\n\";\nconst DyteScreenshareViewStyle0 = dyteScreenshareViewCss;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst DyteScreenshareView = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n        this.play = createEvent(this, \"screensharePlay\", 7);\n        this.fullScreenListener = () => {\n            this.isFullScreen = isFullScreenEnabled();\n        };\n        this.participantScreenshareUpdate = (p) => {\n            if (p.id !== this.participant.id)\n                return;\n            this.screenShareListener(p);\n        };\n        /** Hide full screen button */\n        this.hideFullScreenButton = false;\n        /** Position of name tag */\n        this.nameTagPosition = 'bottom-left';\n        /** Variant */\n        this.variant = 'solid';\n        /** Icon pack */\n        this.iconPack = defaultIconPack;\n        /** Language */\n        this.t = useLanguage();\n        this.videoExpanded = false;\n        this.screenShareEnabled = false;\n        this.isFullScreen = false;\n        this.toggleFullScreen = () => {\n            if (!this.isFullScreen) {\n                requestFullScreen(this.host);\n                this.isFullScreen = true;\n            }\n            else {\n                exitFullSreen();\n                this.isFullScreen = false;\n            }\n        };\n    }\n    connectedCallback() {\n        window === null || window === void 0 ? void 0 : window.addEventListener('fullscreenchange', this.fullScreenListener);\n        window === null || window === void 0 ? void 0 : window.addEventListener('webkitfullscreenchange', this.fullScreenListener);\n    }\n    componentDidLoad() {\n        this.participantChanged(this.participant);\n    }\n    disconnectedCallback() {\n        if (!this.meeting)\n            return;\n        const { self } = this.meeting;\n        if (this.participant.id === self.id && this.screenShareListener)\n            this.participant.removeListener('screenShareUpdate', this.screenShareListener);\n        else\n            this.meeting.participants.joined.removeListener('screenShareUpdate', this.participantScreenshareUpdate);\n        window === null || window === void 0 ? void 0 : window.removeEventListener('fullscreenchange', this.fullScreenListener);\n        window === null || window === void 0 ? void 0 : window.removeEventListener('webkitfullscreenchange', this.fullScreenListener);\n    }\n    participantChanged(participant) {\n        if (participant != null && this.meeting) {\n            const { self } = this.meeting;\n            this.screenShareListener = ({ screenShareEnabled, screenShareTracks }) => {\n                const enabled = screenShareEnabled && screenShareTracks.video != null;\n                writeTask(() => {\n                    this.screenShareEnabled = enabled;\n                });\n                if (enabled) {\n                    const stream = new MediaStream();\n                    stream.addTrack(screenShareTracks.video);\n                    if (this.videoEl != null) {\n                        this.videoEl.srcObject = stream;\n                        this.videoEl.play();\n                    }\n                }\n                else if (this.videoEl != null) {\n                    this.videoEl.srcObject = undefined;\n                }\n            };\n            this.screenShareListener(participant);\n            if (participant.id === self.id)\n                participant.addListener('screenShareUpdate', this.screenShareListener);\n            else\n                this.meeting.participants.joined.addListener('screenShareUpdate', this.participantScreenshareUpdate);\n        }\n    }\n    render() {\n        var _a, _b;\n        const isSelf = ((_a = this.participant) === null || _a === void 0 ? void 0 : _a.id) === ((_b = this.meeting) === null || _b === void 0 ? void 0 : _b.self.id);\n        const text = this.isFullScreen ? this.t('full_screen.exit') : this.t('full_screen');\n        const icon = this.isFullScreen\n            ? this.iconPack.full_screen_minimize\n            : this.iconPack.full_screen_maximize;\n        return (h(Host, { key: '1210e9acb51881828eafe0c8edcc5db51cfe67e5', class: { isSelf } }, h(\"div\", { key: \"video-container\", id: \"video-container\", class: { expand: this.videoExpanded } }, h(\"video\", { key: 'edc1140a680fedb720626725ba33dee2c60a450f', ref: (el) => (this.videoEl = el), class: {\n                visible: this.screenShareEnabled,\n                'fit-in-container': this.participant.supportsRemoteControl,\n            }, playsInline: true, onPlay: () => {\n                this.play.emit({\n                    screenshareParticipant: this.participant,\n                    participant: this.meeting.self,\n                });\n            }, autoPlay: true, muted: true, id: `screen-share-video-${this.participant.id}` })), h(\"div\", { id: \"controls\", key: \"controls\" }, !this.hideFullScreenButton && !isSelf && isFullScreenSupported() && (h(\"dyte-tooltip\", { key: '5de7a66022531afd334d32119fe26c44d47871c0', label: text }, h(\"dyte-button\", { key: '1e2287ca95bf8bce3ebcd6fdfc9e601fabb8759b', id: \"full-screen-btn\", kind: \"icon\", onClick: this.toggleFullScreen, title: text }, h(\"dyte-icon\", { key: '4605f1c6eaa61d400b514da1553a3142ff377c20', icon: icon, \"aria-hidden\": true, tabIndex: -1 }))))), isSelf && (h(\"div\", { id: \"self-message\", key: \"self-message\" }, h(\"h3\", { key: '2e7cf4252fd106d9a86c4ecbb34d38c1b70004c8' }, this.t('screenshare.shared')), h(\"div\", { key: '56f069b3022daec515ff8b44875e7b046e075125', class: \"actions\" }, this.meeting != null && (h(\"dyte-button\", { key: 'b54f30fb5b44cec31f1708581220753189d9c2b5', variant: \"danger\", onClick: () => {\n                this.meeting.self.disableScreenShare();\n            } }, h(\"dyte-icon\", { key: 'cebfb5a509801fb74d1855fa0b6526f55c6e601e', icon: this.iconPack.share_screen_stop, slot: \"start\" }), this.t('screenshare.stop'))), h(\"dyte-button\", { key: '058c0ce2362e38b4829b31b894251d87212108c3', variant: \"secondary\", id: \"expand-btn\", onClick: () => {\n                this.videoExpanded = !this.videoExpanded;\n            } }, h(\"dyte-icon\", { key: '71e4ffe64eb29dcdc7963eb3131234abfecf1792', icon: this.videoExpanded\n                ? this.iconPack.full_screen_minimize\n                : this.iconPack.full_screen_maximize, slot: \"start\" }), this.videoExpanded\n            ? this.t('screenshare.min_preview')\n            : this.t('screenshare.max_preview'))))), h(\"slot\", { key: 'a12bec813c857700cf57ba36968526c308be5494' })));\n    }\n    get host() { return getElement(this); }\n    static get watchers() { return {\n        \"participant\": [\"participantChanged\"]\n    }; }\n};\n__decorate([\n    SyncWithStore()\n], DyteScreenshareView.prototype, \"meeting\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteScreenshareView.prototype, \"size\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteScreenshareView.prototype, \"iconPack\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteScreenshareView.prototype, \"t\", void 0);\nDyteScreenshareView.style = DyteScreenshareViewStyle0;\n\nexport { DyteScreenshareView as dyte_screenshare_view };\n"],"names":["SyncWithStore","proto","propName","connectedCallback","disconnectedCallback","host","getElement","this","storeValue","uiStore","state","appendElement","call","removeElement","requestFullScreen","el","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullSreen","document","exitFullscreen","mozExitFullScreen","webkitExitFullscreen","msExitFullscreen","isFullScreenEnabled","fullscreenElement","webkitCurrentFullScreenElement","isFullScreenSupported","fullscreenEnabled","mozFullscreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DyteScreenshareView","constructor","hostRef","registerInstance","stateUpdate","createEvent","play","fullScreenListener","isFullScreen","participantScreenshareUpdate","p","id","participant","screenShareListener","hideFullScreenButton","nameTagPosition","variant","iconPack","defaultIconPack","t","useLanguage","videoExpanded","screenShareEnabled","toggleFullScreen","window","addEventListener","componentDidLoad","participantChanged","meeting","self","removeListener","participants","joined","removeEventListener","_ref","screenShareTracks","enabled","video","writeTask","stream","MediaStream","addTrack","videoEl","srcObject","undefined","addListener","render","_a","_b","isSelf","text","icon","full_screen_minimize","full_screen_maximize","h","Host","class","expand","ref","visible","supportsRemoteControl","playsInline","onPlay","emit","screenshareParticipant","autoPlay","muted","concat","label","kind","onClick","title","tabIndex","disableScreenShare","share_screen_stop","slot","watchers","prototype","style"],"sourceRoot":""}