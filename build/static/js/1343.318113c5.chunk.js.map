{"version":3,"file":"static/js/1343.318113c5.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-transcripts.entry.js"],"sourcesContent":["import { r as registerInstance, w as writeTask, h, H as Host, a as getElement } from './index-08f4416b.js';\nimport { d as defaultConfig, c as useLanguage } from './ui-store-11740cb4.js';\nimport { S as SyncWithStore } from './index-25aba8a9.js';\nimport { c as clone } from './clone-acd4af50.js';\nimport './keysIn-310f65c1.js';\nimport './isObjectLike-773b9473.js';\n\nconst dyteTranscriptsCss = \":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{position:absolute;top:var(--dyte-space-4, 16px);right:var(--dyte-space-4, 16px);bottom:var(--dyte-space-4, 16px);left:var(--dyte-space-4, 16px);top:auto;display:flex;flex-direction:column;pointer-events:none;justify-content:center;width:100%;z-index:5}dyte-transcript{margin-top:var(--dyte-space-2, 8px)}\";\nconst DyteTranscriptsStyle0 = dyteTranscriptsCss;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst DyteTranscripts = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Config object */\n        this.config = defaultConfig;\n        /** Language */\n        this.t = useLanguage();\n        this.transcripts = [];\n        this.listenerAttached = false;\n        this.onTranscript = (transcript) => {\n            if (transcript.transcript) {\n                this.add(transcript);\n            }\n        };\n    }\n    connectedCallback() {\n        this.meetingChanged(this.meeting);\n    }\n    addListener(meeting) {\n        var _a;\n        (_a = meeting === null || meeting === void 0 ? void 0 : meeting.ai) === null || _a === void 0 ? void 0 : _a.addListener('transcript', this.onTranscript);\n        this.listenerAttached = true;\n    }\n    clearListeners(meeting) {\n        var _a;\n        this.onTranscript && ((_a = meeting === null || meeting === void 0 ? void 0 : meeting.ai) === null || _a === void 0 ? void 0 : _a.removeListener('transcript', this.onTranscript));\n        this.listenerAttached = false;\n        clearTimeout(this.disconnectTimeout);\n        this.transcripts = [];\n    }\n    disconnectedCallback() {\n        if (this.meeting == null)\n            return;\n        this.clearListeners(this.meeting);\n    }\n    meetingChanged(meeting, oldMeeting) {\n        clearTimeout(this.disconnectTimeout);\n        if (oldMeeting !== undefined)\n            this.clearListeners(oldMeeting);\n        if (meeting == null)\n            return;\n        if (this.states.activeCaptions) {\n            this.addListener(meeting);\n        }\n    }\n    statesChanged(states) {\n        if (!states)\n            return;\n        if (states.activeCaptions && !this.listenerAttached) {\n            this.addListener(this.meeting);\n        }\n        if (!states.activeCaptions && this.listenerAttached) {\n            this.clearListeners(this.meeting);\n        }\n    }\n    transcriptionsReducer(acc, t) {\n        if (!acc.length) {\n            return [t];\n        }\n        let lastElement = acc[acc.length - 1];\n        if (lastElement.peerId !== t.peerId) {\n            return acc.concat(t);\n        }\n        if (lastElement.id === t.id) {\n            lastElement.transcript = t.transcript;\n            acc.pop();\n            return acc.concat(clone(lastElement));\n        }\n        return acc.concat(t);\n    }\n    add(transcript) {\n        // show transcripts only if tab is in focus and a maximum of 3 at a time\n        // this.transcripts.splice(0, this.transcripts.length - 2);\n        this.transcripts = this.transcriptionsReducer(this.transcripts, transcript);\n    }\n    remove(renderedId) {\n        this.transcripts = this.transcripts.filter((transcript) => transcript.renderedId !== renderedId);\n    }\n    handleDismiss(e) {\n        e.stopPropagation();\n        const { id, renderedId } = e.detail;\n        const el = this.host.shadowRoot.querySelector(`[data-id=\"${id}\"]`);\n        // exit animation\n        el === null || el === void 0 ? void 0 : el.classList.add('exit');\n        setTimeout(() => {\n            writeTask(() => {\n                this.remove(renderedId);\n            });\n        }, 400);\n    }\n    renderTranscripts() {\n        const renderedTranscripts = [];\n        this.transcripts.forEach((transcript) => {\n            const t = {\n                name: transcript.name,\n                date: transcript.date,\n                peerId: transcript.peerId,\n                transcript: transcript.transcript,\n                id: transcript.id,\n                renderedId: transcript.id,\n            };\n            if (!renderedTranscripts.length) {\n                transcript.renderedId = t.renderedId;\n                renderedTranscripts.push(t);\n                return;\n            }\n            const lastTranscript = renderedTranscripts[renderedTranscripts.length - 1];\n            const maxTranscriptLength = 400;\n            if (lastTranscript.transcript.length + t.transcript.length > maxTranscriptLength ||\n                lastTranscript.peerId !== transcript.peerId) {\n                transcript.renderedId = t.renderedId;\n                renderedTranscripts.push(t);\n                return;\n            }\n            lastTranscript.transcript += ' ' + transcript.transcript;\n            transcript.renderedId = lastTranscript.renderedId;\n        });\n        renderedTranscripts.splice(0, renderedTranscripts.length - 2);\n        return renderedTranscripts === null || renderedTranscripts === void 0 ? void 0 : renderedTranscripts.map((transcript) => (h(\"dyte-transcript\", { key: transcript.id, \"data-id\": transcript.id, transcript: transcript, onDyteTranscriptDismiss: (e) => this.handleDismiss(e), t: this.t })));\n    }\n    render() {\n        if (!this.states.activeCaptions)\n            return;\n        return h(Host, null, this.renderTranscripts());\n    }\n    get host() { return getElement(this); }\n    static get watchers() { return {\n        \"meeting\": [\"meetingChanged\"],\n        \"states\": [\"statesChanged\"]\n    }; }\n};\n__decorate([\n    SyncWithStore()\n], DyteTranscripts.prototype, \"meeting\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteTranscripts.prototype, \"states\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteTranscripts.prototype, \"t\", void 0);\nDyteTranscripts.style = DyteTranscriptsStyle0;\n\nexport { DyteTranscripts as dyte_transcripts };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DyteTranscripts","constructor","hostRef","registerInstance","this","config","defaultConfig","t","useLanguage","transcripts","listenerAttached","onTranscript","transcript","add","connectedCallback","meetingChanged","meeting","addListener","_a","ai","clearListeners","removeListener","clearTimeout","disconnectTimeout","disconnectedCallback","oldMeeting","undefined","states","activeCaptions","statesChanged","transcriptionsReducer","acc","lastElement","peerId","concat","id","pop","clone","remove","renderedId","filter","handleDismiss","e","stopPropagation","detail","el","host","shadowRoot","querySelector","classList","setTimeout","writeTask","renderTranscripts","renderedTranscripts","forEach","name","date","push","lastTranscript","splice","map","h","onDyteTranscriptDismiss","render","Host","getElement","watchers","SyncWithStore","prototype","style"],"sourceRoot":""}