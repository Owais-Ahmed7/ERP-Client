{"version":3,"file":"static/js/8416.fe6ef7ea.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/index-25aba8a9.js","../node_modules/@dytesdk/ui-kit/dist/esm/dyte-channel-selector-ui.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/TextMessage-f486459a.js"],"sourcesContent":["import { a as getElement } from './index-08f4416b.js';\nimport { o as appendElement, q as removeElement, u as uiStore } from './ui-store-11740cb4.js';\n\nfunction SyncWithStore() {\n    return function (proto, propName) {\n        const { connectedCallback, disconnectedCallback } = proto;\n        proto.connectedCallback = function () {\n            const host = getElement(this);\n            const value = host[propName];\n            if (!value) {\n                const storeValue = uiStore.state[propName];\n                host[propName] = storeValue;\n                appendElement(propName, host);\n            }\n            return connectedCallback === null || connectedCallback === void 0 ? void 0 : connectedCallback.call(this);\n        };\n        proto.disconnectedCallback = function () {\n            removeElement(propName, getElement(this));\n            return disconnectedCallback === null || disconnectedCallback === void 0 ? void 0 : disconnectedCallback.call(this);\n        };\n    };\n}\n\nexport { SyncWithStore as S };\n","import { r as registerInstance, c as createEvent, h, H as Host } from './index-08f4416b.js';\nimport { a as defaultIconPack, c as useLanguage } from './ui-store-11740cb4.js';\nimport { S as SyncWithStore } from './index-25aba8a9.js';\nimport { T as TextMessageView } from './TextMessage-f486459a.js';\nimport './chat-d3096b6e.js';\n\nconst dyteChannelSelectorUiCss = \".scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\\\.5, 6px);width:var(--dyte-space-1\\\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}:host{display:flex}.container{display:flex;height:100%;width:var(--dyte-space-96, 384px);flex-direction:column;position:absolute;--tw-translate-x:calc(var(--dyte-space-96, 384px) * -1);transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity));border-top-width:var(--dyte-border-width-none, 0);border-bottom-width:var(--dyte-border-width-none, 0);border-right-width:var(--dyte-border-width-sm, 1px);border-left-width:var(--dyte-border-width-none, 0);border-style:solid;--tw-border-opacity:1;border-right-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-border-opacity));transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}@keyframes fade{0%{opacity:0}100%{opacity:1}}.overlay-container{width:100vw;--tw-translate-x:var(--dyte-space-96, 384px);transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity));transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms;animation:fade 0.8s}.overlay-container .sidebar-btn{position:static;padding:var(--dyte-space-4, 16px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity))}.sidebar-btn{position:absolute;right:calc(var(--dyte-space-9, 36px) * -1);top:var(--dyte-space-4, 16px);height:var(--dyte-space-8, 32px);width:var(--dyte-space-7, 28px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity));border-radius:var(--dyte-border-radius-sm, 4px)}@media (orientation: landscape) and (min-width: 400px){.container{position:static;--tw-translate-x:var(--dyte-space-0, 0px);transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.sidebar-btn,.overlay-container{display:none}}.search-wrapper{display:flex;align-items:center;gap:var(--dyte-space-2, 8px);padding:var(--dyte-space-2, 8px);border-left-width:var(--dyte-border-width-none, 0);border-right-width:var(--dyte-border-width-none, 0);border-bottom-width:var(--dyte-border-width-sm, 1px);border-top-width:var(--dyte-border-width-none, 0);border-style:solid;--tw-border-opacity:1;border-bottom-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-border-opacity))}.search{position:sticky;box-sizing:border-box;display:flex;align-items:center;border-radius:var(--dyte-border-radius-sm, 4px);margin-top:var(--dyte-space-0, 0px);margin-bottom:var(--dyte-space-0, 0px);height:var(--dyte-space-8, 32px);width:100%}.search .search-icon{height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px);padding:var(--dyte-space-2, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52));border-top-right-radius:var(--dyte-border-radius-sm, 4px);border-bottom-right-radius:var(--dyte-border-radius-sm, 4px)}.search input{box-sizing:border-box;width:100%;padding-top:var(--dyte-space-2, 8px);padding-bottom:var(--dyte-space-2, 8px);padding-left:var(--dyte-space-2, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255));border-width:var(--dyte-border-width-none, 0);border-style:none;outline:2px solid transparent;outline-offset:2px;font-size:14px;line-height:1.25rem}.search input::-moz-placeholder{color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76))}.search input::placeholder{color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76))}.search input{border-top-left-radius:var(--dyte-border-radius-sm, 4px);border-bottom-left-radius:var(--dyte-border-radius-sm, 4px)}.channel-container{box-sizing:border-box;display:flex;flex-direction:column;padding-top:var(--dyte-space-2, 8px);padding-bottom:var(--dyte-space-2, 8px);overflow-y:scroll}.channel-container .channel{display:flex;align-items:center;justify-content:space-between;gap:var(--dyte-space-2, 8px);padding:var(--dyte-space-0, 0px);border-left-width:var(--dyte-border-width-none, 0);border-right-width:var(--dyte-border-width-none, 0);border-bottom-width:var(--dyte-border-width-sm, 1px);border-top-width:var(--dyte-border-width-none, 0);border-style:solid;--tw-border-opacity:1;border-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-border-opacity))}.channel-container .channel:hover{cursor:pointer;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-300, 73 124 253) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-on-brand-900, var(--dyte-colors-text-900, 255 255 255 / 0.88)))}.channel-container .channel:hover .latest-msg-time,.channel-container .channel:hover .latest-msg,.channel-container .channel:hover .latest-msg.new{color:rgb(var(--dyte-colors-text-on-brand-700, var(--dyte-colors-text-700, 255 255 255 / 0.64)))}.channel-container .channel-display{display:flex;gap:var(--dyte-space-2, 8px);align-self:center;padding-left:var(--dyte-space-2, 8px);padding-right:var(--dyte-space-0, 0px)}.channel-container .channel-display dyte-avatar{height:var(--dyte-space-9, 36px);width:var(--dyte-space-9, 36px);flex-shrink:0;font-size:12px}.channel-container .channel-display dyte-icon{height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px);flex-shrink:0;padding:var(--dyte-space-2, 8px);border-radius:9999px;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-on-brand-1000, var(--dyte-colors-text-1000, 255 255 255)))}.channel-container .channel-card{width:100%;padding-top:var(--dyte-space-2, 8px);padding-bottom:var(--dyte-space-2, 8px);padding-right:var(--dyte-space-2, 8px);padding-left:var(--dyte-space-1, 4px)}.channel-container .channel-card .channel-name{max-width:var(--dyte-space-60, 240px);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:14px;font-weight:500}.channel-container .channel-card .latest-msg{margin:var(--dyte-space-0, 0px);max-width:var(--dyte-space-56, 224px);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:14px}.channel-container .channel-card .latest-msg.new{font-weight:200;font-style:italic;color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}.channel-container .channel-card .latest-msg-time{font-size:12px;color:rgb(var(--dyte-colors-text-900, 255 255 255 / 0.88))}.channel-container .channel-meta{width:var(--dyte-space-12, 48px);display:flex;flex-direction:column;align-items:flex-end;justify-content:space-between;gap:var(--dyte-space-1\\\\.5, 6px);font-size:12px;font-weight:600}.channel-container .new-msgs-count{height:var(--dyte-space-4, 16px);min-width:var(--dyte-space-4, 16px);padding-top:1px;padding-bottom:1px;padding-left:2px;padding-right:2px;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-success, 98 165 4) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-on-brand-1000, var(--dyte-colors-text-1000, 255 255 255)));border-radius:var(--dyte-border-radius-sm, 4px);text-align:center;font-size:12px}.channel-container .selected{--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-300, 73 124 253) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-on-brand-900, var(--dyte-colors-text-900, 255 255 255 / 0.88)))}.channel-container .selected .latest-msg-time,.channel-container .selected .latest-msg,.channel-container .selected .latest-msg.new{color:rgb(var(--dyte-colors-text-on-brand-700, var(--dyte-colors-text-700, 255 255 255 / 0.64)))}.channel-container .highlight .channel-title span{font-weight:700}.latest-msg p{margin:var(--dyte-space-0, 0px);margin-right:var(--dyte-space-1, 4px);display:inline-block}.latest-msg blockquote{display:none}.recent-message-row{margin-bottom:var(--dyte-space-2, 8px);display:flex;width:100%;flex-direction:row;justify-content:space-between}\";\nconst DyteChannelSelectorUiStyle0 = dyteChannelSelectorUiCss;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst DyteChannelSelectorUi = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.channelChanged = createEvent(this, \"channelChanged\", 7);\n        /** Icon pack */\n        this.iconPack = defaultIconPack;\n        /** Language */\n        this.t = useLanguage();\n        /** show recent message in channel */\n        this.showRecentMessage = false;\n        this.isHidden = false;\n        this.searchQuery = '';\n        this.handleResize = (e) => {\n            this.isHidden = !e.matches;\n        };\n        this.channelSelected = (channelId) => {\n            this.channelChanged.emit(channelId);\n            this.onRevealClicked();\n        };\n        this.onSearchInput = (e) => {\n            this.searchQuery = e.target.value;\n        };\n        this.onRevealClicked = () => {\n            if (this.matchMedia.matches)\n                return;\n            this.isHidden = !this.isHidden;\n        };\n        this.renderChannelDisplayPic = (channel) => {\n            const hasDisplayPic = channel.displayPictureUrl && channel.displayPictureUrl.length !== 0;\n            if (channel.isDirectMessage || hasDisplayPic) {\n                return (h(\"div\", { class: \"channel-display\" }, h(\"dyte-avatar\", { participant: {\n                        name: channel.displayName,\n                        picture: channel.displayPictureUrl,\n                    } })));\n            }\n            else {\n                return (h(\"div\", { class: \"channel-display\" }, h(\"dyte-icon\", { icon: this.iconPack.people, slot: \"start\" })));\n            }\n        };\n        this.renderRecentMessage = (channel) => {\n            if (!channel.latestMessage)\n                return h(\"p\", { class: \"latest-msg new\" }, this.t('chat.start_conversation'));\n            let senderFragment = channel.isDirectMessage ? '' : `${channel.latestMessage.displayName}: `;\n            if (channel.latestMessage.type === 'text') {\n                return (h(\"p\", { class: \"latest-msg\" }, senderFragment, h(TextMessageView, { message: channel.latestMessage.message })));\n            }\n            // non text\n            let messageFragment = '';\n            if (channel.latestMessage.type === 'image') {\n                messageFragment = this.t('image');\n            }\n            else if (channel.latestMessage.type === 'file') {\n                messageFragment = this.t('file');\n            }\n            return h(\"p\", { class: \"latest-msg\" }, `${senderFragment}${messageFragment}`);\n        };\n    }\n    connectedCallback() {\n        this.matchMedia = window.matchMedia(`(orientation: landscape) and (min-width: 400px)`);\n        this.matchMedia.addEventListener('change', this.handleResize);\n        this.isHidden = !this.matchMedia.matches;\n    }\n    disconnectedCallback() {\n        this.matchMedia.removeEventListener('change', this.handleResize);\n    }\n    componentDidRender() {\n        this.$el.style.transform = this.isHidden ? 'translateX(-380px)' : 'translateX(0)';\n    }\n    getTimeLabel(message) {\n        const messageDate = message.time;\n        const today = new Date();\n        const yesterday = new Date(today);\n        yesterday.setDate(today.getDate() - 1);\n        const firstDayOfWeek = new Date(today);\n        firstDayOfWeek.setDate(today.getDate() - today.getDay() - 1);\n        if (messageDate.toDateString() === today.toDateString()) {\n            return messageDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n        }\n        else if (messageDate.toDateString() === yesterday.toDateString()) {\n            return this.t('date.yesteday');\n        }\n        else if (messageDate > firstDayOfWeek) {\n            const weekdays = [\n                'date.sunday',\n                'date.monday',\n                'date.tuesday',\n                'date.wednesday',\n                'date.thursday',\n                'date.friday',\n                'date.saturday',\n            ];\n            return this.t(weekdays[messageDate.getDay()]);\n        }\n        else {\n            return Intl.DateTimeFormat([], {\n                day: '2-digit',\n                month: '2-digit',\n                year: '2-digit',\n            }).format(messageDate);\n        }\n    }\n    render() {\n        return (h(Host, { key: '27beb64372e71cdbb45b0bc42e834a063e266cab' }, h(\"div\", { key: 'f3cb26446d420df375d787366b02d1013ecad4f0', class: \"container\", ref: (el) => (this.$el = el) }, this.isHidden && (h(\"dyte-button\", { key: 'be5dbd465d468c14be597c0ceda26f0cf9075fe5', kind: \"icon\", variant: \"ghost\", size: \"md\", onClick: this.onRevealClicked, class: \"sidebar-btn\" }, h(\"dyte-icon\", { key: '9e3d65b701a7741226c8f9acbda523c584f7c7b7', icon: this.isHidden ? this.iconPack.chevron_left : this.iconPack.dismiss }))), h(\"slot\", { key: '8d358b9e23259c5ebf45898c0938d5cbfbcd7b56', name: \"header\" }), h(\"div\", { key: '35f4e5036e536020337db098c7769d414215bf96', class: \"search-wrapper\" }, h(\"div\", { key: 'd5663429fbf31cf231204c5cde31e1f9a0e9afe0', class: \"search\" }, h(\"input\", { key: '9c156d36dc6501de62f7ba622a20b7ce407a2ede', type: \"search\", autocomplete: \"off\", placeholder: this.t('chat.search_conversations'), onInput: this.onSearchInput }), h(\"dyte-icon\", { key: '498ecabfbce5b0725618e1112dc1dcb7eca2dd58', icon: this.iconPack.search, class: \"search-icon\" }))), h(\"div\", { key: 'c33ba36c7e50fda20ef39ee12725e4d64f8cb520', class: \"channel-container scrollbar\", role: \"list\" }, this.channels\n            .filter((channel) => this.searchQuery === '' || channel.displayName.includes(this.searchQuery))\n            .map((channel) => {\n            return (h(\"div\", { class: {\n                    channel: true,\n                    selected: channel.id === this.selectedChannelId,\n                    highlight: !!channel.unreadCount,\n                }, role: \"listitem\", onClick: () => {\n                    this.channelSelected(channel.id);\n                } }, this.renderChannelDisplayPic(channel), h(\"div\", { class: \"channel-card\", \"is-direct-message\": channel.isDirectMessage }, h(\"div\", { class: 'recent-message-row' }, h(\"span\", { class: \"channel-name\" }, channel.displayName), channel.latestMessage && (h(\"span\", { class: \"latest-msg-time\" }, this.getTimeLabel(channel.latestMessage)))), h(\"div\", { class: 'recent-message-row' }, this.renderRecentMessage(channel), channel.unreadCount > 0 && channel.id !== this.selectedChannelId ? (h(\"span\", { class: \"new-msgs-count\" }, channel.unreadCount < 99 ? channel.unreadCount : '99+')) : null))));\n        }))), !this.isHidden && (h(\"div\", { key: 'cc51252e87759bb0fa10de6bae2b3b9af783693f', class: \"overlay-container\" }, h(\"dyte-button\", { key: '5d66dc9ddbfa169f2c3c077d919d0fcaf4c6eeca', kind: \"icon\", variant: \"ghost\", size: \"md\", onClick: this.onRevealClicked, class: \"sidebar-btn\" }, h(\"dyte-icon\", { key: 'd81b19a9e5af1a62df723cd32d27779c59dd3ded', icon: this.isHidden ? this.iconPack.chevron_left : this.iconPack.dismiss }))))));\n    }\n};\n__decorate([\n    SyncWithStore()\n], DyteChannelSelectorUi.prototype, \"iconPack\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteChannelSelectorUi.prototype, \"t\", void 0);\nDyteChannelSelectorUi.style = DyteChannelSelectorUiStyle0;\n\nexport { DyteChannelSelectorUi as dyte_channel_selector_ui };\n","import { h } from './index-08f4416b.js';\nimport { M as MAX_TEXT_LENGTH, j as extractReplyBlock, s as stripOutReplyBlock, f as parseRichText } from './chat-d3096b6e.js';\n\nconst renderLink = (content) => {\n    return (h(\"a\", { class: \"link\", href: content, target: \"_blank\", rel: \"noopener noreferrer\" }, content));\n};\nconst renderBold = (content) => {\n    if (typeof content === 'string') {\n        return h(\"b\", null, content);\n    }\n    return h(\"b\", null, renderTokens(content));\n};\nconst renderItalic = (content) => {\n    if (typeof content === 'string') {\n        return h(\"i\", null, content);\n    }\n    return h(\"i\", null, renderTokens(content));\n};\nconst renderStrikethrough = (content) => {\n    if (typeof content === 'string') {\n        return h(\"s\", null, content);\n    }\n    return h(\"b\", null, renderTokens(content));\n};\nconst renderPlainText = (content) => {\n    if (typeof content === 'string') {\n        return content;\n    }\n    return h(\"p\", null, renderTokens(content));\n};\nconst renderTokens = (tokens) => {\n    return tokens.map((token) => {\n        switch (token.type) {\n            case 'a':\n                if (typeof token.content === 'string') {\n                    return renderLink(token.content);\n                }\n            case 'b':\n                return renderBold(token.content);\n            case 'i':\n                return renderItalic(token.content);\n            case 's':\n                return renderStrikethrough(token.content);\n            case 'q':\n                return h(\"span\", { class: \"block-quote\" });\n            case 'plain_text':\n            default:\n                return renderPlainText(token.content);\n        }\n    });\n};\nconst TextMessageView = ({ message }) => {\n    const slicedMessage = message.slice(0, MAX_TEXT_LENGTH);\n    const withReply = extractReplyBlock(slicedMessage, true);\n    const withoutReply = stripOutReplyBlock(slicedMessage);\n    return (h(\"p\", null,\n        withReply.length !== 0 && (h(\"blockquote\", null, withReply.split('\\n').map((line) => {\n            const tokens = parseRichText(line);\n            return h(\"p\", null, renderTokens(tokens));\n        }))),\n        withoutReply.split('\\n').map((line) => {\n            const tokens = parseRichText(line);\n            return h(\"p\", null, renderTokens(tokens));\n        })));\n};\n\nexport { TextMessageView as T };\n"],"names":["SyncWithStore","proto","propName","connectedCallback","disconnectedCallback","host","getElement","this","storeValue","uiStore","state","appendElement","call","removeElement","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DyteChannelSelectorUi","constructor","hostRef","registerInstance","channelChanged","createEvent","iconPack","defaultIconPack","t","useLanguage","showRecentMessage","isHidden","searchQuery","handleResize","e","matches","channelSelected","channelId","emit","onRevealClicked","onSearchInput","value","matchMedia","renderChannelDisplayPic","channel","hasDisplayPic","displayPictureUrl","isDirectMessage","h","class","participant","name","displayName","picture","icon","people","slot","renderRecentMessage","latestMessage","senderFragment","concat","type","TextMessageView","message","messageFragment","window","addEventListener","removeEventListener","componentDidRender","$el","style","transform","getTimeLabel","messageDate","time","today","Date","yesterday","setDate","getDate","firstDayOfWeek","getDay","toDateString","toLocaleTimeString","hour","minute","weekdays","Intl","DateTimeFormat","day","month","year","format","render","Host","ref","el","kind","variant","size","onClick","chevron_left","dismiss","autocomplete","placeholder","onInput","search","role","channels","filter","includes","map","selected","id","selectedChannelId","highlight","unreadCount","prototype","renderTokens","tokens","token","content","href","rel","renderBold","renderItalic","renderStrikethrough","renderPlainText","_ref","slicedMessage","slice","MAX_TEXT_LENGTH","withReply","extractReplyBlock","withoutReply","stripOutReplyBlock","split","line","parseRichText"],"sourceRoot":""}